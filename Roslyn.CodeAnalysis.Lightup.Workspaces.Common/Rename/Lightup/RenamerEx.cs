// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Rename.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Rename.Renamer.</summary>
    public static class RenamerEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Rename.Renamer";

        private delegate System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Lightup.RenameDocumentActionSetWrapper> RenameDocumentAsyncDelegate0(Microsoft.CodeAnalysis.Document document, System.String? newDocumentName, System.Collections.Generic.IReadOnlyList<System.String>? newDocumentFolders, Microsoft.CodeAnalysis.Options.OptionSet? optionSet, System.Threading.CancellationToken cancellationToken);
        private delegate System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Lightup.RenameDocumentActionSetWrapper> RenameDocumentAsyncDelegate1(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Rename.Lightup.DocumentRenameOptionsWrapper options, System.String? newDocumentName, System.Collections.Generic.IReadOnlyList<System.String>? newDocumentFolders, System.Threading.CancellationToken cancellationToken);
        private delegate System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Solution> RenameSymbolAsyncDelegate2(Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Rename.Lightup.SymbolRenameOptionsWrapper options, System.String newName, System.Threading.CancellationToken cancellationToken);

        private static readonly RenameDocumentAsyncDelegate0 RenameDocumentAsyncFunc0;
        private static readonly RenameDocumentAsyncDelegate1 RenameDocumentAsyncFunc1;
        private static readonly RenameSymbolAsyncDelegate2 RenameSymbolAsyncFunc2;

        static RenamerEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            RenameDocumentAsyncFunc0 = LightupHelper.CreateStaticMethodAccessor<RenameDocumentAsyncDelegate0>(wrappedType, "RenameDocumentAsync", "documentDocument", "newDocumentNameString", "newDocumentFoldersIReadOnlyList`1", "optionSetOptionSet", "cancellationTokenCancellationToken");
            RenameDocumentAsyncFunc1 = LightupHelper.CreateStaticMethodAccessor<RenameDocumentAsyncDelegate1>(wrappedType, "RenameDocumentAsync", "documentDocument", "optionsDocumentRenameOptions", "newDocumentNameString", "newDocumentFoldersIReadOnlyList`1", "cancellationTokenCancellationToken");
            RenameSymbolAsyncFunc2 = LightupHelper.CreateStaticMethodAccessor<RenameSymbolAsyncDelegate2>(wrappedType, "RenameSymbolAsync", "solutionSolution", "symbolISymbol", "optionsSymbolRenameOptions", "newNameString", "cancellationTokenCancellationToken");
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Lightup.RenameDocumentActionSetWrapper> RenameDocumentAsync(Microsoft.CodeAnalysis.Document document, System.String? newDocumentName, System.Collections.Generic.IReadOnlyList<System.String>? newDocumentFolders, Microsoft.CodeAnalysis.Options.OptionSet? optionSet, System.Threading.CancellationToken cancellationToken)
            => RenameDocumentAsyncFunc0(document, newDocumentName, newDocumentFolders, optionSet, cancellationToken);

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Lightup.RenameDocumentActionSetWrapper> RenameDocumentAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Rename.Lightup.DocumentRenameOptionsWrapper options, System.String? newDocumentName, System.Collections.Generic.IReadOnlyList<System.String>? newDocumentFolders, System.Threading.CancellationToken cancellationToken)
            => RenameDocumentAsyncFunc1(document, options, newDocumentName, newDocumentFolders, cancellationToken);

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Solution> RenameSymbolAsync(Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Rename.Lightup.SymbolRenameOptionsWrapper options, System.String newName, System.Threading.CancellationToken cancellationToken)
            => RenameSymbolAsyncFunc2(solution, symbol, options, newName, cancellationToken);
    }
}
