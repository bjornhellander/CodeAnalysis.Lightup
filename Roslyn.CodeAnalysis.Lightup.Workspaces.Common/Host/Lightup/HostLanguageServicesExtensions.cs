// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Host.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Host.HostLanguageServices.</summary>
    public static class HostLanguageServicesExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Host.HostLanguageServices";

        private delegate Microsoft.CodeAnalysis.Host.Lightup.LanguageServicesWrapper LanguageServicesGetterDelegate(Microsoft.CodeAnalysis.Host.HostLanguageServices? _obj);

        private static readonly LanguageServicesGetterDelegate LanguageServicesGetterFunc;

        static HostLanguageServicesExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            LanguageServicesGetterFunc = LightupHelper.CreateInstanceGetAccessor<LanguageServicesGetterDelegate>(wrappedType, nameof(LanguageServices));
        }

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static Microsoft.CodeAnalysis.Host.Lightup.LanguageServicesWrapper LanguageServices(this Microsoft.CodeAnalysis.Host.HostLanguageServices _obj)
            => LanguageServicesGetterFunc(_obj);
    }
}
