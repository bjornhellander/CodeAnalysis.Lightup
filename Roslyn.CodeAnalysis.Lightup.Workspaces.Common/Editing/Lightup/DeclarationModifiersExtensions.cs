// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Editing.Lightup
{
    public static class DeclarationModifiersExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Editing.DeclarationModifiers";

        private delegate DeclarationModifiers ExternGetterDelegate();
        private delegate DeclarationModifiers FileGetterDelegate();
        private delegate DeclarationModifiers RequiredGetterDelegate();
        private delegate DeclarationModifiers VolatileGetterDelegate();

        private delegate Boolean IsExternGetterDelegate(DeclarationModifiers? _obj);
        private delegate Boolean IsFileGetterDelegate(DeclarationModifiers? _obj);
        private delegate Boolean IsRequiredGetterDelegate(DeclarationModifiers? _obj);
        private delegate Boolean IsVolatileGetterDelegate(DeclarationModifiers? _obj);

        private delegate DeclarationModifiers WithIsExternDelegate0(DeclarationModifiers? _obj, Boolean isExtern);
        private delegate DeclarationModifiers WithIsFileDelegate1(DeclarationModifiers? _obj, Boolean isFile);
        private delegate DeclarationModifiers WithIsRefDelegate2(DeclarationModifiers? _obj, Boolean isRef);
        private delegate DeclarationModifiers WithIsRequiredDelegate3(DeclarationModifiers? _obj, Boolean isRequired);
        private delegate DeclarationModifiers WithIsVolatileDelegate4(DeclarationModifiers? _obj, Boolean isVolatile);

        private static readonly ExternGetterDelegate ExternGetterFunc;
        private static readonly FileGetterDelegate FileGetterFunc;
        private static readonly RequiredGetterDelegate RequiredGetterFunc;
        private static readonly VolatileGetterDelegate VolatileGetterFunc;

        private static readonly IsExternGetterDelegate IsExternGetterFunc;
        private static readonly IsFileGetterDelegate IsFileGetterFunc;
        private static readonly IsRequiredGetterDelegate IsRequiredGetterFunc;
        private static readonly IsVolatileGetterDelegate IsVolatileGetterFunc;

        private static readonly WithIsExternDelegate0 WithIsExternFunc0;
        private static readonly WithIsFileDelegate1 WithIsFileFunc1;
        private static readonly WithIsRefDelegate2 WithIsRefFunc2;
        private static readonly WithIsRequiredDelegate3 WithIsRequiredFunc3;
        private static readonly WithIsVolatileDelegate4 WithIsVolatileFunc4;

        static DeclarationModifiersExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            ExternGetterFunc = LightupHelper.CreateStaticGetAccessor<ExternGetterDelegate>(wrappedType, nameof(Extern));
            FileGetterFunc = LightupHelper.CreateStaticGetAccessor<FileGetterDelegate>(wrappedType, nameof(File));
            RequiredGetterFunc = LightupHelper.CreateStaticGetAccessor<RequiredGetterDelegate>(wrappedType, nameof(Required));
            VolatileGetterFunc = LightupHelper.CreateStaticGetAccessor<VolatileGetterDelegate>(wrappedType, nameof(Volatile));

            IsExternGetterFunc = LightupHelper.CreateInstanceGetAccessor<IsExternGetterDelegate>(wrappedType, nameof(IsExtern));
            IsFileGetterFunc = LightupHelper.CreateInstanceGetAccessor<IsFileGetterDelegate>(wrappedType, nameof(IsFile));
            IsRequiredGetterFunc = LightupHelper.CreateInstanceGetAccessor<IsRequiredGetterDelegate>(wrappedType, nameof(IsRequired));
            IsVolatileGetterFunc = LightupHelper.CreateInstanceGetAccessor<IsVolatileGetterDelegate>(wrappedType, nameof(IsVolatile));

            WithIsExternFunc0 = LightupHelper.CreateInstanceMethodAccessor<WithIsExternDelegate0>(wrappedType, nameof(WithIsExtern));
            WithIsFileFunc1 = LightupHelper.CreateInstanceMethodAccessor<WithIsFileDelegate1>(wrappedType, nameof(WithIsFile));
            WithIsRefFunc2 = LightupHelper.CreateInstanceMethodAccessor<WithIsRefDelegate2>(wrappedType, nameof(WithIsRef));
            WithIsRequiredFunc3 = LightupHelper.CreateInstanceMethodAccessor<WithIsRequiredDelegate3>(wrappedType, nameof(WithIsRequired));
            WithIsVolatileFunc4 = LightupHelper.CreateInstanceMethodAccessor<WithIsVolatileDelegate4>(wrappedType, nameof(WithIsVolatile));
        }

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static DeclarationModifiers Extern()
            => ExternGetterFunc();

        /// <summary>Property added in version 4.4.0.0 of Roslyn.</summary>
        public static DeclarationModifiers File()
            => FileGetterFunc();

        /// <summary>Property added in version 4.4.0.0 of Roslyn.</summary>
        public static DeclarationModifiers Required()
            => RequiredGetterFunc();

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static DeclarationModifiers Volatile()
            => VolatileGetterFunc();

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static Boolean IsExtern(this DeclarationModifiers _obj)
            => IsExternGetterFunc(_obj);

        /// <summary>Property added in version 4.4.0.0 of Roslyn.</summary>
        public static Boolean IsFile(this DeclarationModifiers _obj)
            => IsFileGetterFunc(_obj);

        /// <summary>Property added in version 4.4.0.0 of Roslyn.</summary>
        public static Boolean IsRequired(this DeclarationModifiers _obj)
            => IsRequiredGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static Boolean IsVolatile(this DeclarationModifiers _obj)
            => IsVolatileGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static DeclarationModifiers WithIsExtern(this DeclarationModifiers _obj, Boolean isExtern)
            => WithIsExternFunc0(_obj, isExtern);

        /// <summary>Method added in version 4.4.0.0 of Roslyn.</summary>
        public static DeclarationModifiers WithIsFile(this DeclarationModifiers _obj, Boolean isFile)
            => WithIsFileFunc1(_obj, isFile);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static DeclarationModifiers WithIsRef(this DeclarationModifiers _obj, Boolean isRef)
            => WithIsRefFunc2(_obj, isRef);

        /// <summary>Method added in version 4.4.0.0 of Roslyn.</summary>
        public static DeclarationModifiers WithIsRequired(this DeclarationModifiers _obj, Boolean isRequired)
            => WithIsRequiredFunc3(_obj, isRequired);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static DeclarationModifiers WithIsVolatile(this DeclarationModifiers _obj, Boolean isVolatile)
            => WithIsVolatileFunc4(_obj, isVolatile);
    }
}
