// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Editing.Lightup
{
    public static class SyntaxEditorExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Editing.SyntaxEditor";

        private static readonly Type? WrappedType; // NOTE: Used via reflection

        static SyntaxEditorExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);
        }
    }
}
