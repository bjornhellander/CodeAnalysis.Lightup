// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CodeFixes.Lightup
{
    public static class ExportCodeFixProviderAttributeExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute";

        private static readonly Type? WrappedType; // NOTE: Used via reflection

        private delegate String[]? DocumentExtensionsGetterDelegate(ExportCodeFixProviderAttribute? _obj);
        private delegate void DocumentExtensionsSetterDelegate(ExportCodeFixProviderAttribute? _obj, String[]? _value);
        private delegate String[] DocumentKindsGetterDelegate(ExportCodeFixProviderAttribute? _obj);
        private delegate void DocumentKindsSetterDelegate(ExportCodeFixProviderAttribute? _obj, String[] _value);

        private static readonly DocumentExtensionsGetterDelegate DocumentExtensionsGetterFunc;
        private static readonly DocumentExtensionsSetterDelegate DocumentExtensionsSetterFunc;
        private static readonly DocumentKindsGetterDelegate DocumentKindsGetterFunc;
        private static readonly DocumentKindsSetterDelegate DocumentKindsSetterFunc;

        static ExportCodeFixProviderAttributeExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            DocumentExtensionsGetterFunc = LightupHelper.CreateInstanceGetAccessor<DocumentExtensionsGetterDelegate>(WrappedType, nameof(DocumentExtensions));
            DocumentExtensionsSetterFunc = LightupHelper.CreateInstanceSetAccessor<DocumentExtensionsSetterDelegate>(WrappedType, nameof(DocumentExtensions));
            DocumentKindsGetterFunc = LightupHelper.CreateInstanceGetAccessor<DocumentKindsGetterDelegate>(WrappedType, nameof(DocumentKinds));
            DocumentKindsSetterFunc = LightupHelper.CreateInstanceSetAccessor<DocumentKindsSetterDelegate>(WrappedType, nameof(DocumentKinds));
        }

        /// <summary>Property added in version 4.8.0.0 of Roslyn.</summary>
        public static String[]? DocumentExtensions(this ExportCodeFixProviderAttribute _obj)
            => DocumentExtensionsGetterFunc(_obj);

        /// <summary>Property added in version 4.8.0.0 of Roslyn.</summary>
        public static void SetDocumentExtensions(this ExportCodeFixProviderAttribute _obj, String[]? _value)
            => DocumentExtensionsSetterFunc(_obj, _value);

        /// <summary>Property added in version 4.8.0.0 of Roslyn.</summary>
        public static String[] DocumentKinds(this ExportCodeFixProviderAttribute _obj)
            => DocumentKindsGetterFunc(_obj);

        /// <summary>Property added in version 4.8.0.0 of Roslyn.</summary>
        public static void SetDocumentKinds(this ExportCodeFixProviderAttribute _obj, String[] _value)
            => DocumentKindsSetterFunc(_obj, _value);
    }
}
