// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.CodeFixes.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.</summary>
    public static class ExportCodeFixProviderAttributeExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute";

        private delegate System.String[]? DocumentExtensionsGetterDelegate(Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute? _obj);
        private delegate void DocumentExtensionsSetterDelegate(Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute? _obj, System.String[]? _value);
        private delegate System.String[] DocumentKindsGetterDelegate(Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute? _obj);
        private delegate void DocumentKindsSetterDelegate(Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute? _obj, System.String[] _value);

        private static readonly DocumentExtensionsGetterDelegate DocumentExtensionsGetterFunc;
        private static readonly DocumentExtensionsSetterDelegate DocumentExtensionsSetterFunc;
        private static readonly DocumentKindsGetterDelegate DocumentKindsGetterFunc;
        private static readonly DocumentKindsSetterDelegate DocumentKindsSetterFunc;

        static ExportCodeFixProviderAttributeExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            DocumentExtensionsGetterFunc = LightupHelper.CreateInstanceGetAccessor<DocumentExtensionsGetterDelegate>(wrappedType, nameof(DocumentExtensions));
            DocumentExtensionsSetterFunc = LightupHelper.CreateInstanceSetAccessor<DocumentExtensionsSetterDelegate>(wrappedType, nameof(DocumentExtensions));
            DocumentKindsGetterFunc = LightupHelper.CreateInstanceGetAccessor<DocumentKindsGetterDelegate>(wrappedType, nameof(DocumentKinds));
            DocumentKindsSetterFunc = LightupHelper.CreateInstanceSetAccessor<DocumentKindsSetterDelegate>(wrappedType, nameof(DocumentKinds));
        }

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static System.String[]? DocumentExtensions(this Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute _obj)
            => DocumentExtensionsGetterFunc(_obj);

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static void SetDocumentExtensions(this Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute _obj, System.String[]? _value)
            => DocumentExtensionsSetterFunc(_obj, _value);

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static System.String[] DocumentKinds(this Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute _obj)
            => DocumentKindsGetterFunc(_obj);

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static void SetDocumentKinds(this Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute _obj, System.String[] _value)
            => DocumentKindsSetterFunc(_obj, _value);
    }
}
