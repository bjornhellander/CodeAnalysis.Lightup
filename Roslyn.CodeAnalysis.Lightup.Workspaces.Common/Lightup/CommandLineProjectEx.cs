// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CommandLineProject. Added in version 4.0.0.0.</summary>
    public static partial class CommandLineProjectEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CommandLineProject";

        private delegate Microsoft.CodeAnalysis.ProjectInfo CreateProjectInfoDelegate0(System.String projectName, System.String language, System.Collections.Generic.IEnumerable<System.String> commandLineArgs, System.String projectDirectory, Microsoft.CodeAnalysis.Workspace? workspace);
        private delegate Microsoft.CodeAnalysis.ProjectInfo CreateProjectInfoDelegate1(System.String projectName, System.String language, System.String commandLine, System.String baseDirectory, Microsoft.CodeAnalysis.Workspace? workspace);

        private static readonly CreateProjectInfoDelegate0 CreateProjectInfoFunc0;
        private static readonly CreateProjectInfoDelegate1 CreateProjectInfoFunc1;

        static CommandLineProjectEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            CreateProjectInfoFunc0 = LightupHelper.CreateStaticMethodAccessor<CreateProjectInfoDelegate0>(wrappedType, "CreateProjectInfo", "projectNameString", "languageString", "commandLineArgsIEnumerable`1", "projectDirectoryString", "workspaceWorkspace");
            CreateProjectInfoFunc1 = LightupHelper.CreateStaticMethodAccessor<CreateProjectInfoDelegate1>(wrappedType, "CreateProjectInfo", "projectNameString", "languageString", "commandLineString", "baseDirectoryString", "workspaceWorkspace");
        }

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static Microsoft.CodeAnalysis.ProjectInfo CreateProjectInfo(System.String projectName, System.String language, System.Collections.Generic.IEnumerable<System.String> commandLineArgs, System.String projectDirectory, Microsoft.CodeAnalysis.Workspace? workspace)
            => CreateProjectInfoFunc0(projectName, language, commandLineArgs, projectDirectory, workspace);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static Microsoft.CodeAnalysis.ProjectInfo CreateProjectInfo(System.String projectName, System.String language, System.String commandLine, System.String baseDirectory, Microsoft.CodeAnalysis.Workspace? workspace)
            => CreateProjectInfoFunc1(projectName, language, commandLine, baseDirectory, workspace);
    }
}
