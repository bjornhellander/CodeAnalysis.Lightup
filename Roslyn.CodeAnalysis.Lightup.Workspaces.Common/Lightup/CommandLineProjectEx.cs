// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CommandLineProject. Added in version 4.0.0.0.</summary>
    public static class CommandLineProjectEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CommandLineProject";

        private delegate ProjectInfo CreateProjectInfoDelegate0(String projectName, String language, IEnumerable<String> commandLineArgs, String projectDirectory, Workspace? workspace);
        private delegate ProjectInfo CreateProjectInfoDelegate1(String projectName, String language, String commandLine, String baseDirectory, Workspace? workspace);

        private static readonly CreateProjectInfoDelegate0 CreateProjectInfoFunc0;
        private static readonly CreateProjectInfoDelegate1 CreateProjectInfoFunc1;

        static CommandLineProjectEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            CreateProjectInfoFunc0 = LightupHelper.CreateStaticMethodAccessor<CreateProjectInfoDelegate0>(wrappedType, nameof(CreateProjectInfo));
            CreateProjectInfoFunc1 = LightupHelper.CreateStaticMethodAccessor<CreateProjectInfoDelegate1>(wrappedType, nameof(CreateProjectInfo));
        }

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static ProjectInfo CreateProjectInfo(String projectName, String language, IEnumerable<String> commandLineArgs, String projectDirectory, Workspace? workspace)
            => CreateProjectInfoFunc0(projectName, language, commandLineArgs, projectDirectory, workspace);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static ProjectInfo CreateProjectInfo(String projectName, String language, String commandLine, String baseDirectory, Workspace? workspace)
            => CreateProjectInfoFunc1(projectName, language, commandLine, baseDirectory, workspace);
    }
}
