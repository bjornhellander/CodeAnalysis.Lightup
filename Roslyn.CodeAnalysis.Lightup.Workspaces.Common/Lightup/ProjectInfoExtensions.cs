// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.ProjectInfo.</summary>
    public static partial class ProjectInfoExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.ProjectInfo";

        private delegate System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.DocumentInfo> AnalyzerConfigDocumentsGetterDelegate(Microsoft.CodeAnalysis.ProjectInfo? _obj);
        private delegate Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper CompilationOutputInfoGetterDelegate(Microsoft.CodeAnalysis.ProjectInfo? _obj);

        private delegate Microsoft.CodeAnalysis.ProjectInfo WithAnalyzerConfigDocumentsDelegate0(Microsoft.CodeAnalysis.ProjectInfo? _obj, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.DocumentInfo>? analyzerConfigDocuments);
        private delegate Microsoft.CodeAnalysis.ProjectInfo WithCompilationOutputInfoDelegate1(Microsoft.CodeAnalysis.ProjectInfo? _obj, in Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper info);
        private delegate Microsoft.CodeAnalysis.ProjectInfo WithDefaultNamespaceDelegate2(Microsoft.CodeAnalysis.ProjectInfo? _obj, System.String? defaultNamespace);

        private static readonly AnalyzerConfigDocumentsGetterDelegate AnalyzerConfigDocumentsGetterFunc;
        private static readonly CompilationOutputInfoGetterDelegate CompilationOutputInfoGetterFunc;

        private static readonly WithAnalyzerConfigDocumentsDelegate0 WithAnalyzerConfigDocumentsFunc0;
        private static readonly WithCompilationOutputInfoDelegate1 WithCompilationOutputInfoFunc1;
        private static readonly WithDefaultNamespaceDelegate2 WithDefaultNamespaceFunc2;

        static ProjectInfoExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AnalyzerConfigDocumentsGetterFunc = LightupHelper.CreateInstanceGetAccessor<AnalyzerConfigDocumentsGetterDelegate>(wrappedType, nameof(AnalyzerConfigDocuments));
            CompilationOutputInfoGetterFunc = LightupHelper.CreateInstanceGetAccessor<CompilationOutputInfoGetterDelegate>(wrappedType, nameof(CompilationOutputInfo));

            WithAnalyzerConfigDocumentsFunc0 = LightupHelper.CreateInstanceMethodAccessor<WithAnalyzerConfigDocumentsDelegate0>(wrappedType, "WithAnalyzerConfigDocuments", "analyzerConfigDocumentsIEnumerable`1");
            WithCompilationOutputInfoFunc1 = LightupHelper.CreateInstanceMethodAccessor<WithCompilationOutputInfoDelegate1>(wrappedType, "WithCompilationOutputInfo", "infoCompilationOutputInfo&");
            WithDefaultNamespaceFunc2 = LightupHelper.CreateInstanceMethodAccessor<WithDefaultNamespaceDelegate2>(wrappedType, "WithDefaultNamespace", "defaultNamespaceString");
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.DocumentInfo> AnalyzerConfigDocuments(this Microsoft.CodeAnalysis.ProjectInfo _obj)
            => AnalyzerConfigDocumentsGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper CompilationOutputInfo(this Microsoft.CodeAnalysis.ProjectInfo _obj)
            => CompilationOutputInfoGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.ProjectInfo WithAnalyzerConfigDocuments(this Microsoft.CodeAnalysis.ProjectInfo _obj, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.DocumentInfo>? analyzerConfigDocuments)
            => WithAnalyzerConfigDocumentsFunc0(_obj, analyzerConfigDocuments);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.ProjectInfo WithCompilationOutputInfo(this Microsoft.CodeAnalysis.ProjectInfo _obj, in Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper info)
            => WithCompilationOutputInfoFunc1(_obj, in info);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.ProjectInfo WithDefaultNamespace(this Microsoft.CodeAnalysis.ProjectInfo _obj, System.String? defaultNamespace)
            => WithDefaultNamespaceFunc2(_obj, defaultNamespace);
    }
}
