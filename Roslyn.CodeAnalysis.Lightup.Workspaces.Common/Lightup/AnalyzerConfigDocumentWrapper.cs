// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.AnalyzerConfigDocument. Added in version 3.8.0.0.</summary>
    public readonly partial struct AnalyzerConfigDocumentWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.AnalyzerConfigDocument";

        private static readonly System.Type? WrappedType; // NOTE: Used via reflection

        private readonly Microsoft.CodeAnalysis.TextDocument? wrappedObject;

        static AnalyzerConfigDocumentWrapper()
        {
            WrappedType = WorkspacesCommonLightupHelper.FindType(WrappedTypeName);
        }

        private AnalyzerConfigDocumentWrapper(Microsoft.CodeAnalysis.TextDocument? obj)
        {
            wrappedObject = obj;
        }

        public static implicit operator Microsoft.CodeAnalysis.TextDocument?(AnalyzerConfigDocumentWrapper obj)
            => obj.Unwrap();

        public static bool Is(System.Object? obj)
            => WorkspacesCommonLightupHelper.Is(obj, WrappedType);

        public static AnalyzerConfigDocumentWrapper As(System.Object? obj)
        {
            var obj2 = WorkspacesCommonLightupHelper.As<Microsoft.CodeAnalysis.TextDocument>(obj, WrappedType);
            return new AnalyzerConfigDocumentWrapper(obj2);
        }

        public Microsoft.CodeAnalysis.TextDocument? Unwrap()
            => wrappedObject;
    }
}
