// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;
using System;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Class added in Roslyn version 3.8.0.0</summary>
    public readonly struct AnalyzerConfigDocumentWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.AnalyzerConfigDocument";

        public static readonly Type? WrappedType;

        private readonly TextDocument? wrappedObject;

        static AnalyzerConfigDocumentWrapper()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);
        }

        private AnalyzerConfigDocumentWrapper(TextDocument? obj)
        {
            wrappedObject = obj;
        }

        public static implicit operator TextDocument?(AnalyzerConfigDocumentWrapper obj)
            => obj.Unwrap();

        public static bool Is(object? obj)
            => LightupHelper.Is(obj, WrappedType);

        public static AnalyzerConfigDocumentWrapper As(object? obj)
        {
            var obj2 = LightupHelper.As<TextDocument>(obj, WrappedType);
            return new AnalyzerConfigDocumentWrapper(obj2);
        }

        public TextDocument? Unwrap()
            => wrappedObject;
    }
}
