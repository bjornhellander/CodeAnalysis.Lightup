// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Workspace.</summary>
    public static class WorkspaceExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Workspace";

        private delegate void TextDocumentClosedAdderDelegate(Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate);
        private delegate void TextDocumentClosedRemoverDelegate(Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate);
        private delegate void TextDocumentOpenedAdderDelegate(Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate);
        private delegate void TextDocumentOpenedRemoverDelegate(Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate);

        private delegate System.Boolean CanApplyCompilationOptionChangeDelegate0(Microsoft.CodeAnalysis.Workspace? _obj, Microsoft.CodeAnalysis.CompilationOptions oldOptions, Microsoft.CodeAnalysis.CompilationOptions newOptions, Microsoft.CodeAnalysis.Project project);
        private delegate System.Boolean CanApplyParseOptionChangeDelegate1(Microsoft.CodeAnalysis.Workspace? _obj, Microsoft.CodeAnalysis.ParseOptions oldOptions, Microsoft.CodeAnalysis.ParseOptions newOptions, Microsoft.CodeAnalysis.Project project);
        private delegate void CloseAnalyzerConfigDocumentDelegate2(Microsoft.CodeAnalysis.Workspace? _obj, Microsoft.CodeAnalysis.DocumentId documentId);
        private delegate void OpenAnalyzerConfigDocumentDelegate3(Microsoft.CodeAnalysis.Workspace? _obj, Microsoft.CodeAnalysis.DocumentId documentId, System.Boolean activate);

        private static readonly TextDocumentClosedAdderDelegate TextDocumentClosedAdderFunc;
        private static readonly TextDocumentClosedRemoverDelegate TextDocumentClosedRemoverFunc;
        private static readonly TextDocumentOpenedAdderDelegate TextDocumentOpenedAdderFunc;
        private static readonly TextDocumentOpenedRemoverDelegate TextDocumentOpenedRemoverFunc;

        private static readonly CanApplyCompilationOptionChangeDelegate0 CanApplyCompilationOptionChangeFunc0;
        private static readonly CanApplyParseOptionChangeDelegate1 CanApplyParseOptionChangeFunc1;
        private static readonly CloseAnalyzerConfigDocumentDelegate2 CloseAnalyzerConfigDocumentFunc2;
        private static readonly OpenAnalyzerConfigDocumentDelegate3 OpenAnalyzerConfigDocumentFunc3;

        static WorkspaceExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            TextDocumentClosedAdderFunc = LightupHelper.CreateInstanceAddAccessor<TextDocumentClosedAdderDelegate>(wrappedType, "TextDocumentClosed");
            TextDocumentClosedRemoverFunc = LightupHelper.CreateInstanceRemoveAccessor<TextDocumentClosedRemoverDelegate>(wrappedType, "TextDocumentClosed");
            TextDocumentOpenedAdderFunc = LightupHelper.CreateInstanceAddAccessor<TextDocumentOpenedAdderDelegate>(wrappedType, "TextDocumentOpened");
            TextDocumentOpenedRemoverFunc = LightupHelper.CreateInstanceRemoveAccessor<TextDocumentOpenedRemoverDelegate>(wrappedType, "TextDocumentOpened");

            CanApplyCompilationOptionChangeFunc0 = LightupHelper.CreateInstanceMethodAccessor<CanApplyCompilationOptionChangeDelegate0>(wrappedType, "CanApplyCompilationOptionChange", "oldOptionsCompilationOptions", "newOptionsCompilationOptions", "projectProject");
            CanApplyParseOptionChangeFunc1 = LightupHelper.CreateInstanceMethodAccessor<CanApplyParseOptionChangeDelegate1>(wrappedType, "CanApplyParseOptionChange", "oldOptionsParseOptions", "newOptionsParseOptions", "projectProject");
            CloseAnalyzerConfigDocumentFunc2 = LightupHelper.CreateInstanceMethodAccessor<CloseAnalyzerConfigDocumentDelegate2>(wrappedType, "CloseAnalyzerConfigDocument", "documentIdDocumentId");
            OpenAnalyzerConfigDocumentFunc3 = LightupHelper.CreateInstanceMethodAccessor<OpenAnalyzerConfigDocumentDelegate3>(wrappedType, "OpenAnalyzerConfigDocument", "documentIdDocumentId", "activateBoolean");
        }

        /// <summary>Event added in version 4.4.0.0.</summary>
        public static void AddTextDocumentClosed(this Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate)
            => TextDocumentClosedAdderFunc(_obj, _delegate);

        /// <summary>Event added in version 4.4.0.0.</summary>
        public static void RemoveTextDocumentClosed(this Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate)
            => TextDocumentClosedRemoverFunc(_obj, _delegate);

        /// <summary>Event added in version 4.4.0.0.</summary>
        public static void AddTextDocumentOpened(this Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate)
            => TextDocumentOpenedAdderFunc(_obj, _delegate);

        /// <summary>Event added in version 4.4.0.0.</summary>
        public static void RemoveTextDocumentOpened(this Microsoft.CodeAnalysis.Workspace _obj, System.EventHandler<Microsoft.CodeAnalysis.Lightup.TextDocumentEventArgsWrapper> _delegate)
            => TextDocumentOpenedRemoverFunc(_obj, _delegate);

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static System.Boolean CanApplyCompilationOptionChange(this Microsoft.CodeAnalysis.Workspace _obj, Microsoft.CodeAnalysis.CompilationOptions oldOptions, Microsoft.CodeAnalysis.CompilationOptions newOptions, Microsoft.CodeAnalysis.Project project)
            => CanApplyCompilationOptionChangeFunc0(_obj, oldOptions, newOptions, project);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Boolean CanApplyParseOptionChange(this Microsoft.CodeAnalysis.Workspace _obj, Microsoft.CodeAnalysis.ParseOptions oldOptions, Microsoft.CodeAnalysis.ParseOptions newOptions, Microsoft.CodeAnalysis.Project project)
            => CanApplyParseOptionChangeFunc1(_obj, oldOptions, newOptions, project);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static void CloseAnalyzerConfigDocument(this Microsoft.CodeAnalysis.Workspace _obj, Microsoft.CodeAnalysis.DocumentId documentId)
            => CloseAnalyzerConfigDocumentFunc2(_obj, documentId);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static void OpenAnalyzerConfigDocument(this Microsoft.CodeAnalysis.Workspace _obj, Microsoft.CodeAnalysis.DocumentId documentId, System.Boolean activate)
            => OpenAnalyzerConfigDocumentFunc3(_obj, documentId, activate);
    }
}
