// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.SolutionInfo.</summary>
    public static class SolutionInfoExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.SolutionInfo";

        private delegate System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> AnalyzerReferencesGetterDelegate(Microsoft.CodeAnalysis.SolutionInfo? _obj);

        private delegate Microsoft.CodeAnalysis.SolutionInfo CreateDelegate0(Microsoft.CodeAnalysis.SolutionId id, Microsoft.CodeAnalysis.VersionStamp version, System.String? filePath, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ProjectInfo>? projects, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference>? analyzerReferences);

        private static readonly AnalyzerReferencesGetterDelegate AnalyzerReferencesGetterFunc;

        private static readonly CreateDelegate0 CreateFunc0;

        static SolutionInfoExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AnalyzerReferencesGetterFunc = LightupHelper.CreateInstanceGetAccessor<AnalyzerReferencesGetterDelegate>(wrappedType, nameof(AnalyzerReferences));

            CreateFunc0 = LightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "idSolutionId", "versionVersionStamp", "filePathString", "projectsIEnumerable`1", "analyzerReferencesIEnumerable`1");
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> AnalyzerReferences(this Microsoft.CodeAnalysis.SolutionInfo _obj)
            => AnalyzerReferencesGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.SolutionInfo Create(Microsoft.CodeAnalysis.SolutionId id, Microsoft.CodeAnalysis.VersionStamp version, System.String? filePath, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ProjectInfo>? projects, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference>? analyzerReferences)
            => CreateFunc0(id, version, filePath, projects, analyzerReferences);
    }
}
