// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Struct added in Roslyn version </summary>
    public static class ProjectChangesExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.ProjectChanges";

        public static readonly Type? WrappedType;

        private delegate IEnumerable<DocumentId> GetAddedAnalyzerConfigDocumentsDelegate0(ProjectChanges? _obj);
        private delegate IEnumerable<DocumentId> GetChangedAnalyzerConfigDocumentsDelegate1(ProjectChanges? _obj);
        private delegate IEnumerable<DocumentId> GetRemovedAnalyzerConfigDocumentsDelegate2(ProjectChanges? _obj);

        private static readonly GetAddedAnalyzerConfigDocumentsDelegate0 GetAddedAnalyzerConfigDocumentsFunc0;
        private static readonly GetChangedAnalyzerConfigDocumentsDelegate1 GetChangedAnalyzerConfigDocumentsFunc1;
        private static readonly GetRemovedAnalyzerConfigDocumentsDelegate2 GetRemovedAnalyzerConfigDocumentsFunc2;

        static ProjectChangesExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            GetAddedAnalyzerConfigDocumentsFunc0 = LightupHelper.CreateInstanceMethodAccessor<GetAddedAnalyzerConfigDocumentsDelegate0>(WrappedType, nameof(GetAddedAnalyzerConfigDocuments));
            GetChangedAnalyzerConfigDocumentsFunc1 = LightupHelper.CreateInstanceMethodAccessor<GetChangedAnalyzerConfigDocumentsDelegate1>(WrappedType, nameof(GetChangedAnalyzerConfigDocuments));
            GetRemovedAnalyzerConfigDocumentsFunc2 = LightupHelper.CreateInstanceMethodAccessor<GetRemovedAnalyzerConfigDocumentsDelegate2>(WrappedType, nameof(GetRemovedAnalyzerConfigDocuments));
        }

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static IEnumerable<DocumentId> GetAddedAnalyzerConfigDocuments(this ProjectChanges wrappedObject)
            => GetAddedAnalyzerConfigDocumentsFunc0(wrappedObject);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static IEnumerable<DocumentId> GetChangedAnalyzerConfigDocuments(this ProjectChanges wrappedObject)
            => GetChangedAnalyzerConfigDocumentsFunc1(wrappedObject);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static IEnumerable<DocumentId> GetRemovedAnalyzerConfigDocuments(this ProjectChanges wrappedObject)
            => GetRemovedAnalyzerConfigDocumentsFunc2(wrappedObject);
    }
}
