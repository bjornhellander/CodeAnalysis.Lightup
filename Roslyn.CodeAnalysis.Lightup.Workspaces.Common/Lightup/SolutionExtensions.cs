// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Solution.</summary>
    public static class SolutionExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Solution";

        private delegate IReadOnlyList<AnalyzerReference> AnalyzerReferencesGetterDelegate(Solution? _obj);
        private delegate SolutionServicesWrapper ServicesGetterDelegate(Solution? _obj);

        private delegate Solution AddAdditionalDocumentsDelegate0(Solution? _obj, ImmutableArray<DocumentInfo> documentInfos);
        private delegate Solution AddAnalyzerConfigDocumentDelegate1(Solution? _obj, DocumentId documentId, String name, SourceText text, IEnumerable<String>? folders, String? filePath);
        private delegate Solution AddAnalyzerConfigDocumentsDelegate2(Solution? _obj, ImmutableArray<DocumentInfo> documentInfos);
        private delegate Solution AddAnalyzerReferenceDelegate3(Solution? _obj, AnalyzerReference analyzerReference);
        private delegate Solution AddAnalyzerReferencesDelegate4(Solution? _obj, IEnumerable<AnalyzerReference> analyzerReferences);
        private delegate Boolean ContainsAnalyzerConfigDocumentDelegate5(Solution? _obj, DocumentId? documentId);
        private delegate AnalyzerConfigDocumentWrapper GetAnalyzerConfigDocumentDelegate6(Solution? _obj, DocumentId? documentId);
        private delegate ValueTask<SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsyncDelegate7(Solution? _obj, DocumentId documentId, CancellationToken cancellationToken);
        private delegate Solution RemoveAdditionalDocumentsDelegate8(Solution? _obj, ImmutableArray<DocumentId> documentIds);
        private delegate Solution RemoveAnalyzerConfigDocumentDelegate9(Solution? _obj, DocumentId documentId);
        private delegate Solution RemoveAnalyzerConfigDocumentsDelegate10(Solution? _obj, ImmutableArray<DocumentId> documentIds);
        private delegate Solution RemoveAnalyzerReferenceDelegate11(Solution? _obj, AnalyzerReference analyzerReference);
        private delegate Solution RemoveDocumentsDelegate12(Solution? _obj, ImmutableArray<DocumentId> documentIds);
        private delegate Solution WithAnalyzerConfigDocumentTextDelegate13(Solution? _obj, DocumentId documentId, SourceText text, PreservationMode mode);
        private delegate Solution WithAnalyzerConfigDocumentTextDelegate14(Solution? _obj, DocumentId documentId, TextAndVersion textAndVersion, PreservationMode mode);
        private delegate Solution WithAnalyzerConfigDocumentTextLoaderDelegate15(Solution? _obj, DocumentId documentId, TextLoader loader, PreservationMode mode);
        private delegate Solution WithAnalyzerReferencesDelegate16(Solution? _obj, IEnumerable<AnalyzerReference> analyzerReferences);
        private delegate Solution WithOptionsDelegate17(Solution? _obj, OptionSet options);
        private delegate Solution WithProjectCompilationOutputInfoDelegate18(Solution? _obj, ProjectId projectId, in CompilationOutputInfoWrapper info);
        private delegate Solution WithProjectDefaultNamespaceDelegate19(Solution? _obj, ProjectId projectId, String? defaultNamespace);

        private static readonly AnalyzerReferencesGetterDelegate AnalyzerReferencesGetterFunc;
        private static readonly ServicesGetterDelegate ServicesGetterFunc;

        private static readonly AddAdditionalDocumentsDelegate0 AddAdditionalDocumentsFunc0;
        private static readonly AddAnalyzerConfigDocumentDelegate1 AddAnalyzerConfigDocumentFunc1;
        private static readonly AddAnalyzerConfigDocumentsDelegate2 AddAnalyzerConfigDocumentsFunc2;
        private static readonly AddAnalyzerReferenceDelegate3 AddAnalyzerReferenceFunc3;
        private static readonly AddAnalyzerReferencesDelegate4 AddAnalyzerReferencesFunc4;
        private static readonly ContainsAnalyzerConfigDocumentDelegate5 ContainsAnalyzerConfigDocumentFunc5;
        private static readonly GetAnalyzerConfigDocumentDelegate6 GetAnalyzerConfigDocumentFunc6;
        private static readonly GetSourceGeneratedDocumentAsyncDelegate7 GetSourceGeneratedDocumentAsyncFunc7;
        private static readonly RemoveAdditionalDocumentsDelegate8 RemoveAdditionalDocumentsFunc8;
        private static readonly RemoveAnalyzerConfigDocumentDelegate9 RemoveAnalyzerConfigDocumentFunc9;
        private static readonly RemoveAnalyzerConfigDocumentsDelegate10 RemoveAnalyzerConfigDocumentsFunc10;
        private static readonly RemoveAnalyzerReferenceDelegate11 RemoveAnalyzerReferenceFunc11;
        private static readonly RemoveDocumentsDelegate12 RemoveDocumentsFunc12;
        private static readonly WithAnalyzerConfigDocumentTextDelegate13 WithAnalyzerConfigDocumentTextFunc13;
        private static readonly WithAnalyzerConfigDocumentTextDelegate14 WithAnalyzerConfigDocumentTextFunc14;
        private static readonly WithAnalyzerConfigDocumentTextLoaderDelegate15 WithAnalyzerConfigDocumentTextLoaderFunc15;
        private static readonly WithAnalyzerReferencesDelegate16 WithAnalyzerReferencesFunc16;
        private static readonly WithOptionsDelegate17 WithOptionsFunc17;
        private static readonly WithProjectCompilationOutputInfoDelegate18 WithProjectCompilationOutputInfoFunc18;
        private static readonly WithProjectDefaultNamespaceDelegate19 WithProjectDefaultNamespaceFunc19;

        static SolutionExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AnalyzerReferencesGetterFunc = LightupHelper.CreateInstanceGetAccessor<AnalyzerReferencesGetterDelegate>(wrappedType, nameof(AnalyzerReferences));
            ServicesGetterFunc = LightupHelper.CreateInstanceGetAccessor<ServicesGetterDelegate>(wrappedType, nameof(Services));

            AddAdditionalDocumentsFunc0 = LightupHelper.CreateInstanceMethodAccessor<AddAdditionalDocumentsDelegate0>(wrappedType, "AddAdditionalDocuments", "ImmutableArray`1");
            AddAnalyzerConfigDocumentFunc1 = LightupHelper.CreateInstanceMethodAccessor<AddAnalyzerConfigDocumentDelegate1>(wrappedType, "AddAnalyzerConfigDocument", "DocumentId", "String", "SourceText", "IEnumerable`1", "String");
            AddAnalyzerConfigDocumentsFunc2 = LightupHelper.CreateInstanceMethodAccessor<AddAnalyzerConfigDocumentsDelegate2>(wrappedType, "AddAnalyzerConfigDocuments", "ImmutableArray`1");
            AddAnalyzerReferenceFunc3 = LightupHelper.CreateInstanceMethodAccessor<AddAnalyzerReferenceDelegate3>(wrappedType, "AddAnalyzerReference", "AnalyzerReference");
            AddAnalyzerReferencesFunc4 = LightupHelper.CreateInstanceMethodAccessor<AddAnalyzerReferencesDelegate4>(wrappedType, "AddAnalyzerReferences", "IEnumerable`1");
            ContainsAnalyzerConfigDocumentFunc5 = LightupHelper.CreateInstanceMethodAccessor<ContainsAnalyzerConfigDocumentDelegate5>(wrappedType, "ContainsAnalyzerConfigDocument", "DocumentId");
            GetAnalyzerConfigDocumentFunc6 = LightupHelper.CreateInstanceMethodAccessor<GetAnalyzerConfigDocumentDelegate6>(wrappedType, "GetAnalyzerConfigDocument", "DocumentId");
            GetSourceGeneratedDocumentAsyncFunc7 = LightupHelper.CreateInstanceMethodAccessor<GetSourceGeneratedDocumentAsyncDelegate7>(wrappedType, "GetSourceGeneratedDocumentAsync", "DocumentId", "CancellationToken");
            RemoveAdditionalDocumentsFunc8 = LightupHelper.CreateInstanceMethodAccessor<RemoveAdditionalDocumentsDelegate8>(wrappedType, "RemoveAdditionalDocuments", "ImmutableArray`1");
            RemoveAnalyzerConfigDocumentFunc9 = LightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentDelegate9>(wrappedType, "RemoveAnalyzerConfigDocument", "DocumentId");
            RemoveAnalyzerConfigDocumentsFunc10 = LightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentsDelegate10>(wrappedType, "RemoveAnalyzerConfigDocuments", "ImmutableArray`1");
            RemoveAnalyzerReferenceFunc11 = LightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerReferenceDelegate11>(wrappedType, "RemoveAnalyzerReference", "AnalyzerReference");
            RemoveDocumentsFunc12 = LightupHelper.CreateInstanceMethodAccessor<RemoveDocumentsDelegate12>(wrappedType, "RemoveDocuments", "ImmutableArray`1");
            WithAnalyzerConfigDocumentTextFunc13 = LightupHelper.CreateInstanceMethodAccessor<WithAnalyzerConfigDocumentTextDelegate13>(wrappedType, "WithAnalyzerConfigDocumentText", "DocumentId", "SourceText", "PreservationMode");
            WithAnalyzerConfigDocumentTextFunc14 = LightupHelper.CreateInstanceMethodAccessor<WithAnalyzerConfigDocumentTextDelegate14>(wrappedType, "WithAnalyzerConfigDocumentText", "DocumentId", "TextAndVersion", "PreservationMode");
            WithAnalyzerConfigDocumentTextLoaderFunc15 = LightupHelper.CreateInstanceMethodAccessor<WithAnalyzerConfigDocumentTextLoaderDelegate15>(wrappedType, "WithAnalyzerConfigDocumentTextLoader", "DocumentId", "TextLoader", "PreservationMode");
            WithAnalyzerReferencesFunc16 = LightupHelper.CreateInstanceMethodAccessor<WithAnalyzerReferencesDelegate16>(wrappedType, "WithAnalyzerReferences", "IEnumerable`1");
            WithOptionsFunc17 = LightupHelper.CreateInstanceMethodAccessor<WithOptionsDelegate17>(wrappedType, "WithOptions", "OptionSet");
            WithProjectCompilationOutputInfoFunc18 = LightupHelper.CreateInstanceMethodAccessor<WithProjectCompilationOutputInfoDelegate18>(wrappedType, "WithProjectCompilationOutputInfo", "ProjectId", "CompilationOutputInfo&");
            WithProjectDefaultNamespaceFunc19 = LightupHelper.CreateInstanceMethodAccessor<WithProjectDefaultNamespaceDelegate19>(wrappedType, "WithProjectDefaultNamespace", "ProjectId", "String");
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static IReadOnlyList<AnalyzerReference> AnalyzerReferences(this Solution _obj)
            => AnalyzerReferencesGetterFunc(_obj);

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static SolutionServicesWrapper Services(this Solution _obj)
            => ServicesGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution AddAdditionalDocuments(this Solution _obj, ImmutableArray<DocumentInfo> documentInfos)
            => AddAdditionalDocumentsFunc0(_obj, documentInfos);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution AddAnalyzerConfigDocument(this Solution _obj, DocumentId documentId, String name, SourceText text, IEnumerable<String>? folders, String? filePath)
            => AddAnalyzerConfigDocumentFunc1(_obj, documentId, name, text, folders, filePath);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution AddAnalyzerConfigDocuments(this Solution _obj, ImmutableArray<DocumentInfo> documentInfos)
            => AddAnalyzerConfigDocumentsFunc2(_obj, documentInfos);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution AddAnalyzerReference(this Solution _obj, AnalyzerReference analyzerReference)
            => AddAnalyzerReferenceFunc3(_obj, analyzerReference);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution AddAnalyzerReferences(this Solution _obj, IEnumerable<AnalyzerReference> analyzerReferences)
            => AddAnalyzerReferencesFunc4(_obj, analyzerReferences);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Boolean ContainsAnalyzerConfigDocument(this Solution _obj, DocumentId? documentId)
            => ContainsAnalyzerConfigDocumentFunc5(_obj, documentId);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static AnalyzerConfigDocumentWrapper GetAnalyzerConfigDocument(this Solution _obj, DocumentId? documentId)
            => GetAnalyzerConfigDocumentFunc6(_obj, documentId);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static ValueTask<SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsync(this Solution _obj, DocumentId documentId, CancellationToken cancellationToken)
            => GetSourceGeneratedDocumentAsyncFunc7(_obj, documentId, cancellationToken);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution RemoveAdditionalDocuments(this Solution _obj, ImmutableArray<DocumentId> documentIds)
            => RemoveAdditionalDocumentsFunc8(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution RemoveAnalyzerConfigDocument(this Solution _obj, DocumentId documentId)
            => RemoveAnalyzerConfigDocumentFunc9(_obj, documentId);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution RemoveAnalyzerConfigDocuments(this Solution _obj, ImmutableArray<DocumentId> documentIds)
            => RemoveAnalyzerConfigDocumentsFunc10(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution RemoveAnalyzerReference(this Solution _obj, AnalyzerReference analyzerReference)
            => RemoveAnalyzerReferenceFunc11(_obj, analyzerReference);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution RemoveDocuments(this Solution _obj, ImmutableArray<DocumentId> documentIds)
            => RemoveDocumentsFunc12(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution WithAnalyzerConfigDocumentText(this Solution _obj, DocumentId documentId, SourceText text, PreservationMode mode)
            => WithAnalyzerConfigDocumentTextFunc13(_obj, documentId, text, mode);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution WithAnalyzerConfigDocumentText(this Solution _obj, DocumentId documentId, TextAndVersion textAndVersion, PreservationMode mode)
            => WithAnalyzerConfigDocumentTextFunc14(_obj, documentId, textAndVersion, mode);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution WithAnalyzerConfigDocumentTextLoader(this Solution _obj, DocumentId documentId, TextLoader loader, PreservationMode mode)
            => WithAnalyzerConfigDocumentTextLoaderFunc15(_obj, documentId, loader, mode);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution WithAnalyzerReferences(this Solution _obj, IEnumerable<AnalyzerReference> analyzerReferences)
            => WithAnalyzerReferencesFunc16(_obj, analyzerReferences);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution WithOptions(this Solution _obj, OptionSet options)
            => WithOptionsFunc17(_obj, options);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution WithProjectCompilationOutputInfo(this Solution _obj, ProjectId projectId, in CompilationOutputInfoWrapper info)
            => WithProjectCompilationOutputInfoFunc18(_obj, projectId, in info);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Solution WithProjectDefaultNamespace(this Solution _obj, ProjectId projectId, String? defaultNamespace)
            => WithProjectDefaultNamespaceFunc19(_obj, projectId, defaultNamespace);
    }
}
