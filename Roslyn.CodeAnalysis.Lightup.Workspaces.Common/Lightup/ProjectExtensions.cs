// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Project.</summary>
    public static class ProjectExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Project";

        private delegate IEnumerable<AnalyzerConfigDocumentWrapper> AnalyzerConfigDocumentsGetterDelegate(Project? _obj);
        private delegate CompilationOutputInfoWrapper CompilationOutputInfoGetterDelegate(Project? _obj);
        private delegate String? DefaultNamespaceGetterDelegate(Project? _obj);
        private delegate LanguageServicesWrapper ServicesGetterDelegate(Project? _obj);

        private delegate TextDocument AddAnalyzerConfigDocumentDelegate0(Project? _obj, String name, SourceText text, IEnumerable<String>? folders, String? filePath);
        private delegate Boolean ContainsAnalyzerConfigDocumentDelegate1(Project? _obj, DocumentId documentId);
        private delegate AnalyzerConfigDocumentWrapper GetAnalyzerConfigDocumentDelegate2(Project? _obj, DocumentId documentId);
        private delegate ValueTask<SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsyncDelegate3(Project? _obj, DocumentId documentId, CancellationToken cancellationToken);
        private delegate ValueTask<IEnumerable<SourceGeneratedDocumentWrapper>> GetSourceGeneratedDocumentsAsyncDelegate4(Project? _obj, CancellationToken cancellationToken);
        private delegate Project RemoveAdditionalDocumentsDelegate5(Project? _obj, ImmutableArray<DocumentId> documentIds);
        private delegate Project RemoveAnalyzerConfigDocumentDelegate6(Project? _obj, DocumentId documentId);
        private delegate Project RemoveAnalyzerConfigDocumentsDelegate7(Project? _obj, ImmutableArray<DocumentId> documentIds);
        private delegate Project RemoveDocumentsDelegate8(Project? _obj, ImmutableArray<DocumentId> documentIds);
        private delegate Project WithDefaultNamespaceDelegate9(Project? _obj, String defaultNamespace);

        private static readonly AnalyzerConfigDocumentsGetterDelegate AnalyzerConfigDocumentsGetterFunc;
        private static readonly CompilationOutputInfoGetterDelegate CompilationOutputInfoGetterFunc;
        private static readonly DefaultNamespaceGetterDelegate DefaultNamespaceGetterFunc;
        private static readonly ServicesGetterDelegate ServicesGetterFunc;

        private static readonly AddAnalyzerConfigDocumentDelegate0 AddAnalyzerConfigDocumentFunc0;
        private static readonly ContainsAnalyzerConfigDocumentDelegate1 ContainsAnalyzerConfigDocumentFunc1;
        private static readonly GetAnalyzerConfigDocumentDelegate2 GetAnalyzerConfigDocumentFunc2;
        private static readonly GetSourceGeneratedDocumentAsyncDelegate3 GetSourceGeneratedDocumentAsyncFunc3;
        private static readonly GetSourceGeneratedDocumentsAsyncDelegate4 GetSourceGeneratedDocumentsAsyncFunc4;
        private static readonly RemoveAdditionalDocumentsDelegate5 RemoveAdditionalDocumentsFunc5;
        private static readonly RemoveAnalyzerConfigDocumentDelegate6 RemoveAnalyzerConfigDocumentFunc6;
        private static readonly RemoveAnalyzerConfigDocumentsDelegate7 RemoveAnalyzerConfigDocumentsFunc7;
        private static readonly RemoveDocumentsDelegate8 RemoveDocumentsFunc8;
        private static readonly WithDefaultNamespaceDelegate9 WithDefaultNamespaceFunc9;

        static ProjectExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AnalyzerConfigDocumentsGetterFunc = LightupHelper.CreateInstanceGetAccessor<AnalyzerConfigDocumentsGetterDelegate>(wrappedType, nameof(AnalyzerConfigDocuments));
            CompilationOutputInfoGetterFunc = LightupHelper.CreateInstanceGetAccessor<CompilationOutputInfoGetterDelegate>(wrappedType, nameof(CompilationOutputInfo));
            DefaultNamespaceGetterFunc = LightupHelper.CreateInstanceGetAccessor<DefaultNamespaceGetterDelegate>(wrappedType, nameof(DefaultNamespace));
            ServicesGetterFunc = LightupHelper.CreateInstanceGetAccessor<ServicesGetterDelegate>(wrappedType, nameof(Services));

            AddAnalyzerConfigDocumentFunc0 = LightupHelper.CreateInstanceMethodAccessor<AddAnalyzerConfigDocumentDelegate0>(wrappedType, nameof(AddAnalyzerConfigDocument));
            ContainsAnalyzerConfigDocumentFunc1 = LightupHelper.CreateInstanceMethodAccessor<ContainsAnalyzerConfigDocumentDelegate1>(wrappedType, nameof(ContainsAnalyzerConfigDocument));
            GetAnalyzerConfigDocumentFunc2 = LightupHelper.CreateInstanceMethodAccessor<GetAnalyzerConfigDocumentDelegate2>(wrappedType, nameof(GetAnalyzerConfigDocument));
            GetSourceGeneratedDocumentAsyncFunc3 = LightupHelper.CreateInstanceMethodAccessor<GetSourceGeneratedDocumentAsyncDelegate3>(wrappedType, nameof(GetSourceGeneratedDocumentAsync));
            GetSourceGeneratedDocumentsAsyncFunc4 = LightupHelper.CreateInstanceMethodAccessor<GetSourceGeneratedDocumentsAsyncDelegate4>(wrappedType, nameof(GetSourceGeneratedDocumentsAsync));
            RemoveAdditionalDocumentsFunc5 = LightupHelper.CreateInstanceMethodAccessor<RemoveAdditionalDocumentsDelegate5>(wrappedType, nameof(RemoveAdditionalDocuments));
            RemoveAnalyzerConfigDocumentFunc6 = LightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentDelegate6>(wrappedType, nameof(RemoveAnalyzerConfigDocument));
            RemoveAnalyzerConfigDocumentsFunc7 = LightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentsDelegate7>(wrappedType, nameof(RemoveAnalyzerConfigDocuments));
            RemoveDocumentsFunc8 = LightupHelper.CreateInstanceMethodAccessor<RemoveDocumentsDelegate8>(wrappedType, nameof(RemoveDocuments));
            WithDefaultNamespaceFunc9 = LightupHelper.CreateInstanceMethodAccessor<WithDefaultNamespaceDelegate9>(wrappedType, nameof(WithDefaultNamespace));
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static IEnumerable<AnalyzerConfigDocumentWrapper> AnalyzerConfigDocuments(this Project _obj)
            => AnalyzerConfigDocumentsGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static CompilationOutputInfoWrapper CompilationOutputInfo(this Project _obj)
            => CompilationOutputInfoGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static String? DefaultNamespace(this Project _obj)
            => DefaultNamespaceGetterFunc(_obj);

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static LanguageServicesWrapper Services(this Project _obj)
            => ServicesGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static TextDocument AddAnalyzerConfigDocument(this Project _obj, String name, SourceText text, IEnumerable<String>? folders, String? filePath)
            => AddAnalyzerConfigDocumentFunc0(_obj, name, text, folders, filePath);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Boolean ContainsAnalyzerConfigDocument(this Project _obj, DocumentId documentId)
            => ContainsAnalyzerConfigDocumentFunc1(_obj, documentId);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static AnalyzerConfigDocumentWrapper GetAnalyzerConfigDocument(this Project _obj, DocumentId documentId)
            => GetAnalyzerConfigDocumentFunc2(_obj, documentId);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static ValueTask<SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsync(this Project _obj, DocumentId documentId, CancellationToken cancellationToken)
            => GetSourceGeneratedDocumentAsyncFunc3(_obj, documentId, cancellationToken);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static ValueTask<IEnumerable<SourceGeneratedDocumentWrapper>> GetSourceGeneratedDocumentsAsync(this Project _obj, CancellationToken cancellationToken)
            => GetSourceGeneratedDocumentsAsyncFunc4(_obj, cancellationToken);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Project RemoveAdditionalDocuments(this Project _obj, ImmutableArray<DocumentId> documentIds)
            => RemoveAdditionalDocumentsFunc5(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Project RemoveAnalyzerConfigDocument(this Project _obj, DocumentId documentId)
            => RemoveAnalyzerConfigDocumentFunc6(_obj, documentId);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Project RemoveAnalyzerConfigDocuments(this Project _obj, ImmutableArray<DocumentId> documentIds)
            => RemoveAnalyzerConfigDocumentsFunc7(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Project RemoveDocuments(this Project _obj, ImmutableArray<DocumentId> documentIds)
            => RemoveDocumentsFunc8(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Project WithDefaultNamespace(this Project _obj, String defaultNamespace)
            => WithDefaultNamespaceFunc9(_obj, defaultNamespace);
    }
}
