// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CodeActions;
using Microsoft.CodeAnalysis.CodeActions.Lightup;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Host;
using Microsoft.CodeAnalysis.Host.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Options;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Class added in Roslyn version </summary>
    public static class AdhocWorkspaceExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.AdhocWorkspace";

        public static readonly Type? WrappedType;

        private delegate void CloseAnalyzerConfigDocumentDelegate0(AdhocWorkspace? _obj, DocumentId? documentId);
        private delegate void OpenAnalyzerConfigDocumentDelegate1(AdhocWorkspace? _obj, DocumentId? documentId, Boolean activate);

        private static readonly CloseAnalyzerConfigDocumentDelegate0 CloseAnalyzerConfigDocumentFunc0;
        private static readonly OpenAnalyzerConfigDocumentDelegate1 OpenAnalyzerConfigDocumentFunc1;

        static AdhocWorkspaceExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            CloseAnalyzerConfigDocumentFunc0 = LightupHelper.CreateMethodAccessor<CloseAnalyzerConfigDocumentDelegate0>(WrappedType, nameof(CloseAnalyzerConfigDocument));
            OpenAnalyzerConfigDocumentFunc1 = LightupHelper.CreateMethodAccessor<OpenAnalyzerConfigDocumentDelegate1>(WrappedType, nameof(OpenAnalyzerConfigDocument));
        }

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void CloseAnalyzerConfigDocument(this AdhocWorkspace wrappedObject, DocumentId? documentId)
            => CloseAnalyzerConfigDocumentFunc0(wrappedObject, documentId);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void OpenAnalyzerConfigDocument(this AdhocWorkspace wrappedObject, DocumentId? documentId, Boolean activate)
            => OpenAnalyzerConfigDocumentFunc1(wrappedObject, documentId, activate);
    }
}
