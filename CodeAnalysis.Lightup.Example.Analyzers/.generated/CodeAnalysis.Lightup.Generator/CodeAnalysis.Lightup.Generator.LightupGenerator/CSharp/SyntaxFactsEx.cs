// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.SyntaxFacts.</summary>
    public static partial class SyntaxFactsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.SyntaxFacts";

        private delegate global::System.Boolean IsCheckedOperatorDelegate0(global::System.String operatorMetadataName);

        private static readonly IsCheckedOperatorDelegate0 IsCheckedOperatorFunc0;

        static SyntaxFactsEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            IsCheckedOperatorFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateStaticMethodAccessor<IsCheckedOperatorDelegate0>(wrappedType, "IsCheckedOperator", "operatorMetadataNameString");
        }

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static global::System.Boolean IsCheckedOperator(global::System.String operatorMetadataName)
            => IsCheckedOperatorFunc0(operatorMetadataName);
    }
}
