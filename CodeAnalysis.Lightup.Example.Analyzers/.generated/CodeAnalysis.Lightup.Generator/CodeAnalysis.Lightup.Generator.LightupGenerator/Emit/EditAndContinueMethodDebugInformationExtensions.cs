// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Emit.Lightup
{
    /// <summary>Provides lightup support for struct Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation.</summary>
    public static partial class EditAndContinueMethodDebugInformationExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation";

        private delegate global::Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation CreateDelegate0(global::System.Collections.Immutable.ImmutableArray<global::System.Byte> compressedSlotMap, global::System.Collections.Immutable.ImmutableArray<global::System.Byte> compressedLambdaMap, global::System.Collections.Immutable.ImmutableArray<global::System.Byte> compressedStateMachineStateMap);

        private static readonly CreateDelegate0 CreateFunc0;

        static EditAndContinueMethodDebugInformationExtensions()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            CreateFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "compressedSlotMapImmutableArray`1", "compressedLambdaMapImmutableArray`1", "compressedStateMachineStateMapImmutableArray`1");
        }

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation Create(global::System.Collections.Immutable.ImmutableArray<global::System.Byte> compressedSlotMap, global::System.Collections.Immutable.ImmutableArray<global::System.Byte> compressedLambdaMap, global::System.Collections.Immutable.ImmutableArray<global::System.Byte> compressedStateMachineStateMap)
            => CreateFunc0(compressedSlotMap, compressedLambdaMap, compressedStateMachineStateMap);
    }
}
