// <auto-generated/>
#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.CodeActions.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CodeActions.CodeAction.</summary>
    public static partial class CodeActionExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CodeActions.CodeAction";

        private delegate Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx PriorityGetterDelegate(Microsoft.CodeAnalysis.CodeActions.CodeAction? _obj);

        private delegate Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate0(System.String title, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, System.Boolean isInlinable);
        private delegate Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate1(System.String title, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Document>> createChangedDocument, System.String? equivalenceKey, Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority);
        private delegate Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate2(System.String title, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Solution>> createChangedSolution, System.String? equivalenceKey, Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority);
        private delegate Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate3(System.String title, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, System.Boolean isInlinable, Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority);

        private static readonly PriorityGetterDelegate PriorityGetterFunc;

        private static readonly CreateDelegate0 CreateFunc0;
        private static readonly CreateDelegate1 CreateFunc1;
        private static readonly CreateDelegate2 CreateFunc2;
        private static readonly CreateDelegate3 CreateFunc3;

        static CodeActionExtensions()
        {
            var wrappedType = WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            PriorityGetterFunc = WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<PriorityGetterDelegate>(wrappedType, nameof(Priority));

            CreateFunc0 = WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "titleString", "nestedActionsImmutableArray`1", "isInlinableBoolean");
            CreateFunc1 = WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate1>(wrappedType, "Create", "titleString", "createChangedDocumentFunc`2", "equivalenceKeyString", "priorityCodeActionPriority");
            CreateFunc2 = WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate2>(wrappedType, "Create", "titleString", "createChangedSolutionFunc`2", "equivalenceKeyString", "priorityCodeActionPriority");
            CreateFunc3 = WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate3>(wrappedType, "Create", "titleString", "nestedActionsImmutableArray`1", "isInlinableBoolean", "priorityCodeActionPriority");
        }

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx Priority(this Microsoft.CodeAnalysis.CodeActions.CodeAction _obj)
            => PriorityGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.CodeActions.CodeAction Create(System.String title, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, System.Boolean isInlinable)
            => CreateFunc0(title, nestedActions, isInlinable);

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.CodeActions.CodeAction Create(System.String title, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Document>> createChangedDocument, System.String? equivalenceKey, Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority)
            => CreateFunc1(title, createChangedDocument, equivalenceKey, priority);

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.CodeActions.CodeAction Create(System.String title, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Solution>> createChangedSolution, System.String? equivalenceKey, Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority)
            => CreateFunc2(title, createChangedSolution, equivalenceKey, priority);

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.CodeActions.CodeAction Create(System.String title, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, System.Boolean isInlinable, Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority)
            => CreateFunc3(title, nestedActions, isInlinable, priority);
    }
}
