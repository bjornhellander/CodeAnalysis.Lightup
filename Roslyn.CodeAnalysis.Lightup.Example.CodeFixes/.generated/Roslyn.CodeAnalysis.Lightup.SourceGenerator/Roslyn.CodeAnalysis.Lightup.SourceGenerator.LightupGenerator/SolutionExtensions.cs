// <auto-generated/>
#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Solution.</summary>
    public static partial class SolutionExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Solution";

        private delegate System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> AnalyzerReferencesGetterDelegate(Microsoft.CodeAnalysis.Solution? _obj);
        private delegate Microsoft.CodeAnalysis.Host.Lightup.SolutionServicesWrapper ServicesGetterDelegate(Microsoft.CodeAnalysis.Solution? _obj);

        private delegate Microsoft.CodeAnalysis.Solution AddAdditionalDocumentsDelegate0(Microsoft.CodeAnalysis.Solution? _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentInfo> documentInfos);
        private delegate Microsoft.CodeAnalysis.Solution AddAnalyzerConfigDocumentDelegate1(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId documentId, System.String name, Microsoft.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable<System.String>? folders, System.String? filePath);
        private delegate Microsoft.CodeAnalysis.Solution AddAnalyzerConfigDocumentsDelegate2(Microsoft.CodeAnalysis.Solution? _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentInfo> documentInfos);
        private delegate Microsoft.CodeAnalysis.Solution AddAnalyzerReferenceDelegate3(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);
        private delegate Microsoft.CodeAnalysis.Solution AddAnalyzerReferencesDelegate4(Microsoft.CodeAnalysis.Solution? _obj, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences);
        private delegate System.Boolean ContainsAnalyzerConfigDocumentDelegate5(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId? documentId);
        private delegate Microsoft.CodeAnalysis.Lightup.AnalyzerConfigDocumentWrapper GetAnalyzerConfigDocumentDelegate6(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId? documentId);
        private delegate System.Threading.Tasks.ValueTask<Microsoft.CodeAnalysis.Lightup.SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsyncDelegate7(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId documentId, System.Threading.CancellationToken cancellationToken);
        private delegate Microsoft.CodeAnalysis.Solution RemoveAdditionalDocumentsDelegate8(Microsoft.CodeAnalysis.Solution? _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentId> documentIds);
        private delegate Microsoft.CodeAnalysis.Solution RemoveAnalyzerConfigDocumentDelegate9(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId documentId);
        private delegate Microsoft.CodeAnalysis.Solution RemoveAnalyzerConfigDocumentsDelegate10(Microsoft.CodeAnalysis.Solution? _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentId> documentIds);
        private delegate Microsoft.CodeAnalysis.Solution RemoveAnalyzerReferenceDelegate11(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);
        private delegate Microsoft.CodeAnalysis.Solution RemoveDocumentsDelegate12(Microsoft.CodeAnalysis.Solution? _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentId> documentIds);
        private delegate Microsoft.CodeAnalysis.Solution WithAnalyzerConfigDocumentTextDelegate13(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.PreservationMode mode);
        private delegate Microsoft.CodeAnalysis.Solution WithAnalyzerConfigDocumentTextDelegate14(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextAndVersion textAndVersion, Microsoft.CodeAnalysis.PreservationMode mode);
        private delegate Microsoft.CodeAnalysis.Solution WithAnalyzerConfigDocumentTextLoaderDelegate15(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader loader, Microsoft.CodeAnalysis.PreservationMode mode);
        private delegate Microsoft.CodeAnalysis.Solution WithAnalyzerReferencesDelegate16(Microsoft.CodeAnalysis.Solution? _obj, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences);
        private delegate Microsoft.CodeAnalysis.Solution WithOptionsDelegate17(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.Options.OptionSet options);
        private delegate Microsoft.CodeAnalysis.Solution WithProjectCompilationOutputInfoDelegate18(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.ProjectId projectId, in Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper info);
        private delegate Microsoft.CodeAnalysis.Solution WithProjectDefaultNamespaceDelegate19(Microsoft.CodeAnalysis.Solution? _obj, Microsoft.CodeAnalysis.ProjectId projectId, System.String? defaultNamespace);

        private static readonly AnalyzerReferencesGetterDelegate AnalyzerReferencesGetterFunc;
        private static readonly ServicesGetterDelegate ServicesGetterFunc;

        private static readonly AddAdditionalDocumentsDelegate0 AddAdditionalDocumentsFunc0;
        private static readonly AddAnalyzerConfigDocumentDelegate1 AddAnalyzerConfigDocumentFunc1;
        private static readonly AddAnalyzerConfigDocumentsDelegate2 AddAnalyzerConfigDocumentsFunc2;
        private static readonly AddAnalyzerReferenceDelegate3 AddAnalyzerReferenceFunc3;
        private static readonly AddAnalyzerReferencesDelegate4 AddAnalyzerReferencesFunc4;
        private static readonly ContainsAnalyzerConfigDocumentDelegate5 ContainsAnalyzerConfigDocumentFunc5;
        private static readonly GetAnalyzerConfigDocumentDelegate6 GetAnalyzerConfigDocumentFunc6;
        private static readonly GetSourceGeneratedDocumentAsyncDelegate7 GetSourceGeneratedDocumentAsyncFunc7;
        private static readonly RemoveAdditionalDocumentsDelegate8 RemoveAdditionalDocumentsFunc8;
        private static readonly RemoveAnalyzerConfigDocumentDelegate9 RemoveAnalyzerConfigDocumentFunc9;
        private static readonly RemoveAnalyzerConfigDocumentsDelegate10 RemoveAnalyzerConfigDocumentsFunc10;
        private static readonly RemoveAnalyzerReferenceDelegate11 RemoveAnalyzerReferenceFunc11;
        private static readonly RemoveDocumentsDelegate12 RemoveDocumentsFunc12;
        private static readonly WithAnalyzerConfigDocumentTextDelegate13 WithAnalyzerConfigDocumentTextFunc13;
        private static readonly WithAnalyzerConfigDocumentTextDelegate14 WithAnalyzerConfigDocumentTextFunc14;
        private static readonly WithAnalyzerConfigDocumentTextLoaderDelegate15 WithAnalyzerConfigDocumentTextLoaderFunc15;
        private static readonly WithAnalyzerReferencesDelegate16 WithAnalyzerReferencesFunc16;
        private static readonly WithOptionsDelegate17 WithOptionsFunc17;
        private static readonly WithProjectCompilationOutputInfoDelegate18 WithProjectCompilationOutputInfoFunc18;
        private static readonly WithProjectDefaultNamespaceDelegate19 WithProjectDefaultNamespaceFunc19;

        static SolutionExtensions()
        {
            var wrappedType = WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            AnalyzerReferencesGetterFunc = WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<AnalyzerReferencesGetterDelegate>(wrappedType, nameof(AnalyzerReferences));
            ServicesGetterFunc = WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<ServicesGetterDelegate>(wrappedType, nameof(Services));

            AddAdditionalDocumentsFunc0 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<AddAdditionalDocumentsDelegate0>(wrappedType, "AddAdditionalDocuments", "documentInfosImmutableArray`1");
            AddAnalyzerConfigDocumentFunc1 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<AddAnalyzerConfigDocumentDelegate1>(wrappedType, "AddAnalyzerConfigDocument", "documentIdDocumentId", "nameString", "textSourceText", "foldersIEnumerable`1", "filePathString");
            AddAnalyzerConfigDocumentsFunc2 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<AddAnalyzerConfigDocumentsDelegate2>(wrappedType, "AddAnalyzerConfigDocuments", "documentInfosImmutableArray`1");
            AddAnalyzerReferenceFunc3 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<AddAnalyzerReferenceDelegate3>(wrappedType, "AddAnalyzerReference", "analyzerReferenceAnalyzerReference");
            AddAnalyzerReferencesFunc4 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<AddAnalyzerReferencesDelegate4>(wrappedType, "AddAnalyzerReferences", "analyzerReferencesIEnumerable`1");
            ContainsAnalyzerConfigDocumentFunc5 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<ContainsAnalyzerConfigDocumentDelegate5>(wrappedType, "ContainsAnalyzerConfigDocument", "documentIdDocumentId");
            GetAnalyzerConfigDocumentFunc6 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<GetAnalyzerConfigDocumentDelegate6>(wrappedType, "GetAnalyzerConfigDocument", "documentIdDocumentId");
            GetSourceGeneratedDocumentAsyncFunc7 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<GetSourceGeneratedDocumentAsyncDelegate7>(wrappedType, "GetSourceGeneratedDocumentAsync", "documentIdDocumentId", "cancellationTokenCancellationToken");
            RemoveAdditionalDocumentsFunc8 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveAdditionalDocumentsDelegate8>(wrappedType, "RemoveAdditionalDocuments", "documentIdsImmutableArray`1");
            RemoveAnalyzerConfigDocumentFunc9 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentDelegate9>(wrappedType, "RemoveAnalyzerConfigDocument", "documentIdDocumentId");
            RemoveAnalyzerConfigDocumentsFunc10 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentsDelegate10>(wrappedType, "RemoveAnalyzerConfigDocuments", "documentIdsImmutableArray`1");
            RemoveAnalyzerReferenceFunc11 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerReferenceDelegate11>(wrappedType, "RemoveAnalyzerReference", "analyzerReferenceAnalyzerReference");
            RemoveDocumentsFunc12 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveDocumentsDelegate12>(wrappedType, "RemoveDocuments", "documentIdsImmutableArray`1");
            WithAnalyzerConfigDocumentTextFunc13 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithAnalyzerConfigDocumentTextDelegate13>(wrappedType, "WithAnalyzerConfigDocumentText", "documentIdDocumentId", "textSourceText", "modePreservationMode");
            WithAnalyzerConfigDocumentTextFunc14 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithAnalyzerConfigDocumentTextDelegate14>(wrappedType, "WithAnalyzerConfigDocumentText", "documentIdDocumentId", "textAndVersionTextAndVersion", "modePreservationMode");
            WithAnalyzerConfigDocumentTextLoaderFunc15 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithAnalyzerConfigDocumentTextLoaderDelegate15>(wrappedType, "WithAnalyzerConfigDocumentTextLoader", "documentIdDocumentId", "loaderTextLoader", "modePreservationMode");
            WithAnalyzerReferencesFunc16 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithAnalyzerReferencesDelegate16>(wrappedType, "WithAnalyzerReferences", "analyzerReferencesIEnumerable`1");
            WithOptionsFunc17 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithOptionsDelegate17>(wrappedType, "WithOptions", "optionsOptionSet");
            WithProjectCompilationOutputInfoFunc18 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithProjectCompilationOutputInfoDelegate18>(wrappedType, "WithProjectCompilationOutputInfo", "projectIdProjectId", "infoCompilationOutputInfo&");
            WithProjectDefaultNamespaceFunc19 = WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithProjectDefaultNamespaceDelegate19>(wrappedType, "WithProjectDefaultNamespace", "projectIdProjectId", "defaultNamespaceString");
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> AnalyzerReferences(this Microsoft.CodeAnalysis.Solution _obj)
            => AnalyzerReferencesGetterFunc(_obj);

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static Microsoft.CodeAnalysis.Host.Lightup.SolutionServicesWrapper Services(this Microsoft.CodeAnalysis.Solution _obj)
            => ServicesGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution AddAdditionalDocuments(this Microsoft.CodeAnalysis.Solution _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentInfo> documentInfos)
            => AddAdditionalDocumentsFunc0(_obj, documentInfos);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution AddAnalyzerConfigDocument(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId documentId, System.String name, Microsoft.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable<System.String>? folders, System.String? filePath)
            => AddAnalyzerConfigDocumentFunc1(_obj, documentId, name, text, folders, filePath);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution AddAnalyzerConfigDocuments(this Microsoft.CodeAnalysis.Solution _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentInfo> documentInfos)
            => AddAnalyzerConfigDocumentsFunc2(_obj, documentInfos);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution AddAnalyzerReference(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference)
            => AddAnalyzerReferenceFunc3(_obj, analyzerReference);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution AddAnalyzerReferences(this Microsoft.CodeAnalysis.Solution _obj, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences)
            => AddAnalyzerReferencesFunc4(_obj, analyzerReferences);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Boolean ContainsAnalyzerConfigDocument(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId? documentId)
            => ContainsAnalyzerConfigDocumentFunc5(_obj, documentId);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Lightup.AnalyzerConfigDocumentWrapper GetAnalyzerConfigDocument(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId? documentId)
            => GetAnalyzerConfigDocumentFunc6(_obj, documentId);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static System.Threading.Tasks.ValueTask<Microsoft.CodeAnalysis.Lightup.SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsync(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId documentId, System.Threading.CancellationToken cancellationToken)
            => GetSourceGeneratedDocumentAsyncFunc7(_obj, documentId, cancellationToken);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution RemoveAdditionalDocuments(this Microsoft.CodeAnalysis.Solution _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentId> documentIds)
            => RemoveAdditionalDocumentsFunc8(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution RemoveAnalyzerConfigDocument(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId documentId)
            => RemoveAnalyzerConfigDocumentFunc9(_obj, documentId);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution RemoveAnalyzerConfigDocuments(this Microsoft.CodeAnalysis.Solution _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentId> documentIds)
            => RemoveAnalyzerConfigDocumentsFunc10(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution RemoveAnalyzerReference(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference)
            => RemoveAnalyzerReferenceFunc11(_obj, analyzerReference);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution RemoveDocuments(this Microsoft.CodeAnalysis.Solution _obj, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentId> documentIds)
            => RemoveDocumentsFunc12(_obj, documentIds);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution WithAnalyzerConfigDocumentText(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.PreservationMode mode)
            => WithAnalyzerConfigDocumentTextFunc13(_obj, documentId, text, mode);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution WithAnalyzerConfigDocumentText(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextAndVersion textAndVersion, Microsoft.CodeAnalysis.PreservationMode mode)
            => WithAnalyzerConfigDocumentTextFunc14(_obj, documentId, textAndVersion, mode);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution WithAnalyzerConfigDocumentTextLoader(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader loader, Microsoft.CodeAnalysis.PreservationMode mode)
            => WithAnalyzerConfigDocumentTextLoaderFunc15(_obj, documentId, loader, mode);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution WithAnalyzerReferences(this Microsoft.CodeAnalysis.Solution _obj, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences)
            => WithAnalyzerReferencesFunc16(_obj, analyzerReferences);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution WithOptions(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.Options.OptionSet options)
            => WithOptionsFunc17(_obj, options);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution WithProjectCompilationOutputInfo(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.ProjectId projectId, in Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper info)
            => WithProjectCompilationOutputInfoFunc18(_obj, projectId, in info);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Solution WithProjectDefaultNamespace(this Microsoft.CodeAnalysis.Solution _obj, Microsoft.CodeAnalysis.ProjectId projectId, System.String? defaultNamespace)
            => WithProjectDefaultNamespaceFunc19(_obj, projectId, defaultNamespace);
    }
}
