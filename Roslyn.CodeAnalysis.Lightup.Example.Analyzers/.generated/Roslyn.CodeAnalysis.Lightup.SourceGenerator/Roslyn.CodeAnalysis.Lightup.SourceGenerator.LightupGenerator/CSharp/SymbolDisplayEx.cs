// <auto-generated/>
#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.SymbolDisplay.</summary>
    public static partial class SymbolDisplayEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.SymbolDisplay";

        private delegate System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToDisplayPartsDelegate0(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);
        private delegate System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToDisplayPartsDelegate1(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);
        private delegate System.String ToDisplayStringDelegate2(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);
        private delegate System.String ToDisplayStringDelegate3(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);
        private delegate System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToMinimalDisplayPartsDelegate4(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);
        private delegate System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToMinimalDisplayPartsDelegate5(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);
        private delegate System.String ToMinimalDisplayStringDelegate6(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);
        private delegate System.String ToMinimalDisplayStringDelegate7(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format);

        private static readonly ToDisplayPartsDelegate0 ToDisplayPartsFunc0;
        private static readonly ToDisplayPartsDelegate1 ToDisplayPartsFunc1;
        private static readonly ToDisplayStringDelegate2 ToDisplayStringFunc2;
        private static readonly ToDisplayStringDelegate3 ToDisplayStringFunc3;
        private static readonly ToMinimalDisplayPartsDelegate4 ToMinimalDisplayPartsFunc4;
        private static readonly ToMinimalDisplayPartsDelegate5 ToMinimalDisplayPartsFunc5;
        private static readonly ToMinimalDisplayStringDelegate6 ToMinimalDisplayStringFunc6;
        private static readonly ToMinimalDisplayStringDelegate7 ToMinimalDisplayStringFunc7;

        static SymbolDisplayEx()
        {
            var wrappedType = CSharpLightupHelper.FindType(WrappedTypeName);

            ToDisplayPartsFunc0 = CSharpLightupHelper.CreateStaticMethodAccessor<ToDisplayPartsDelegate0>(wrappedType, "ToDisplayParts", "symbolITypeSymbol", "nullableFlowStateNullableFlowState", "formatSymbolDisplayFormat");
            ToDisplayPartsFunc1 = CSharpLightupHelper.CreateStaticMethodAccessor<ToDisplayPartsDelegate1>(wrappedType, "ToDisplayParts", "symbolITypeSymbol", "nullableAnnotationNullableAnnotation", "formatSymbolDisplayFormat");
            ToDisplayStringFunc2 = CSharpLightupHelper.CreateStaticMethodAccessor<ToDisplayStringDelegate2>(wrappedType, "ToDisplayString", "symbolITypeSymbol", "nullableFlowStateNullableFlowState", "formatSymbolDisplayFormat");
            ToDisplayStringFunc3 = CSharpLightupHelper.CreateStaticMethodAccessor<ToDisplayStringDelegate3>(wrappedType, "ToDisplayString", "symbolITypeSymbol", "nullableAnnotationNullableAnnotation", "formatSymbolDisplayFormat");
            ToMinimalDisplayPartsFunc4 = CSharpLightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayPartsDelegate4>(wrappedType, "ToMinimalDisplayParts", "symbolITypeSymbol", "nullableFlowStateNullableFlowState", "semanticModelSemanticModel", "positionInt32", "formatSymbolDisplayFormat");
            ToMinimalDisplayPartsFunc5 = CSharpLightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayPartsDelegate5>(wrappedType, "ToMinimalDisplayParts", "symbolITypeSymbol", "nullableAnnotationNullableAnnotation", "semanticModelSemanticModel", "positionInt32", "formatSymbolDisplayFormat");
            ToMinimalDisplayStringFunc6 = CSharpLightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayStringDelegate6>(wrappedType, "ToMinimalDisplayString", "symbolITypeSymbol", "nullableFlowStateNullableFlowState", "semanticModelSemanticModel", "positionInt32", "formatSymbolDisplayFormat");
            ToMinimalDisplayStringFunc7 = CSharpLightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayStringDelegate7>(wrappedType, "ToMinimalDisplayString", "symbolITypeSymbol", "nullableAnnotationNullableAnnotation", "semanticModelSemanticModel", "positionInt32", "formatSymbolDisplayFormat");
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToDisplayParts(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToDisplayPartsFunc0(symbol, nullableFlowState, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToDisplayParts(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToDisplayPartsFunc1(symbol, nullableAnnotation, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.String ToDisplayString(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToDisplayStringFunc2(symbol, nullableFlowState, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.String ToDisplayString(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToDisplayStringFunc3(symbol, nullableAnnotation, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToMinimalDisplayParts(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToMinimalDisplayPartsFunc4(symbol, nullableFlowState, semanticModel, position, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> ToMinimalDisplayParts(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToMinimalDisplayPartsFunc5(symbol, nullableAnnotation, semanticModel, position, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.String ToMinimalDisplayString(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableFlowStateEx nullableFlowState, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToMinimalDisplayStringFunc6(symbol, nullableFlowState, semanticModel, position, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.String ToMinimalDisplayString(Microsoft.CodeAnalysis.ITypeSymbol symbol, Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx nullableAnnotation, Microsoft.CodeAnalysis.SemanticModel semanticModel, System.Int32 position, Microsoft.CodeAnalysis.SymbolDisplayFormat? format)
            => ToMinimalDisplayStringFunc7(symbol, nullableAnnotation, semanticModel, position, format);
    }
}
