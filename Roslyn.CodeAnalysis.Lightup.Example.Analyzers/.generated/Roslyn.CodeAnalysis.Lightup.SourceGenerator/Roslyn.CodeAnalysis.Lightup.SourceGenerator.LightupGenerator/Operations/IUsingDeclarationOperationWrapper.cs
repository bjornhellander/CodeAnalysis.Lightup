// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.IUsingDeclarationOperation. Added in version 3.8.0.0.</summary>
    public readonly partial struct IUsingDeclarationOperationWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.IUsingDeclarationOperation";

        private static readonly System.Type? WrappedType; // NOTE: Used via reflection

        private delegate Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation DeclarationGroupGetterDelegate(Microsoft.CodeAnalysis.IOperation? _obj);
        private delegate System.Boolean IsAsynchronousGetterDelegate(Microsoft.CodeAnalysis.IOperation? _obj);

        private static readonly DeclarationGroupGetterDelegate DeclarationGroupGetterFunc;
        private static readonly IsAsynchronousGetterDelegate IsAsynchronousGetterFunc;

        private readonly Microsoft.CodeAnalysis.IOperation? wrappedObject;

        static IUsingDeclarationOperationWrapper()
        {
            WrappedType = CommonLightupHelper.FindType(WrappedTypeName);

            DeclarationGroupGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<DeclarationGroupGetterDelegate>(WrappedType, nameof(DeclarationGroup));
            IsAsynchronousGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<IsAsynchronousGetterDelegate>(WrappedType, nameof(IsAsynchronous));
        }

        private IUsingDeclarationOperationWrapper(Microsoft.CodeAnalysis.IOperation? obj)
        {
            wrappedObject = obj;
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public readonly Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation DeclarationGroup
        {
            get => DeclarationGroupGetterFunc(wrappedObject);
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public readonly System.Boolean IsAsynchronous
        {
            get => IsAsynchronousGetterFunc(wrappedObject);
        }

        public static bool Is(System.Object? obj)
            => CommonLightupHelper.Is(obj, WrappedType);

        public static IUsingDeclarationOperationWrapper As(System.Object? obj)
        {
            var obj2 = CommonLightupHelper.As<Microsoft.CodeAnalysis.IOperation>(obj, WrappedType);
            return new IUsingDeclarationOperationWrapper(obj2);
        }

        public Microsoft.CodeAnalysis.IOperation? Unwrap()
            => wrappedObject;
    }
}
