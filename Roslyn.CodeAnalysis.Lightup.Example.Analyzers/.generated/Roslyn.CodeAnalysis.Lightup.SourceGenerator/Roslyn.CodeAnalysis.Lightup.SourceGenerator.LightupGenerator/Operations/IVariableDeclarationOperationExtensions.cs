// <auto-generated/>
#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation.</summary>
    public static partial class IVariableDeclarationOperationExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation";

        private delegate System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation> IgnoredDimensionsGetterDelegate(Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation? _obj);

        private static readonly IgnoredDimensionsGetterDelegate IgnoredDimensionsGetterFunc;

        static IVariableDeclarationOperationExtensions()
        {
            var wrappedType = CommonLightupHelper.FindType(WrappedTypeName);

            IgnoredDimensionsGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<IgnoredDimensionsGetterDelegate>(wrappedType, nameof(IgnoredDimensions));
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation> IgnoredDimensions(this Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation _obj)
            => IgnoredDimensionsGetterFunc(_obj);
    }
}
