// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.IRelationalPatternOperation. Added in version 3.8.0.0.</summary>
    public readonly partial struct IRelationalPatternOperationWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.IRelationalPatternOperation";

        private static readonly System.Type? WrappedType; // NOTE: Used via reflection

        private delegate Microsoft.CodeAnalysis.Operations.BinaryOperatorKind OperatorKindGetterDelegate(Microsoft.CodeAnalysis.Operations.IPatternOperation? _obj);
        private delegate Microsoft.CodeAnalysis.IOperation ValueGetterDelegate(Microsoft.CodeAnalysis.Operations.IPatternOperation? _obj);

        private static readonly OperatorKindGetterDelegate OperatorKindGetterFunc;
        private static readonly ValueGetterDelegate ValueGetterFunc;

        private readonly Microsoft.CodeAnalysis.Operations.IPatternOperation? wrappedObject;

        static IRelationalPatternOperationWrapper()
        {
            WrappedType = CommonLightupHelper.FindType(WrappedTypeName);

            OperatorKindGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<OperatorKindGetterDelegate>(WrappedType, nameof(OperatorKind));
            ValueGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<ValueGetterDelegate>(WrappedType, nameof(Value));
        }

        private IRelationalPatternOperationWrapper(Microsoft.CodeAnalysis.Operations.IPatternOperation? obj)
        {
            wrappedObject = obj;
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public readonly Microsoft.CodeAnalysis.Operations.BinaryOperatorKind OperatorKind
        {
            get => OperatorKindGetterFunc(wrappedObject);
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public readonly Microsoft.CodeAnalysis.IOperation Value
        {
            get => ValueGetterFunc(wrappedObject);
        }

        public static bool Is(System.Object? obj)
            => CommonLightupHelper.Is(obj, WrappedType);

        public static IRelationalPatternOperationWrapper As(System.Object? obj)
        {
            var obj2 = CommonLightupHelper.As<Microsoft.CodeAnalysis.Operations.IPatternOperation>(obj, WrappedType);
            return new IRelationalPatternOperationWrapper(obj2);
        }

        public Microsoft.CodeAnalysis.Operations.IPatternOperation? Unwrap()
            => wrappedObject;
    }
}
