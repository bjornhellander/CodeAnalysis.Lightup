// <auto-generated/>
#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerArgumentPlaceholderOperation. Added in version 4.4.0.0.</summary>
    public readonly partial struct IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerArgumentPlaceholderOperation";

        private static readonly System.Type? WrappedType; // NOTE: Used via reflection

        private delegate System.Int32 ArgumentIndexGetterDelegate(Microsoft.CodeAnalysis.IOperation? _obj);
        private delegate Microsoft.CodeAnalysis.Operations.Lightup.InterpolatedStringArgumentPlaceholderKindEx PlaceholderKindGetterDelegate(Microsoft.CodeAnalysis.IOperation? _obj);

        private static readonly ArgumentIndexGetterDelegate ArgumentIndexGetterFunc;
        private static readonly PlaceholderKindGetterDelegate PlaceholderKindGetterFunc;

        private readonly Microsoft.CodeAnalysis.IOperation? wrappedObject;

        static IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper()
        {
            WrappedType = CommonLightupHelper.FindType(WrappedTypeName);

            ArgumentIndexGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<ArgumentIndexGetterDelegate>(WrappedType, nameof(ArgumentIndex));
            PlaceholderKindGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<PlaceholderKindGetterDelegate>(WrappedType, nameof(PlaceholderKind));
        }

        private IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper(Microsoft.CodeAnalysis.IOperation? obj)
        {
            wrappedObject = obj;
        }

        /// <summary>Property added in version 4.4.0.0.</summary>
        public readonly System.Int32 ArgumentIndex
        {
            get => ArgumentIndexGetterFunc(wrappedObject);
        }

        /// <summary>Property added in version 4.4.0.0.</summary>
        public readonly Microsoft.CodeAnalysis.Operations.Lightup.InterpolatedStringArgumentPlaceholderKindEx PlaceholderKind
        {
            get => PlaceholderKindGetterFunc(wrappedObject);
        }

        /// <summary>Returns true if the specified object is compatible with this wrapper.</summary>
        public static bool Is(System.Object? obj)
            => CommonLightupHelper.Is(obj, WrappedType);

        /// <summary>Creates a wrapper object containing the specified object. If the object is not compatible with this wrapper, null will be stored in the wrapper instead.</summary>
        public static IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper As(System.Object? obj)
        {
            var obj2 = CommonLightupHelper.As<Microsoft.CodeAnalysis.IOperation>(obj, WrappedType);
            return new IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper(obj2);
        }

        /// <summary>Returns the wrapped object.</summary>
        public Microsoft.CodeAnalysis.IOperation? Unwrap()
            => wrappedObject;
    }
}
