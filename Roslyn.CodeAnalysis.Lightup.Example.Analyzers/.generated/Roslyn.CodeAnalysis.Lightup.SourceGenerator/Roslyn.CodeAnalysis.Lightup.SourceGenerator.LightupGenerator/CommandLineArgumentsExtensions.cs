// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CommandLineArguments.</summary>
    public static partial class CommandLineArgumentsExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CommandLineArguments";

        private delegate System.Collections.Immutable.ImmutableArray<System.String> AnalyzerConfigPathsGetterDelegate(Microsoft.CodeAnalysis.CommandLineArguments? _obj);
        private delegate System.Boolean EmitPdbFileGetterDelegate(Microsoft.CodeAnalysis.CommandLineArguments? _obj);
        private delegate Microsoft.CodeAnalysis.Lightup.ErrorLogOptionsWrapper ErrorLogOptionsGetterDelegate(Microsoft.CodeAnalysis.CommandLineArguments? _obj);
        private delegate System.String? GeneratedFilesOutputDirectoryGetterDelegate(Microsoft.CodeAnalysis.CommandLineArguments? _obj);
        private delegate System.Boolean ReportInternalsVisibleToAttributesGetterDelegate(Microsoft.CodeAnalysis.CommandLineArguments? _obj);
        private delegate System.Boolean SkipAnalyzersGetterDelegate(Microsoft.CodeAnalysis.CommandLineArguments? _obj);

        private delegate System.String GetOutputFilePathDelegate0(Microsoft.CodeAnalysis.CommandLineArguments? _obj, System.String outputFileName);
        private delegate System.String GetPdbFilePathDelegate1(Microsoft.CodeAnalysis.CommandLineArguments? _obj, System.String outputFileName);

        private static readonly AnalyzerConfigPathsGetterDelegate AnalyzerConfigPathsGetterFunc;
        private static readonly EmitPdbFileGetterDelegate EmitPdbFileGetterFunc;
        private static readonly ErrorLogOptionsGetterDelegate ErrorLogOptionsGetterFunc;
        private static readonly GeneratedFilesOutputDirectoryGetterDelegate GeneratedFilesOutputDirectoryGetterFunc;
        private static readonly ReportInternalsVisibleToAttributesGetterDelegate ReportInternalsVisibleToAttributesGetterFunc;
        private static readonly SkipAnalyzersGetterDelegate SkipAnalyzersGetterFunc;

        private static readonly GetOutputFilePathDelegate0 GetOutputFilePathFunc0;
        private static readonly GetPdbFilePathDelegate1 GetPdbFilePathFunc1;

        static CommandLineArgumentsExtensions()
        {
            var wrappedType = CommonLightupHelper.FindType(WrappedTypeName);

            AnalyzerConfigPathsGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<AnalyzerConfigPathsGetterDelegate>(wrappedType, nameof(AnalyzerConfigPaths));
            EmitPdbFileGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<EmitPdbFileGetterDelegate>(wrappedType, nameof(EmitPdbFile));
            ErrorLogOptionsGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<ErrorLogOptionsGetterDelegate>(wrappedType, nameof(ErrorLogOptions));
            GeneratedFilesOutputDirectoryGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<GeneratedFilesOutputDirectoryGetterDelegate>(wrappedType, nameof(GeneratedFilesOutputDirectory));
            ReportInternalsVisibleToAttributesGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<ReportInternalsVisibleToAttributesGetterDelegate>(wrappedType, nameof(ReportInternalsVisibleToAttributes));
            SkipAnalyzersGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<SkipAnalyzersGetterDelegate>(wrappedType, nameof(SkipAnalyzers));

            GetOutputFilePathFunc0 = CommonLightupHelper.CreateInstanceMethodAccessor<GetOutputFilePathDelegate0>(wrappedType, "GetOutputFilePath", "outputFileNameString");
            GetPdbFilePathFunc1 = CommonLightupHelper.CreateInstanceMethodAccessor<GetPdbFilePathDelegate1>(wrappedType, "GetPdbFilePath", "outputFileNameString");
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Collections.Immutable.ImmutableArray<System.String> AnalyzerConfigPaths(this Microsoft.CodeAnalysis.CommandLineArguments _obj)
            => AnalyzerConfigPathsGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Boolean EmitPdbFile(this Microsoft.CodeAnalysis.CommandLineArguments _obj)
            => EmitPdbFileGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Lightup.ErrorLogOptionsWrapper ErrorLogOptions(this Microsoft.CodeAnalysis.CommandLineArguments _obj)
            => ErrorLogOptionsGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.String? GeneratedFilesOutputDirectory(this Microsoft.CodeAnalysis.CommandLineArguments _obj)
            => GeneratedFilesOutputDirectoryGetterFunc(_obj);

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static System.Boolean ReportInternalsVisibleToAttributes(this Microsoft.CodeAnalysis.CommandLineArguments _obj)
            => ReportInternalsVisibleToAttributesGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Boolean SkipAnalyzers(this Microsoft.CodeAnalysis.CommandLineArguments _obj)
            => SkipAnalyzersGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.String GetOutputFilePath(this Microsoft.CodeAnalysis.CommandLineArguments _obj, System.String outputFileName)
            => GetOutputFilePathFunc0(_obj, outputFileName);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.String GetPdbFilePath(this Microsoft.CodeAnalysis.CommandLineArguments _obj, System.String outputFileName)
            => GetPdbFilePathFunc1(_obj, outputFileName);
    }
}
