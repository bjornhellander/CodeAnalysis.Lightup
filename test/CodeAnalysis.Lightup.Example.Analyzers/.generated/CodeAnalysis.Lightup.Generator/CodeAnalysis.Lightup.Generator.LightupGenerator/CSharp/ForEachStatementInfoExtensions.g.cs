// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for struct Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.</summary>
    public static partial class ForEachStatementInfoExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo";

        private delegate global::System.Boolean IsAsynchronousGetterDelegate(global::Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo? _obj);

        private static readonly IsAsynchronousGetterDelegate IsAsynchronousGetterFunc;

        static ForEachStatementInfoExtensions()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            IsAsynchronousGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceGetAccessor<IsAsynchronousGetterDelegate>(wrappedType, nameof(IsAsynchronous));
        }

        /// <summary>Property added in version 3.4.0.0.</summary>
        public static global::System.Boolean IsAsynchronous(this global::Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo _obj)
        {
            return IsAsynchronousGetterFunc(_obj);
        }
    }
}
