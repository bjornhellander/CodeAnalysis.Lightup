// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for struct Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.</summary>
    public static partial class AwaitExpressionInfoEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo";

        private delegate global::Microsoft.CodeAnalysis.IMethodSymbol? RuntimeAwaitMethodGetterDelegate(global::Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo _obj);

        private static readonly RuntimeAwaitMethodGetterDelegate RuntimeAwaitMethodGetterFunc;

        static AwaitExpressionInfoEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            RuntimeAwaitMethodGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceGetAccessor<RuntimeAwaitMethodGetterDelegate>(wrappedType, nameof(RuntimeAwaitMethod));
        }

        /// <summary>Property added in version 5.0.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.IMethodSymbol? RuntimeAwaitMethod(this global::Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo _obj)
        {
            return RuntimeAwaitMethodGetterFunc(_obj);
        }
    }
}
