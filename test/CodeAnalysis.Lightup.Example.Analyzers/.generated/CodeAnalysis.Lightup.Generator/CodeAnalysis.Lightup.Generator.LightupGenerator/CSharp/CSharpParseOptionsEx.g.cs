// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.</summary>
    public static partial class CSharpParseOptionsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions";

        private delegate global::System.String LanguageGetterDelegate(global::Microsoft.CodeAnalysis.CSharp.CSharpParseOptions _obj);
        private delegate global::Microsoft.CodeAnalysis.CSharp.LanguageVersion SpecifiedLanguageVersionGetterDelegate(global::Microsoft.CodeAnalysis.CSharp.CSharpParseOptions _obj);

        private static readonly LanguageGetterDelegate LanguageGetterFunc;
        private static readonly SpecifiedLanguageVersionGetterDelegate SpecifiedLanguageVersionGetterFunc;

        static CSharpParseOptionsEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            LanguageGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceGetAccessor<LanguageGetterDelegate>(wrappedType, nameof(Language));
            SpecifiedLanguageVersionGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceGetAccessor<SpecifiedLanguageVersionGetterDelegate>(wrappedType, nameof(SpecifiedLanguageVersion));
        }

        /// <summary>Property added in version 2.0.0.0.</summary>
        public static global::System.String Language(this global::Microsoft.CodeAnalysis.CSharp.CSharpParseOptions _obj)
        {
            return LanguageGetterFunc(_obj);
        }

        /// <summary>Property added in version 2.0.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.LanguageVersion SpecifiedLanguageVersion(this global::Microsoft.CodeAnalysis.CSharp.CSharpParseOptions _obj)
        {
            return SpecifiedLanguageVersionGetterFunc(_obj);
        }
    }
}
