// <auto-generated/>

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for enum Microsoft.CodeAnalysis.CSharp.SyntaxKind.</summary>
    public static partial class SyntaxKindEx
    {
        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind DotDotToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8222;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind QuestionQuestionEqualsToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8284;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind GreaterThanGreaterThanGreaterThanToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8286;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind GreaterThanGreaterThanGreaterThanEqualsToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8287;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind OrKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8438;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind AndKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8439;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind NotKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8440;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind WithKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8442;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind InitKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8443;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RecordKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8444;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ManagedKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8445;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind UnmanagedKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8446;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RequiredKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8447;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ScopedKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8448;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FileKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8449;

        /// <summary>Added in version 4.11.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind AllowsKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8450;

        /// <summary>Added in version 4.14.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ExtensionKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8451;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind NullableKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8486;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind EnableKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8487;

        /// <summary>Added in version 3.2.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind WarningsKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8488;

        /// <summary>Added in version 3.2.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind AnnotationsKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8489;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind VarKeyword = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8490;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind UnderscoreToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8491;

        /// <summary>Added in version 4.2.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind SingleLineRawStringLiteralToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8518;

        /// <summary>Added in version 4.2.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind MultiLineRawStringLiteralToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8519;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8StringLiteralToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8520;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8SingleLineRawStringLiteralToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8521;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8MultiLineRawStringLiteralToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8522;

        /// <summary>Added in version 4.11.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RazorContentToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8523;

        /// <summary>Added in version 2.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ConflictMarkerTrivia = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8564;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind IsPatternExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8657;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RangeExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8658;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ImplicitObjectCreationExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8659;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind UnsignedRightShiftExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8692;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind CoalesceAssignmentExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8725;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind UnsignedRightShiftAssignmentExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8726;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind IndexExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8741;

        /// <summary>Added in version 2.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind DefaultLiteralExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8755;

        /// <summary>Added in version 4.3.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8StringLiteralExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8756;

        /// <summary>Added in version 4.12.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FieldExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8757;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind LocalFunctionStatement = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8830;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FileScopedNamespaceDeclaration = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8845;

        /// <summary>Added in version 4.11.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind AllowsConstraintClause = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8879;

        /// <summary>Added in version 4.11.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RefStructConstraint = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8880;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind TupleType = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8924;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind TupleElement = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8925;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind TupleExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8926;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind SingleVariableDesignation = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8927;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ParenthesizedVariableDesignation = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8928;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ForEachVariableStatement = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)8929;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind DeclarationPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9000;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ConstantPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9002;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind CasePatternSwitchLabel = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9009;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind WhenClause = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9013;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind DiscardDesignation = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9014;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RecursivePattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9020;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind PropertyPatternClause = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9021;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind Subpattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9022;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind PositionalPatternClause = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9023;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind DiscardPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9024;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind SwitchExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9025;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind SwitchExpressionArm = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9026;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind VarPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9027;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ParenthesizedPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9028;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RelationalPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9029;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind TypePattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9030;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind OrPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9031;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind AndPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9032;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind NotPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9033;

        /// <summary>Added in version 4.1.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind SlicePattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9034;

        /// <summary>Added in version 4.1.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ListPattern = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9035;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind DeclarationExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9040;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RefExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9050;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RefType = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9051;

        /// <summary>Added in version 2.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ThrowExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9052;

        /// <summary>Added in version 2.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ImplicitStackAllocArrayCreationExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9053;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind SuppressNullableWarningExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9054;

        /// <summary>Added in version 3.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind NullableDirectiveTrivia = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9055;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerType = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9056;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerParameter = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9057;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerParameterList = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9058;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerCallingConvention = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9059;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind InitAccessorDeclaration = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9060;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind WithExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9061;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind WithInitializerExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9062;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RecordDeclaration = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9063;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind DefaultConstraint = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9064;

        /// <summary>Added in version 3.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind PrimaryConstructorBaseType = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9065;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerUnmanagedCallingConventionList = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9066;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerUnmanagedCallingConvention = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9067;

        /// <summary>Added in version 3.11.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind RecordStructDeclaration = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9068;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ExpressionColon = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9069;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind LineDirectivePosition = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9070;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind LineSpanDirectiveTrivia = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9071;

        /// <summary>Added in version 4.2.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind InterpolatedSingleLineRawStringStartToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9072;

        /// <summary>Added in version 4.2.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind InterpolatedMultiLineRawStringStartToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9073;

        /// <summary>Added in version 4.2.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind InterpolatedRawStringEndToken = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9074;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ScopedType = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9075;

        /// <summary>Added in version 4.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind CollectionExpression = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9076;

        /// <summary>Added in version 4.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ExpressionElement = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9077;

        /// <summary>Added in version 4.7.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind SpreadElement = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9078;

        /// <summary>Added in version 4.14.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind ExtensionDeclaration = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9079;

        /// <summary>Added in version 4.14.0.0.</summary>
        public const global::Microsoft.CodeAnalysis.CSharp.SyntaxKind IgnoredDirectiveTrivia = (global::Microsoft.CodeAnalysis.CSharp.SyntaxKind)9080;
    }
}
