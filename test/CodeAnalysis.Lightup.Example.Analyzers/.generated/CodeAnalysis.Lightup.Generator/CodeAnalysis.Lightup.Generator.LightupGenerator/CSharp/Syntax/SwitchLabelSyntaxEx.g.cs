// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax.</summary>
    public static partial class SwitchLabelSyntaxEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax";

        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax WithColonTokenDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken colonToken);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax WithKeywordDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken keyword);

        private static readonly WithColonTokenDelegate0 WithColonTokenFunc0;
        private static readonly WithKeywordDelegate0 WithKeywordFunc0;

        static SwitchLabelSyntaxEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            WithColonTokenFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithColonTokenDelegate0>(wrappedType, "WithColonToken", "colonTokenSyntaxToken");
            WithKeywordFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithKeywordDelegate0>(wrappedType, "WithKeyword", "keywordSyntaxToken");
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax WithColonToken(this global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken colonToken)
        {
            return WithColonTokenFunc0(_obj, colonToken);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax WithKeyword(this global::Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken keyword)
        {
            return WithKeywordFunc0(_obj, keyword);
        }
    }
}
