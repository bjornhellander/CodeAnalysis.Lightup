// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax.</summary>
    public static partial class BaseArgumentListSyntaxEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax";

        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax AddArgumentsDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[] items);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax WithArgumentsDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax _obj, global::Microsoft.CodeAnalysis.SeparatedSyntaxList<global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax> arguments);

        private static readonly AddArgumentsDelegate0 AddArgumentsFunc0;
        private static readonly WithArgumentsDelegate0 WithArgumentsFunc0;

        static BaseArgumentListSyntaxEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            AddArgumentsFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<AddArgumentsDelegate0>(wrappedType, "AddArguments", "itemsArgumentSyntax[]");
            WithArgumentsFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithArgumentsDelegate0>(wrappedType, "WithArguments", "argumentsSeparatedSyntaxList`1");
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax AddArguments(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[] items)
        {
            return AddArgumentsFunc0(_obj, items);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax WithArguments(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax _obj, global::Microsoft.CodeAnalysis.SeparatedSyntaxList<global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax> arguments)
        {
            return WithArgumentsFunc0(_obj, arguments);
        }
    }
}
