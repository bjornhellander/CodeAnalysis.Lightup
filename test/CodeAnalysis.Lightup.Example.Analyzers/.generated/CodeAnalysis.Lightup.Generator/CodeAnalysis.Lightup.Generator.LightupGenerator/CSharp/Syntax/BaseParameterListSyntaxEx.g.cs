// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax.</summary>
    public static partial class BaseParameterListSyntaxEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax";

        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax AddParametersDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[] items);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax WithParametersDelegate1(global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax _obj, global::Microsoft.CodeAnalysis.SeparatedSyntaxList<global::Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> parameters);

        private static readonly AddParametersDelegate0 AddParametersFunc0;
        private static readonly WithParametersDelegate1 WithParametersFunc1;

        static BaseParameterListSyntaxEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            AddParametersFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<AddParametersDelegate0>(wrappedType, "AddParameters", "itemsParameterSyntax[]");
            WithParametersFunc1 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithParametersDelegate1>(wrappedType, "WithParameters", "parametersSeparatedSyntaxList`1");
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax AddParameters(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[] items)
        {
            return AddParametersFunc0(_obj, items);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax WithParameters(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax _obj, global::Microsoft.CodeAnalysis.SeparatedSyntaxList<global::Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> parameters)
        {
            return WithParametersFunc1(_obj, parameters);
        }
    }
}
