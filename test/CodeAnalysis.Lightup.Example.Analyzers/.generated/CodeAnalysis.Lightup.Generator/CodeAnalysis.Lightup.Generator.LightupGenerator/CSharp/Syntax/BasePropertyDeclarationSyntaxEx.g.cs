// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.</summary>
    public static partial class BasePropertyDeclarationSyntaxEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax";

        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax AddAccessorListAccessorsDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax[] items);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax AddAttributeListsDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[] items);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax AddModifiersDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, params global::Microsoft.CodeAnalysis.SyntaxToken[] items);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithAccessorListDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax? accessorList);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithAttributeListsDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxList<global::Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithExplicitInterfaceSpecifierDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax? explicitInterfaceSpecifier);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithModifiersDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxTokenList modifiers);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithTypeDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax type);

        private static readonly AddAccessorListAccessorsDelegate0 AddAccessorListAccessorsFunc0;
        private static readonly AddAttributeListsDelegate0 AddAttributeListsFunc0;
        private static readonly AddModifiersDelegate0 AddModifiersFunc0;
        private static readonly WithAccessorListDelegate0 WithAccessorListFunc0;
        private static readonly WithAttributeListsDelegate0 WithAttributeListsFunc0;
        private static readonly WithExplicitInterfaceSpecifierDelegate0 WithExplicitInterfaceSpecifierFunc0;
        private static readonly WithModifiersDelegate0 WithModifiersFunc0;
        private static readonly WithTypeDelegate0 WithTypeFunc0;

        static BasePropertyDeclarationSyntaxEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            AddAccessorListAccessorsFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<AddAccessorListAccessorsDelegate0>(wrappedType, "AddAccessorListAccessors", "itemsAccessorDeclarationSyntax[]");
            AddAttributeListsFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<AddAttributeListsDelegate0>(wrappedType, "AddAttributeLists", "itemsAttributeListSyntax[]");
            AddModifiersFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<AddModifiersDelegate0>(wrappedType, "AddModifiers", "itemsSyntaxToken[]");
            WithAccessorListFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithAccessorListDelegate0>(wrappedType, "WithAccessorList", "accessorListAccessorListSyntax");
            WithAttributeListsFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithAttributeListsDelegate0>(wrappedType, "WithAttributeLists", "attributeListsSyntaxList`1");
            WithExplicitInterfaceSpecifierFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithExplicitInterfaceSpecifierDelegate0>(wrappedType, "WithExplicitInterfaceSpecifier", "explicitInterfaceSpecifierExplicitInterfaceSpecifierSyntax");
            WithModifiersFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithModifiersDelegate0>(wrappedType, "WithModifiers", "modifiersSyntaxTokenList");
            WithTypeFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithTypeDelegate0>(wrappedType, "WithType", "typeTypeSyntax");
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax AddAccessorListAccessors(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax[] items)
        {
            return AddAccessorListAccessorsFunc0(_obj, items);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax AddAttributeLists(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, params global::Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[] items)
        {
            return AddAttributeListsFunc0(_obj, items);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax AddModifiers(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, params global::Microsoft.CodeAnalysis.SyntaxToken[] items)
        {
            return AddModifiersFunc0(_obj, items);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithAccessorList(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax? accessorList)
        {
            return WithAccessorListFunc0(_obj, accessorList);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithAttributeLists(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxList<global::Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists)
        {
            return WithAttributeListsFunc0(_obj, attributeLists);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithExplicitInterfaceSpecifier(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax? explicitInterfaceSpecifier)
        {
            return WithExplicitInterfaceSpecifierFunc0(_obj, explicitInterfaceSpecifier);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithModifiers(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxTokenList modifiers)
        {
            return WithModifiersFunc0(_obj, modifiers);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax WithType(this global::Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax _obj, global::Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax type)
        {
            return WithTypeFunc0(_obj, type);
        }
    }
}
