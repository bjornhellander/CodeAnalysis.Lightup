// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.</summary>
    public static partial class DirectiveTriviaSyntaxEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax";

        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax WithEndOfDirectiveTokenDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken endOfDirectiveToken);
        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax WithHashTokenDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken hashToken);

        private static readonly WithEndOfDirectiveTokenDelegate0 WithEndOfDirectiveTokenFunc0;
        private static readonly WithHashTokenDelegate0 WithHashTokenFunc0;

        static DirectiveTriviaSyntaxEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            WithEndOfDirectiveTokenFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithEndOfDirectiveTokenDelegate0>(wrappedType, "WithEndOfDirectiveToken", "endOfDirectiveTokenSyntaxToken");
            WithHashTokenFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithHashTokenDelegate0>(wrappedType, "WithHashToken", "hashTokenSyntaxToken");
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax WithEndOfDirectiveToken(this global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken endOfDirectiveToken)
        {
            return WithEndOfDirectiveTokenFunc0(_obj, endOfDirectiveToken);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax WithHashToken(this global::Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken hashToken)
        {
            return WithHashTokenFunc0(_obj, hashToken);
        }
    }
}
