// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.</summary>
    public static partial class ArgumentSyntaxEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax";

        private delegate global::Microsoft.CodeAnalysis.SyntaxToken RefKindKeywordGetterDelegate(global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax _obj);

        private delegate global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax WithRefKindKeywordDelegate0(global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken refKindKeyword);

        private static readonly RefKindKeywordGetterDelegate RefKindKeywordGetterFunc;

        private static readonly WithRefKindKeywordDelegate0 WithRefKindKeywordFunc0;

        static ArgumentSyntaxEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.FindType(WrappedTypeName);

            RefKindKeywordGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceGetAccessor<RefKindKeywordGetterDelegate>(wrappedType, nameof(RefKindKeyword));

            WithRefKindKeywordFunc0 = global::Microsoft.CodeAnalysis.Lightup.CSharpLightupHelper.CreateInstanceMethodAccessor<WithRefKindKeywordDelegate0>(wrappedType, "WithRefKindKeyword", "refKindKeywordSyntaxToken");
        }

        /// <summary>Property added in version 2.7.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.SyntaxToken RefKindKeyword(this global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax _obj)
        {
            return RefKindKeywordGetterFunc(_obj);
        }

        /// <summary>Method added in version 2.7.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax WithRefKindKeyword(this global::Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax _obj, global::Microsoft.CodeAnalysis.SyntaxToken refKindKeyword)
        {
            return WithRefKindKeywordFunc0(_obj, refKindKeyword);
        }
    }
}
