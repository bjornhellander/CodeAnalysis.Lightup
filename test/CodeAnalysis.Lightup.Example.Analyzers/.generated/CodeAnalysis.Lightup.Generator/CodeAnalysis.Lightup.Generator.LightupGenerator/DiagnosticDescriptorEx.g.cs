// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.DiagnosticDescriptor.</summary>
    public static partial class DiagnosticDescriptorEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.DiagnosticDescriptor";

        private delegate global::Microsoft.CodeAnalysis.ReportDiagnostic GetEffectiveSeverityDelegate0(global::Microsoft.CodeAnalysis.DiagnosticDescriptor _obj, global::Microsoft.CodeAnalysis.CompilationOptions compilationOptions);

        private static readonly GetEffectiveSeverityDelegate0 GetEffectiveSeverityFunc0;

        static DiagnosticDescriptorEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            GetEffectiveSeverityFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<GetEffectiveSeverityDelegate0>(wrappedType, "GetEffectiveSeverity", "compilationOptionsCompilationOptions");
        }

        /// <summary>Method added in version 1.1.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.ReportDiagnostic GetEffectiveSeverity(this global::Microsoft.CodeAnalysis.DiagnosticDescriptor _obj, global::Microsoft.CodeAnalysis.CompilationOptions compilationOptions)
        {
            return GetEffectiveSeverityFunc0(_obj, compilationOptions);
        }
    }
}
