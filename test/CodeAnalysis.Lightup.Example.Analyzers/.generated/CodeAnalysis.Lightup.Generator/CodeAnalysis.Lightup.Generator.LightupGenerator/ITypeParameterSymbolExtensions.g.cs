// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.ITypeParameterSymbol.</summary>
    public static partial class ITypeParameterSymbolExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.ITypeParameterSymbol";

        private delegate global::System.Boolean AllowsRefLikeTypeGetterDelegate(global::Microsoft.CodeAnalysis.ITypeParameterSymbol? _obj);
        private delegate global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx> ConstraintNullableAnnotationsGetterDelegate(global::Microsoft.CodeAnalysis.ITypeParameterSymbol? _obj);
        private delegate global::System.Boolean HasNotNullConstraintGetterDelegate(global::Microsoft.CodeAnalysis.ITypeParameterSymbol? _obj);
        private delegate global::Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx ReferenceTypeConstraintNullableAnnotationGetterDelegate(global::Microsoft.CodeAnalysis.ITypeParameterSymbol? _obj);

        private static readonly AllowsRefLikeTypeGetterDelegate AllowsRefLikeTypeGetterFunc;
        private static readonly ConstraintNullableAnnotationsGetterDelegate ConstraintNullableAnnotationsGetterFunc;
        private static readonly HasNotNullConstraintGetterDelegate HasNotNullConstraintGetterFunc;
        private static readonly ReferenceTypeConstraintNullableAnnotationGetterDelegate ReferenceTypeConstraintNullableAnnotationGetterFunc;

        static ITypeParameterSymbolExtensions()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            AllowsRefLikeTypeGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<AllowsRefLikeTypeGetterDelegate>(wrappedType, nameof(AllowsRefLikeType));
            ConstraintNullableAnnotationsGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ConstraintNullableAnnotationsGetterDelegate>(wrappedType, nameof(ConstraintNullableAnnotations));
            HasNotNullConstraintGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<HasNotNullConstraintGetterDelegate>(wrappedType, nameof(HasNotNullConstraint));
            ReferenceTypeConstraintNullableAnnotationGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ReferenceTypeConstraintNullableAnnotationGetterDelegate>(wrappedType, nameof(ReferenceTypeConstraintNullableAnnotation));
        }

        /// <summary>Property added in version 4.11.0.0.</summary>
        public static global::System.Boolean AllowsRefLikeType(this global::Microsoft.CodeAnalysis.ITypeParameterSymbol _obj)
        {
            return AllowsRefLikeTypeGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.1.0.0.</summary>
        public static global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx> ConstraintNullableAnnotations(this global::Microsoft.CodeAnalysis.ITypeParameterSymbol _obj)
        {
            return ConstraintNullableAnnotationsGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static global::System.Boolean HasNotNullConstraint(this global::Microsoft.CodeAnalysis.ITypeParameterSymbol _obj)
        {
            return HasNotNullConstraintGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.1.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx ReferenceTypeConstraintNullableAnnotation(this global::Microsoft.CodeAnalysis.ITypeParameterSymbol _obj)
        {
            return ReferenceTypeConstraintNullableAnnotationGetterFunc(_obj);
        }
    }
}
