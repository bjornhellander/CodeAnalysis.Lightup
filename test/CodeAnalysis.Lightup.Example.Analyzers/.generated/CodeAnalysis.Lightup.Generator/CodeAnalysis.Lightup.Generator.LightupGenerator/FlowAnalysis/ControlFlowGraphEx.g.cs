// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.FlowAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.</summary>
    public static partial class ControlFlowGraphEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph";

        private delegate global::Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph CreateDelegate0(global::Microsoft.CodeAnalysis.Operations.Lightup.IAttributeOperationWrapper attribute, global::System.Threading.CancellationToken cancellationToken);

        private static readonly CreateDelegate0 CreateFunc0;

        static ControlFlowGraphEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            CreateFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "attributeIAttributeOperation", "cancellationTokenCancellationToken");
        }

        /// <summary>Method added in version 4.5.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph Create(global::Microsoft.CodeAnalysis.Operations.Lightup.IAttributeOperationWrapper attribute, global::System.Threading.CancellationToken cancellationToken)
        {
            return CreateFunc0(attribute, cancellationToken);
        }
    }
}
