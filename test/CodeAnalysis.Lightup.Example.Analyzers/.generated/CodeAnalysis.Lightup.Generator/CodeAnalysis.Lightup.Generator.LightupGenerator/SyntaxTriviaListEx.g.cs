// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for struct Microsoft.CodeAnalysis.SyntaxTriviaList.</summary>
    public static partial class SyntaxTriviaListEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.SyntaxTriviaList";

        private delegate Microsoft.CodeAnalysis.SyntaxTriviaList ConstructorDelegate0(global::Microsoft.CodeAnalysis.SyntaxTrivia trivia);
        private delegate Microsoft.CodeAnalysis.SyntaxTriviaList ConstructorDelegate1(params global::Microsoft.CodeAnalysis.SyntaxTrivia[] trivias);
        private delegate Microsoft.CodeAnalysis.SyntaxTriviaList ConstructorDelegate2(global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.SyntaxTrivia>? trivias);

        private delegate global::Microsoft.CodeAnalysis.SyntaxTriviaList CreateDelegate0(global::System.ReadOnlySpan<global::Microsoft.CodeAnalysis.SyntaxTrivia> trivias);

        private static readonly ConstructorDelegate0 ConstructorFunc0;
        private static readonly ConstructorDelegate1 ConstructorFunc1;
        private static readonly ConstructorDelegate2 ConstructorFunc2;

        private static readonly CreateDelegate0 CreateFunc0;

        static SyntaxTriviaListEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            ConstructorFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceConstructorAccessor<ConstructorDelegate0>(wrappedType, "triviaSyntaxTrivia");
            ConstructorFunc1 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceConstructorAccessor<ConstructorDelegate1>(wrappedType, "triviasSyntaxTrivia[]");
            ConstructorFunc2 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceConstructorAccessor<ConstructorDelegate2>(wrappedType, "triviasIEnumerable`1");

            CreateFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "triviasReadOnlySpan`1");
        }

        /// <summary>Constructor added in version 2.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.SyntaxTriviaList Create(global::Microsoft.CodeAnalysis.SyntaxTrivia trivia)
        {
            return ConstructorFunc0(trivia);
        }

        /// <summary>Constructor added in version 2.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.SyntaxTriviaList Create(params global::Microsoft.CodeAnalysis.SyntaxTrivia[] trivias)
        {
            return ConstructorFunc1(trivias);
        }

        /// <summary>Constructor added in version 2.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.SyntaxTriviaList Create(global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.SyntaxTrivia>? trivias)
        {
            return ConstructorFunc2(trivias);
        }

        /// <summary>Method added in version 4.10.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.SyntaxTriviaList Create(global::System.ReadOnlySpan<global::Microsoft.CodeAnalysis.SyntaxTrivia> trivias)
        {
            return CreateFunc0(trivias);
        }
    }
}
