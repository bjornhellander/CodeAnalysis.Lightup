// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.NullableContextOptionsExtensions. Added in version 3.3.0.0.</summary>
    public static partial class NullableContextOptionsExtensionsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.NullableContextOptionsExtensions";

        private delegate global::System.Boolean AnnotationsEnabledDelegate0(global::Microsoft.CodeAnalysis.Lightup.NullableContextOptionsEx context);
        private delegate global::System.Boolean WarningsEnabledDelegate0(global::Microsoft.CodeAnalysis.Lightup.NullableContextOptionsEx context);

        private static readonly AnnotationsEnabledDelegate0 AnnotationsEnabledFunc0;
        private static readonly WarningsEnabledDelegate0 WarningsEnabledFunc0;

        static NullableContextOptionsExtensionsEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            AnnotationsEnabledFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateStaticMethodAccessor<AnnotationsEnabledDelegate0>(wrappedType, "AnnotationsEnabled", "contextNullableContextOptions");
            WarningsEnabledFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateStaticMethodAccessor<WarningsEnabledDelegate0>(wrappedType, "WarningsEnabled", "contextNullableContextOptions");
        }

        /// <summary>Method added in version 3.3.0.0.</summary>
        public static global::System.Boolean AnnotationsEnabled(this global::Microsoft.CodeAnalysis.Lightup.NullableContextOptionsEx context)
        {
            return AnnotationsEnabledFunc0(context);
        }

        /// <summary>Method added in version 3.3.0.0.</summary>
        public static global::System.Boolean WarningsEnabled(this global::Microsoft.CodeAnalysis.Lightup.NullableContextOptionsEx context)
        {
            return WarningsEnabledFunc0(context);
        }
    }
}
