// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.IAssemblySymbol.</summary>
    public static partial class IAssemblySymbolEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.IAssemblySymbol";

        private delegate global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.INamedTypeSymbol> GetForwardedTypesDelegate0(global::Microsoft.CodeAnalysis.IAssemblySymbol _obj);

        private static readonly GetForwardedTypesDelegate0 GetForwardedTypesFunc0;

        static IAssemblySymbolEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            GetForwardedTypesFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<GetForwardedTypesDelegate0>(wrappedType, "GetForwardedTypes");
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public static global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.INamedTypeSymbol> GetForwardedTypes(this global::Microsoft.CodeAnalysis.IAssemblySymbol _obj)
        {
            return GetForwardedTypesFunc0(_obj);
        }
    }
}
