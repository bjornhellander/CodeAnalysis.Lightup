// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.SymbolVisitor.</summary>
    public static partial class SymbolVisitorEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.SymbolVisitor";

        private delegate void VisitDiscardDelegate0(global::Microsoft.CodeAnalysis.SymbolVisitor _obj, global::Microsoft.CodeAnalysis.Lightup.IDiscardSymbolWrapper symbol);
        private delegate void VisitFunctionPointerTypeDelegate0(global::Microsoft.CodeAnalysis.SymbolVisitor _obj, global::Microsoft.CodeAnalysis.Lightup.IFunctionPointerTypeSymbolWrapper symbol);

        private static readonly VisitDiscardDelegate0 VisitDiscardFunc0;
        private static readonly VisitFunctionPointerTypeDelegate0 VisitFunctionPointerTypeFunc0;

        static SymbolVisitorEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            VisitDiscardFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDiscardDelegate0>(wrappedType, "VisitDiscard", "symbolIDiscardSymbol");
            VisitFunctionPointerTypeFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerTypeDelegate0>(wrappedType, "VisitFunctionPointerType", "symbolIFunctionPointerTypeSymbol");
        }

        /// <summary>Method added in version 2.0.0.0.</summary>
        public static void VisitDiscard(this global::Microsoft.CodeAnalysis.SymbolVisitor _obj, global::Microsoft.CodeAnalysis.Lightup.IDiscardSymbolWrapper symbol)
        {
            VisitDiscardFunc0(_obj, symbol);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public static void VisitFunctionPointerType(this global::Microsoft.CodeAnalysis.SymbolVisitor _obj, global::Microsoft.CodeAnalysis.Lightup.IFunctionPointerTypeSymbolWrapper symbol)
        {
            VisitFunctionPointerTypeFunc0(_obj, symbol);
        }
    }
}
