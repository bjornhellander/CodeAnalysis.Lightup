// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.IFieldSymbol.</summary>
    public static partial class IFieldSymbolEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.IFieldSymbol";

        private delegate global::Microsoft.CodeAnalysis.IFieldSymbol? CorrespondingTupleFieldGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);
        private delegate global::System.Int32 FixedSizeGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);
        private delegate global::System.Boolean IsExplicitlyNamedTupleElementGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);
        private delegate global::System.Boolean IsFixedSizeBufferGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);
        private delegate global::System.Boolean IsRequiredGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);
        private delegate global::Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx NullableAnnotationGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);
        private delegate global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CustomModifier> RefCustomModifiersGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);
        private delegate global::Microsoft.CodeAnalysis.RefKind RefKindGetterDelegate(global::Microsoft.CodeAnalysis.IFieldSymbol _obj);

        private static readonly CorrespondingTupleFieldGetterDelegate CorrespondingTupleFieldGetterFunc;
        private static readonly FixedSizeGetterDelegate FixedSizeGetterFunc;
        private static readonly IsExplicitlyNamedTupleElementGetterDelegate IsExplicitlyNamedTupleElementGetterFunc;
        private static readonly IsFixedSizeBufferGetterDelegate IsFixedSizeBufferGetterFunc;
        private static readonly IsRequiredGetterDelegate IsRequiredGetterFunc;
        private static readonly NullableAnnotationGetterDelegate NullableAnnotationGetterFunc;
        private static readonly RefCustomModifiersGetterDelegate RefCustomModifiersGetterFunc;
        private static readonly RefKindGetterDelegate RefKindGetterFunc;

        static IFieldSymbolEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            CorrespondingTupleFieldGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<CorrespondingTupleFieldGetterDelegate>(wrappedType, nameof(CorrespondingTupleField));
            FixedSizeGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<FixedSizeGetterDelegate>(wrappedType, nameof(FixedSize));
            IsExplicitlyNamedTupleElementGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<IsExplicitlyNamedTupleElementGetterDelegate>(wrappedType, nameof(IsExplicitlyNamedTupleElement));
            IsFixedSizeBufferGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<IsFixedSizeBufferGetterDelegate>(wrappedType, nameof(IsFixedSizeBuffer));
            IsRequiredGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<IsRequiredGetterDelegate>(wrappedType, nameof(IsRequired));
            NullableAnnotationGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<NullableAnnotationGetterDelegate>(wrappedType, nameof(NullableAnnotation));
            RefCustomModifiersGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<RefCustomModifiersGetterDelegate>(wrappedType, nameof(RefCustomModifiers));
            RefKindGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<RefKindGetterDelegate>(wrappedType, nameof(RefKind));
        }

        /// <summary>Property added in version 2.0.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.IFieldSymbol? CorrespondingTupleField(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return CorrespondingTupleFieldGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.0.0.0.</summary>
        public static global::System.Int32 FixedSize(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return FixedSizeGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.10.0.0.</summary>
        public static global::System.Boolean IsExplicitlyNamedTupleElement(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return IsExplicitlyNamedTupleElementGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.0.0.0.</summary>
        public static global::System.Boolean IsFixedSizeBuffer(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return IsFixedSizeBufferGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.3.0.0.</summary>
        public static global::System.Boolean IsRequired(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return IsRequiredGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.1.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx NullableAnnotation(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return NullableAnnotationGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.3.0.0.</summary>
        public static global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CustomModifier> RefCustomModifiers(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return RefCustomModifiersGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.3.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.RefKind RefKind(this global::Microsoft.CodeAnalysis.IFieldSymbol _obj)
        {
            return RefKindGetterFunc(_obj);
        }
    }
}
