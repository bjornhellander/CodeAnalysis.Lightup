// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CompilationReference.</summary>
    public static partial class CompilationReferenceEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CompilationReference";

        private delegate global::System.Boolean EqualsDelegate0(global::Microsoft.CodeAnalysis.CompilationReference _obj, global::Microsoft.CodeAnalysis.CompilationReference? other);

        private static readonly EqualsDelegate0 EqualsFunc0;

        static CompilationReferenceEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            EqualsFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<EqualsDelegate0>(wrappedType, "Equals", "otherCompilationReference");
        }

        /// <summary>Method added in version 1.2.0.0.</summary>
        public static global::System.Boolean Equals(this global::Microsoft.CodeAnalysis.CompilationReference _obj, global::Microsoft.CodeAnalysis.CompilationReference? other)
        {
            return EqualsFunc0(_obj, other);
        }
    }
}
