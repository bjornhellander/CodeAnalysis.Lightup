// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Diagnostics.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.</summary>
    public static partial class AnalysisResultExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Diagnostics.AnalysisResult";

        private delegate global::System.Collections.Immutable.ImmutableDictionary<global::Microsoft.CodeAnalysis.AdditionalText, global::System.Collections.Immutable.ImmutableDictionary<global::Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Diagnostic>>> AdditionalFileDiagnosticsGetterDelegate(global::Microsoft.CodeAnalysis.Diagnostics.AnalysisResult _obj);

        private static readonly AdditionalFileDiagnosticsGetterDelegate AdditionalFileDiagnosticsGetterFunc;

        static AnalysisResultExtensions()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            AdditionalFileDiagnosticsGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<AdditionalFileDiagnosticsGetterDelegate>(wrappedType, nameof(AdditionalFileDiagnostics));
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static global::System.Collections.Immutable.ImmutableDictionary<global::Microsoft.CodeAnalysis.AdditionalText, global::System.Collections.Immutable.ImmutableDictionary<global::Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Diagnostic>>> AdditionalFileDiagnostics(this global::Microsoft.CodeAnalysis.Diagnostics.AnalysisResult _obj)
        {
            return AdditionalFileDiagnosticsGetterFunc(_obj);
        }
    }
}
