// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Diagnostics.Telemetry.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo. Added in version 1.1.0.0.</summary>
    public partial struct AnalyzerTelemetryInfoWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo";

        private static readonly global::System.Type? WrappedType;

        private delegate AnalyzerTelemetryInfoWrapper ConstructorDelegate0();

        private delegate global::System.Int32 AdditionalFileActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void AdditionalFileActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 CodeBlockActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void CodeBlockActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 CodeBlockEndActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void CodeBlockEndActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 CodeBlockStartActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void CodeBlockStartActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 CompilationActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void CompilationActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 CompilationEndActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void CompilationEndActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 CompilationStartActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void CompilationStartActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Boolean ConcurrentGetterDelegate(global::System.Object _obj);
        private delegate void ConcurrentSetterDelegate(System.Object _obj, global::System.Boolean _value);
        private delegate global::System.TimeSpan ExecutionTimeGetterDelegate(global::System.Object _obj);
        private delegate void ExecutionTimeSetterDelegate(System.Object _obj, global::System.TimeSpan _value);
        private delegate global::System.Int32 OperationActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void OperationActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 OperationBlockActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void OperationBlockActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 OperationBlockEndActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void OperationBlockEndActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 OperationBlockStartActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void OperationBlockStartActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 SemanticModelActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void SemanticModelActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 SuppressionActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void SuppressionActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 SymbolActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void SymbolActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 SymbolEndActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void SymbolEndActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 SymbolStartActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void SymbolStartActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 SyntaxNodeActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void SyntaxNodeActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);
        private delegate global::System.Int32 SyntaxTreeActionsCountGetterDelegate(global::System.Object _obj);
        private delegate void SyntaxTreeActionsCountSetterDelegate(System.Object _obj, global::System.Int32 _value);

        private static readonly ConstructorDelegate0 ConstructorFunc0;

        private static readonly AdditionalFileActionsCountGetterDelegate AdditionalFileActionsCountGetterFunc;
        private static readonly AdditionalFileActionsCountSetterDelegate AdditionalFileActionsCountSetterFunc;
        private static readonly CodeBlockActionsCountGetterDelegate CodeBlockActionsCountGetterFunc;
        private static readonly CodeBlockActionsCountSetterDelegate CodeBlockActionsCountSetterFunc;
        private static readonly CodeBlockEndActionsCountGetterDelegate CodeBlockEndActionsCountGetterFunc;
        private static readonly CodeBlockEndActionsCountSetterDelegate CodeBlockEndActionsCountSetterFunc;
        private static readonly CodeBlockStartActionsCountGetterDelegate CodeBlockStartActionsCountGetterFunc;
        private static readonly CodeBlockStartActionsCountSetterDelegate CodeBlockStartActionsCountSetterFunc;
        private static readonly CompilationActionsCountGetterDelegate CompilationActionsCountGetterFunc;
        private static readonly CompilationActionsCountSetterDelegate CompilationActionsCountSetterFunc;
        private static readonly CompilationEndActionsCountGetterDelegate CompilationEndActionsCountGetterFunc;
        private static readonly CompilationEndActionsCountSetterDelegate CompilationEndActionsCountSetterFunc;
        private static readonly CompilationStartActionsCountGetterDelegate CompilationStartActionsCountGetterFunc;
        private static readonly CompilationStartActionsCountSetterDelegate CompilationStartActionsCountSetterFunc;
        private static readonly ConcurrentGetterDelegate ConcurrentGetterFunc;
        private static readonly ConcurrentSetterDelegate ConcurrentSetterFunc;
        private static readonly ExecutionTimeGetterDelegate ExecutionTimeGetterFunc;
        private static readonly ExecutionTimeSetterDelegate ExecutionTimeSetterFunc;
        private static readonly OperationActionsCountGetterDelegate OperationActionsCountGetterFunc;
        private static readonly OperationActionsCountSetterDelegate OperationActionsCountSetterFunc;
        private static readonly OperationBlockActionsCountGetterDelegate OperationBlockActionsCountGetterFunc;
        private static readonly OperationBlockActionsCountSetterDelegate OperationBlockActionsCountSetterFunc;
        private static readonly OperationBlockEndActionsCountGetterDelegate OperationBlockEndActionsCountGetterFunc;
        private static readonly OperationBlockEndActionsCountSetterDelegate OperationBlockEndActionsCountSetterFunc;
        private static readonly OperationBlockStartActionsCountGetterDelegate OperationBlockStartActionsCountGetterFunc;
        private static readonly OperationBlockStartActionsCountSetterDelegate OperationBlockStartActionsCountSetterFunc;
        private static readonly SemanticModelActionsCountGetterDelegate SemanticModelActionsCountGetterFunc;
        private static readonly SemanticModelActionsCountSetterDelegate SemanticModelActionsCountSetterFunc;
        private static readonly SuppressionActionsCountGetterDelegate SuppressionActionsCountGetterFunc;
        private static readonly SuppressionActionsCountSetterDelegate SuppressionActionsCountSetterFunc;
        private static readonly SymbolActionsCountGetterDelegate SymbolActionsCountGetterFunc;
        private static readonly SymbolActionsCountSetterDelegate SymbolActionsCountSetterFunc;
        private static readonly SymbolEndActionsCountGetterDelegate SymbolEndActionsCountGetterFunc;
        private static readonly SymbolEndActionsCountSetterDelegate SymbolEndActionsCountSetterFunc;
        private static readonly SymbolStartActionsCountGetterDelegate SymbolStartActionsCountGetterFunc;
        private static readonly SymbolStartActionsCountSetterDelegate SymbolStartActionsCountSetterFunc;
        private static readonly SyntaxNodeActionsCountGetterDelegate SyntaxNodeActionsCountGetterFunc;
        private static readonly SyntaxNodeActionsCountSetterDelegate SyntaxNodeActionsCountSetterFunc;
        private static readonly SyntaxTreeActionsCountGetterDelegate SyntaxTreeActionsCountGetterFunc;
        private static readonly SyntaxTreeActionsCountSetterDelegate SyntaxTreeActionsCountSetterFunc;

        private readonly global::System.Object wrappedObject;

        static AnalyzerTelemetryInfoWrapper()
        {
            WrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            ConstructorFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceConstructorAccessor<ConstructorDelegate0>(WrappedType);

            AdditionalFileActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<AdditionalFileActionsCountGetterDelegate>(WrappedType, nameof(AdditionalFileActionsCount));
            AdditionalFileActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<AdditionalFileActionsCountSetterDelegate>(WrappedType, nameof(AdditionalFileActionsCount));
            CodeBlockActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<CodeBlockActionsCountGetterDelegate>(WrappedType, nameof(CodeBlockActionsCount));
            CodeBlockActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<CodeBlockActionsCountSetterDelegate>(WrappedType, nameof(CodeBlockActionsCount));
            CodeBlockEndActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<CodeBlockEndActionsCountGetterDelegate>(WrappedType, nameof(CodeBlockEndActionsCount));
            CodeBlockEndActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<CodeBlockEndActionsCountSetterDelegate>(WrappedType, nameof(CodeBlockEndActionsCount));
            CodeBlockStartActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<CodeBlockStartActionsCountGetterDelegate>(WrappedType, nameof(CodeBlockStartActionsCount));
            CodeBlockStartActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<CodeBlockStartActionsCountSetterDelegate>(WrappedType, nameof(CodeBlockStartActionsCount));
            CompilationActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<CompilationActionsCountGetterDelegate>(WrappedType, nameof(CompilationActionsCount));
            CompilationActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<CompilationActionsCountSetterDelegate>(WrappedType, nameof(CompilationActionsCount));
            CompilationEndActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<CompilationEndActionsCountGetterDelegate>(WrappedType, nameof(CompilationEndActionsCount));
            CompilationEndActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<CompilationEndActionsCountSetterDelegate>(WrappedType, nameof(CompilationEndActionsCount));
            CompilationStartActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<CompilationStartActionsCountGetterDelegate>(WrappedType, nameof(CompilationStartActionsCount));
            CompilationStartActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<CompilationStartActionsCountSetterDelegate>(WrappedType, nameof(CompilationStartActionsCount));
            ConcurrentGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ConcurrentGetterDelegate>(WrappedType, nameof(Concurrent));
            ConcurrentSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<ConcurrentSetterDelegate>(WrappedType, nameof(Concurrent));
            ExecutionTimeGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ExecutionTimeGetterDelegate>(WrappedType, nameof(ExecutionTime));
            ExecutionTimeSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<ExecutionTimeSetterDelegate>(WrappedType, nameof(ExecutionTime));
            OperationActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<OperationActionsCountGetterDelegate>(WrappedType, nameof(OperationActionsCount));
            OperationActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<OperationActionsCountSetterDelegate>(WrappedType, nameof(OperationActionsCount));
            OperationBlockActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<OperationBlockActionsCountGetterDelegate>(WrappedType, nameof(OperationBlockActionsCount));
            OperationBlockActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<OperationBlockActionsCountSetterDelegate>(WrappedType, nameof(OperationBlockActionsCount));
            OperationBlockEndActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<OperationBlockEndActionsCountGetterDelegate>(WrappedType, nameof(OperationBlockEndActionsCount));
            OperationBlockEndActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<OperationBlockEndActionsCountSetterDelegate>(WrappedType, nameof(OperationBlockEndActionsCount));
            OperationBlockStartActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<OperationBlockStartActionsCountGetterDelegate>(WrappedType, nameof(OperationBlockStartActionsCount));
            OperationBlockStartActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<OperationBlockStartActionsCountSetterDelegate>(WrappedType, nameof(OperationBlockStartActionsCount));
            SemanticModelActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<SemanticModelActionsCountGetterDelegate>(WrappedType, nameof(SemanticModelActionsCount));
            SemanticModelActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<SemanticModelActionsCountSetterDelegate>(WrappedType, nameof(SemanticModelActionsCount));
            SuppressionActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<SuppressionActionsCountGetterDelegate>(WrappedType, nameof(SuppressionActionsCount));
            SuppressionActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<SuppressionActionsCountSetterDelegate>(WrappedType, nameof(SuppressionActionsCount));
            SymbolActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<SymbolActionsCountGetterDelegate>(WrappedType, nameof(SymbolActionsCount));
            SymbolActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<SymbolActionsCountSetterDelegate>(WrappedType, nameof(SymbolActionsCount));
            SymbolEndActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<SymbolEndActionsCountGetterDelegate>(WrappedType, nameof(SymbolEndActionsCount));
            SymbolEndActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<SymbolEndActionsCountSetterDelegate>(WrappedType, nameof(SymbolEndActionsCount));
            SymbolStartActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<SymbolStartActionsCountGetterDelegate>(WrappedType, nameof(SymbolStartActionsCount));
            SymbolStartActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<SymbolStartActionsCountSetterDelegate>(WrappedType, nameof(SymbolStartActionsCount));
            SyntaxNodeActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<SyntaxNodeActionsCountGetterDelegate>(WrappedType, nameof(SyntaxNodeActionsCount));
            SyntaxNodeActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<SyntaxNodeActionsCountSetterDelegate>(WrappedType, nameof(SyntaxNodeActionsCount));
            SyntaxTreeActionsCountGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<SyntaxTreeActionsCountGetterDelegate>(WrappedType, nameof(SyntaxTreeActionsCount));
            SyntaxTreeActionsCountSetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceSetAccessor<SyntaxTreeActionsCountSetterDelegate>(WrappedType, nameof(SyntaxTreeActionsCount));
        }

        private AnalyzerTelemetryInfoWrapper(global::System.Object obj)
        {
            wrappedObject = obj;
        }

        /// <summary>Constructor added in version 2.0.0.0.</summary>
        public static AnalyzerTelemetryInfoWrapper Create()
        {
            return ConstructorFunc0();
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public global::System.Int32 AdditionalFileActionsCount
        {
            get { return AdditionalFileActionsCountGetterFunc(wrappedObject); }
            set { AdditionalFileActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 CodeBlockActionsCount
        {
            get { return CodeBlockActionsCountGetterFunc(wrappedObject); }
            set { CodeBlockActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 CodeBlockEndActionsCount
        {
            get { return CodeBlockEndActionsCountGetterFunc(wrappedObject); }
            set { CodeBlockEndActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 CodeBlockStartActionsCount
        {
            get { return CodeBlockStartActionsCountGetterFunc(wrappedObject); }
            set { CodeBlockStartActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 CompilationActionsCount
        {
            get { return CompilationActionsCountGetterFunc(wrappedObject); }
            set { CompilationActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 CompilationEndActionsCount
        {
            get { return CompilationEndActionsCountGetterFunc(wrappedObject); }
            set { CompilationEndActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 CompilationStartActionsCount
        {
            get { return CompilationStartActionsCountGetterFunc(wrappedObject); }
            set { CompilationStartActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 2.9.0.0.</summary>
        public global::System.Boolean Concurrent
        {
            get { return ConcurrentGetterFunc(wrappedObject); }
            set { ConcurrentSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.TimeSpan ExecutionTime
        {
            get { return ExecutionTimeGetterFunc(wrappedObject); }
            set { ExecutionTimeSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.2.0.0.</summary>
        public global::System.Int32 OperationActionsCount
        {
            get { return OperationActionsCountGetterFunc(wrappedObject); }
            set { OperationActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.2.0.0.</summary>
        public global::System.Int32 OperationBlockActionsCount
        {
            get { return OperationBlockActionsCountGetterFunc(wrappedObject); }
            set { OperationBlockActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.2.0.0.</summary>
        public global::System.Int32 OperationBlockEndActionsCount
        {
            get { return OperationBlockEndActionsCountGetterFunc(wrappedObject); }
            set { OperationBlockEndActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.2.0.0.</summary>
        public global::System.Int32 OperationBlockStartActionsCount
        {
            get { return OperationBlockStartActionsCountGetterFunc(wrappedObject); }
            set { OperationBlockStartActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 SemanticModelActionsCount
        {
            get { return SemanticModelActionsCountGetterFunc(wrappedObject); }
            set { SemanticModelActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 3.3.0.0.</summary>
        public global::System.Int32 SuppressionActionsCount
        {
            get { return SuppressionActionsCountGetterFunc(wrappedObject); }
            set { SuppressionActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 SymbolActionsCount
        {
            get { return SymbolActionsCountGetterFunc(wrappedObject); }
            set { SymbolActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 3.0.0.0.</summary>
        public global::System.Int32 SymbolEndActionsCount
        {
            get { return SymbolEndActionsCountGetterFunc(wrappedObject); }
            set { SymbolEndActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 3.0.0.0.</summary>
        public global::System.Int32 SymbolStartActionsCount
        {
            get { return SymbolStartActionsCountGetterFunc(wrappedObject); }
            set { SymbolStartActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 SyntaxNodeActionsCount
        {
            get { return SyntaxNodeActionsCountGetterFunc(wrappedObject); }
            set { SyntaxNodeActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Property added in version 1.1.0.0.</summary>
        public global::System.Int32 SyntaxTreeActionsCount
        {
            get { return SyntaxTreeActionsCountGetterFunc(wrappedObject); }
            set { SyntaxTreeActionsCountSetterFunc(wrappedObject, value); }
        }

        /// <summary>Returns true if the specified object is compatible with this wrapper.</summary>
        public static bool Is(global::System.Object? obj)
        {
            return global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.Is(obj, WrappedType);
        }

        /// <summary>Creates a wrapper object containing the specified object. If the object is not compatible with this wrapper, an exception will be thrown.</summary>
        public static AnalyzerTelemetryInfoWrapper Wrap(global::System.Object obj)
        {
            var obj2 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.Wrap<global::System.Object>(obj, WrappedType);
            return new AnalyzerTelemetryInfoWrapper(obj2);
        }

        /// <summary>Returns the wrapped object.</summary>
        public global::System.Object Unwrap()
        {
            return wrappedObject;
        }
    }
}
