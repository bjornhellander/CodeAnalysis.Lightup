// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Diagnostics.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.</summary>
    public static partial class CompilationWithAnalyzersOptionsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions";

        private delegate Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions ConstructorDelegate0(global::Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions? options, global::System.Action<global::System.Exception, global::Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, global::Microsoft.CodeAnalysis.Diagnostic>? onAnalyzerException, global::System.Boolean concurrentAnalysis, global::System.Boolean logAnalyzerExecutionTime, global::System.Boolean reportSuppressedDiagnostics, global::System.Func<global::System.Exception, global::System.Boolean>? analyzerExceptionFilter);

        private delegate global::System.Func<global::System.Exception, global::System.Boolean>? AnalyzerExceptionFilterGetterDelegate(global::Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions _obj);

        private static readonly ConstructorDelegate0 ConstructorFunc0;

        private static readonly AnalyzerExceptionFilterGetterDelegate AnalyzerExceptionFilterGetterFunc;

        static CompilationWithAnalyzersOptionsEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            ConstructorFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceConstructorAccessor<ConstructorDelegate0>(wrappedType, "optionsAnalyzerOptions", "onAnalyzerExceptionAction`3", "concurrentAnalysisBoolean", "logAnalyzerExecutionTimeBoolean", "reportSuppressedDiagnosticsBoolean", "analyzerExceptionFilterFunc`2");

            AnalyzerExceptionFilterGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<AnalyzerExceptionFilterGetterDelegate>(wrappedType, nameof(AnalyzerExceptionFilter));
        }

        /// <summary>Constructor added in version 1.2.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions Create(global::Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions? options, global::System.Action<global::System.Exception, global::Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, global::Microsoft.CodeAnalysis.Diagnostic>? onAnalyzerException, global::System.Boolean concurrentAnalysis, global::System.Boolean logAnalyzerExecutionTime, global::System.Boolean reportSuppressedDiagnostics, global::System.Func<global::System.Exception, global::System.Boolean>? analyzerExceptionFilter)
        {
            return ConstructorFunc0(options, onAnalyzerException, concurrentAnalysis, logAnalyzerExecutionTime, reportSuppressedDiagnostics, analyzerExceptionFilter);
        }

        /// <summary>Property added in version 1.2.0.0.</summary>
        public static global::System.Func<global::System.Exception, global::System.Boolean>? AnalyzerExceptionFilter(this global::Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions _obj)
        {
            return AnalyzerExceptionFilterGetterFunc(_obj);
        }
    }
}
