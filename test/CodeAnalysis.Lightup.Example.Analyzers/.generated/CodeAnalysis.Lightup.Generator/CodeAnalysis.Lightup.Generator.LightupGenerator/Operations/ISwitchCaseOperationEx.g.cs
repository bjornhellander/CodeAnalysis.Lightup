// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation.</summary>
    public static partial class ISwitchCaseOperationEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation";

        private delegate global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.ILocalSymbol> LocalsGetterDelegate(global::Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation _obj);

        private static readonly LocalsGetterDelegate LocalsGetterFunc;

        static ISwitchCaseOperationEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            LocalsGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<LocalsGetterDelegate>(wrappedType, nameof(Locals));
        }

        /// <summary>Property added in version 2.9.0.0.</summary>
        public static global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.ILocalSymbol> Locals(this global::Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation _obj)
        {
            return LocalsGetterFunc(_obj);
        }
    }
}
