// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation.</summary>
    public static partial class ILocalFunctionOperationEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation";

        private delegate global::Microsoft.CodeAnalysis.Operations.IBlockOperation? IgnoredBodyGetterDelegate(global::Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation _obj);

        private static readonly IgnoredBodyGetterDelegate IgnoredBodyGetterFunc;

        static ILocalFunctionOperationEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            IgnoredBodyGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<IgnoredBodyGetterDelegate>(wrappedType, nameof(IgnoredBody));
        }

        /// <summary>Property added in version 2.8.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Operations.IBlockOperation? IgnoredBody(this global::Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation _obj)
        {
            return IgnoredBodyGetterFunc(_obj);
        }
    }
}
