// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.ICoalesceOperation.</summary>
    public static partial class ICoalesceOperationEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.ICoalesceOperation";

        private delegate global::Microsoft.CodeAnalysis.Operations.CommonConversion ValueConversionGetterDelegate(global::Microsoft.CodeAnalysis.Operations.ICoalesceOperation _obj);

        private static readonly ValueConversionGetterDelegate ValueConversionGetterFunc;

        static ICoalesceOperationEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            ValueConversionGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ValueConversionGetterDelegate>(wrappedType, nameof(ValueConversion));
        }

        /// <summary>Property added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Operations.CommonConversion ValueConversion(this global::Microsoft.CodeAnalysis.Operations.ICoalesceOperation _obj)
        {
            return ValueConversionGetterFunc(_obj);
        }
    }
}
