// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.ILoopOperation.</summary>
    public static partial class ILoopOperationEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.ILoopOperation";

        private delegate global::Microsoft.CodeAnalysis.ILabelSymbol ContinueLabelGetterDelegate(global::Microsoft.CodeAnalysis.Operations.ILoopOperation _obj);
        private delegate global::Microsoft.CodeAnalysis.ILabelSymbol ExitLabelGetterDelegate(global::Microsoft.CodeAnalysis.Operations.ILoopOperation _obj);

        private static readonly ContinueLabelGetterDelegate ContinueLabelGetterFunc;
        private static readonly ExitLabelGetterDelegate ExitLabelGetterFunc;

        static ILoopOperationEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            ContinueLabelGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ContinueLabelGetterDelegate>(wrappedType, nameof(ContinueLabel));
            ExitLabelGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ExitLabelGetterDelegate>(wrappedType, nameof(ExitLabel));
        }

        /// <summary>Property added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.ILabelSymbol ContinueLabel(this global::Microsoft.CodeAnalysis.Operations.ILoopOperation _obj)
        {
            return ContinueLabelGetterFunc(_obj);
        }

        /// <summary>Property added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.ILabelSymbol ExitLabel(this global::Microsoft.CodeAnalysis.Operations.ILoopOperation _obj)
        {
            return ExitLabelGetterFunc(_obj);
        }
    }
}
