// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.ITryOperation.</summary>
    public static partial class ITryOperationEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.ITryOperation";

        private delegate global::Microsoft.CodeAnalysis.ILabelSymbol? ExitLabelGetterDelegate(global::Microsoft.CodeAnalysis.Operations.ITryOperation _obj);

        private static readonly ExitLabelGetterDelegate ExitLabelGetterFunc;

        static ITryOperationEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            ExitLabelGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<ExitLabelGetterDelegate>(wrappedType, nameof(ExitLabel));
        }

        /// <summary>Property added in version 2.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.ILabelSymbol? ExitLabel(this global::Microsoft.CodeAnalysis.Operations.ITryOperation _obj)
        {
            return ExitLabelGetterFunc(_obj);
        }
    }
}
