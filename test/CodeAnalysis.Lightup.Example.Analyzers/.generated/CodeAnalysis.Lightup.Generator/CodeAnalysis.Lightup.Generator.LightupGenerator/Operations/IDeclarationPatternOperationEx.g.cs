// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation.</summary>
    public static partial class IDeclarationPatternOperationEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation";

        private delegate global::Microsoft.CodeAnalysis.ITypeSymbol? MatchedTypeGetterDelegate(global::Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation _obj);
        private delegate global::System.Boolean MatchesNullGetterDelegate(global::Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation _obj);

        private static readonly MatchedTypeGetterDelegate MatchedTypeGetterFunc;
        private static readonly MatchesNullGetterDelegate MatchesNullGetterFunc;

        static IDeclarationPatternOperationEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            MatchedTypeGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<MatchedTypeGetterDelegate>(wrappedType, nameof(MatchedType));
            MatchesNullGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<MatchesNullGetterDelegate>(wrappedType, nameof(MatchesNull));
        }

        /// <summary>Property added in version 3.0.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.ITypeSymbol? MatchedType(this global::Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation _obj)
        {
            return MatchedTypeGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.0.0.0.</summary>
        public static global::System.Boolean MatchesNull(this global::Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation _obj)
        {
            return MatchesNullGetterFunc(_obj);
        }
    }
}
