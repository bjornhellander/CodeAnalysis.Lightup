// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Operations.OperationVisitor. Added in version 2.6.0.0.</summary>
    public partial struct OperationVisitorWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.OperationVisitor";

        private static readonly global::System.Type? WrappedType;

        private delegate void DefaultVisitDelegate0(global::System.Object _obj, global::Microsoft.CodeAnalysis.Lightup.IOperationWrapper operation);
        private delegate void VisitDelegate1(global::System.Object _obj, global::Microsoft.CodeAnalysis.Lightup.IOperationWrapper? operation);
        private delegate void VisitAddressOfDelegate2(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IAddressOfOperationWrapper operation);
        private delegate void VisitAnonymousFunctionDelegate3(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IAnonymousFunctionOperationWrapper operation);
        private delegate void VisitAnonymousObjectCreationDelegate4(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IAnonymousObjectCreationOperationWrapper operation);
        private delegate void VisitArgumentDelegate5(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IArgumentOperationWrapper operation);
        private delegate void VisitArrayCreationDelegate6(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IArrayCreationOperationWrapper operation);
        private delegate void VisitArrayElementReferenceDelegate7(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IArrayElementReferenceOperationWrapper operation);
        private delegate void VisitArrayInitializerDelegate8(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IArrayInitializerOperationWrapper operation);
        private delegate void VisitAttributeDelegate9(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IAttributeOperationWrapper operation);
        private delegate void VisitAwaitDelegate10(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IAwaitOperationWrapper operation);
        private delegate void VisitBinaryOperatorDelegate11(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IBinaryOperationWrapper operation);
        private delegate void VisitBinaryPatternDelegate12(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IBinaryPatternOperationWrapper operation);
        private delegate void VisitBlockDelegate13(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IBlockOperationWrapper operation);
        private delegate void VisitBranchDelegate14(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IBranchOperationWrapper operation);
        private delegate void VisitCatchClauseDelegate15(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ICatchClauseOperationWrapper operation);
        private delegate void VisitCaughtExceptionDelegate16(global::System.Object _obj, global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.ICaughtExceptionOperationWrapper operation);
        private delegate void VisitCoalesceDelegate17(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ICoalesceOperationWrapper operation);
        private delegate void VisitCoalesceAssignmentDelegate18(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ICoalesceAssignmentOperationWrapper operation);
        private delegate void VisitCollectionElementInitializerDelegate19(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ICollectionElementInitializerOperationWrapper operation);
        private delegate void VisitCollectionExpressionDelegate20(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ICollectionExpressionOperationWrapper operation);
        private delegate void VisitCompoundAssignmentDelegate21(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ICompoundAssignmentOperationWrapper operation);
        private delegate void VisitConditionalDelegate22(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IConditionalOperationWrapper operation);
        private delegate void VisitConditionalAccessDelegate23(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IConditionalAccessOperationWrapper operation);
        private delegate void VisitConditionalAccessInstanceDelegate24(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IConditionalAccessInstanceOperationWrapper operation);
        private delegate void VisitConstantPatternDelegate25(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IConstantPatternOperationWrapper operation);
        private delegate void VisitConstructorBodyOperationDelegate26(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IConstructorBodyOperationWrapper operation);
        private delegate void VisitConversionDelegate27(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IConversionOperationWrapper operation);
        private delegate void VisitDeclarationExpressionDelegate28(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDeclarationExpressionOperationWrapper operation);
        private delegate void VisitDeclarationPatternDelegate29(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDeclarationPatternOperationWrapper operation);
        private delegate void VisitDeconstructionAssignmentDelegate30(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDeconstructionAssignmentOperationWrapper operation);
        private delegate void VisitDefaultCaseClauseDelegate31(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDefaultCaseClauseOperationWrapper operation);
        private delegate void VisitDefaultValueDelegate32(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDefaultValueOperationWrapper operation);
        private delegate void VisitDelegateCreationDelegate33(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDelegateCreationOperationWrapper operation);
        private delegate void VisitDiscardOperationDelegate34(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDiscardOperationWrapper operation);
        private delegate void VisitDiscardPatternDelegate35(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDiscardPatternOperationWrapper operation);
        private delegate void VisitDynamicIndexerAccessDelegate36(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicIndexerAccessOperationWrapper operation);
        private delegate void VisitDynamicInvocationDelegate37(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicInvocationOperationWrapper operation);
        private delegate void VisitDynamicMemberReferenceDelegate38(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicMemberReferenceOperationWrapper operation);
        private delegate void VisitDynamicObjectCreationDelegate39(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicObjectCreationOperationWrapper operation);
        private delegate void VisitEmptyDelegate40(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IEmptyOperationWrapper operation);
        private delegate void VisitEndDelegate41(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IEndOperationWrapper operation);
        private delegate void VisitEventAssignmentDelegate42(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IEventAssignmentOperationWrapper operation);
        private delegate void VisitEventReferenceDelegate43(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IEventReferenceOperationWrapper operation);
        private delegate void VisitExpressionStatementDelegate44(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IExpressionStatementOperationWrapper operation);
        private delegate void VisitFieldInitializerDelegate45(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IFieldInitializerOperationWrapper operation);
        private delegate void VisitFieldReferenceDelegate46(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IFieldReferenceOperationWrapper operation);
        private delegate void VisitFlowAnonymousFunctionDelegate47(global::System.Object _obj, global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IFlowAnonymousFunctionOperationWrapper operation);
        private delegate void VisitFlowCaptureDelegate48(global::System.Object _obj, global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IFlowCaptureOperationWrapper operation);
        private delegate void VisitFlowCaptureReferenceDelegate49(global::System.Object _obj, global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IFlowCaptureReferenceOperationWrapper operation);
        private delegate void VisitForEachLoopDelegate50(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IForEachLoopOperationWrapper operation);
        private delegate void VisitForLoopDelegate51(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IForLoopOperationWrapper operation);
        private delegate void VisitForToLoopDelegate52(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IForToLoopOperationWrapper operation);
        private delegate void VisitFunctionPointerInvocationDelegate53(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IFunctionPointerInvocationOperationWrapper operation);
        private delegate void VisitImplicitIndexerReferenceDelegate54(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IImplicitIndexerReferenceOperationWrapper operation);
        private delegate void VisitIncrementOrDecrementDelegate55(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IIncrementOrDecrementOperationWrapper operation);
        private delegate void VisitInlineArrayAccessDelegate56(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInlineArrayAccessOperationWrapper operation);
        private delegate void VisitInstanceReferenceDelegate57(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInstanceReferenceOperationWrapper operation);
        private delegate void VisitInterpolatedStringDelegate58(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringOperationWrapper operation);
        private delegate void VisitInterpolatedStringAdditionDelegate59(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringAdditionOperationWrapper operation);
        private delegate void VisitInterpolatedStringAppendDelegate60(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringAppendOperationWrapper operation);
        private delegate void VisitInterpolatedStringHandlerArgumentPlaceholderDelegate61(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper operation);
        private delegate void VisitInterpolatedStringHandlerCreationDelegate62(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringHandlerCreationOperationWrapper operation);
        private delegate void VisitInterpolatedStringTextDelegate63(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringTextOperationWrapper operation);
        private delegate void VisitInterpolationDelegate64(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolationOperationWrapper operation);
        private delegate void VisitInvalidDelegate65(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInvalidOperationWrapper operation);
        private delegate void VisitInvocationDelegate66(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IInvocationOperationWrapper operation);
        private delegate void VisitIsNullDelegate67(global::System.Object _obj, global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IIsNullOperationWrapper operation);
        private delegate void VisitIsPatternDelegate68(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IIsPatternOperationWrapper operation);
        private delegate void VisitIsTypeDelegate69(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IIsTypeOperationWrapper operation);
        private delegate void VisitLabeledDelegate70(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ILabeledOperationWrapper operation);
        private delegate void VisitListPatternDelegate71(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IListPatternOperationWrapper operation);
        private delegate void VisitLiteralDelegate72(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ILiteralOperationWrapper operation);
        private delegate void VisitLocalFunctionDelegate73(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ILocalFunctionOperationWrapper operation);
        private delegate void VisitLocalReferenceDelegate74(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ILocalReferenceOperationWrapper operation);
        private delegate void VisitLockDelegate75(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ILockOperationWrapper operation);
        private delegate void VisitMemberInitializerDelegate76(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IMemberInitializerOperationWrapper operation);
        private delegate void VisitMethodBodyOperationDelegate77(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IMethodBodyOperationWrapper operation);
        private delegate void VisitMethodReferenceDelegate78(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IMethodReferenceOperationWrapper operation);
        private delegate void VisitNameOfDelegate79(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.INameOfOperationWrapper operation);
        private delegate void VisitNegatedPatternDelegate80(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.INegatedPatternOperationWrapper operation);
        private delegate void VisitObjectCreationDelegate81(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IObjectCreationOperationWrapper operation);
        private delegate void VisitObjectOrCollectionInitializerDelegate82(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IObjectOrCollectionInitializerOperationWrapper operation);
        private delegate void VisitOmittedArgumentDelegate83(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IOmittedArgumentOperationWrapper operation);
        private delegate void VisitParameterInitializerDelegate84(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IParameterInitializerOperationWrapper operation);
        private delegate void VisitParameterReferenceDelegate85(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IParameterReferenceOperationWrapper operation);
        private delegate void VisitParenthesizedDelegate86(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IParenthesizedOperationWrapper operation);
        private delegate void VisitPatternCaseClauseDelegate87(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IPatternCaseClauseOperationWrapper operation);
        private delegate void VisitPropertyInitializerDelegate88(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IPropertyInitializerOperationWrapper operation);
        private delegate void VisitPropertyReferenceDelegate89(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IPropertyReferenceOperationWrapper operation);
        private delegate void VisitPropertySubpatternDelegate90(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IPropertySubpatternOperationWrapper operation);
        private delegate void VisitRaiseEventDelegate91(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IRaiseEventOperationWrapper operation);
        private delegate void VisitRangeCaseClauseDelegate92(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IRangeCaseClauseOperationWrapper operation);
        private delegate void VisitRangeOperationDelegate93(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IRangeOperationWrapper operation);
        private delegate void VisitRecursivePatternDelegate94(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IRecursivePatternOperationWrapper operation);
        private delegate void VisitReDimDelegate95(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IReDimOperationWrapper operation);
        private delegate void VisitReDimClauseDelegate96(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IReDimClauseOperationWrapper operation);
        private delegate void VisitRelationalCaseClauseDelegate97(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IRelationalCaseClauseOperationWrapper operation);
        private delegate void VisitRelationalPatternDelegate98(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IRelationalPatternOperationWrapper operation);
        private delegate void VisitReturnDelegate99(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IReturnOperationWrapper operation);
        private delegate void VisitSimpleAssignmentDelegate100(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISimpleAssignmentOperationWrapper operation);
        private delegate void VisitSingleValueCaseClauseDelegate101(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISingleValueCaseClauseOperationWrapper operation);
        private delegate void VisitSizeOfDelegate102(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISizeOfOperationWrapper operation);
        private delegate void VisitSlicePatternDelegate103(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISlicePatternOperationWrapper operation);
        private delegate void VisitSpreadDelegate104(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISpreadOperationWrapper operation);
        private delegate void VisitStaticLocalInitializationSemaphoreDelegate105(global::System.Object _obj, global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IStaticLocalInitializationSemaphoreOperationWrapper operation);
        private delegate void VisitStopDelegate106(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IStopOperationWrapper operation);
        private delegate void VisitSwitchDelegate107(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchOperationWrapper operation);
        private delegate void VisitSwitchCaseDelegate108(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchCaseOperationWrapper operation);
        private delegate void VisitSwitchExpressionDelegate109(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchExpressionOperationWrapper operation);
        private delegate void VisitSwitchExpressionArmDelegate110(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchExpressionArmOperationWrapper operation);
        private delegate void VisitThrowDelegate111(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IThrowOperationWrapper operation);
        private delegate void VisitTranslatedQueryDelegate112(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ITranslatedQueryOperationWrapper operation);
        private delegate void VisitTryDelegate113(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ITryOperationWrapper operation);
        private delegate void VisitTupleDelegate114(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ITupleOperationWrapper operation);
        private delegate void VisitTupleBinaryOperatorDelegate115(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ITupleBinaryOperationWrapper operation);
        private delegate void VisitTypeOfDelegate116(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ITypeOfOperationWrapper operation);
        private delegate void VisitTypeParameterObjectCreationDelegate117(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ITypeParameterObjectCreationOperationWrapper operation);
        private delegate void VisitTypePatternDelegate118(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.ITypePatternOperationWrapper operation);
        private delegate void VisitUnaryOperatorDelegate119(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IUnaryOperationWrapper operation);
        private delegate void VisitUsingDelegate120(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IUsingOperationWrapper operation);
        private delegate void VisitUsingDeclarationDelegate121(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IUsingDeclarationOperationWrapper operation);
        private delegate void VisitUtf8StringDelegate122(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IUtf8StringOperationWrapper operation);
        private delegate void VisitVariableDeclarationDelegate123(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableDeclarationOperationWrapper operation);
        private delegate void VisitVariableDeclarationGroupDelegate124(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableDeclarationGroupOperationWrapper operation);
        private delegate void VisitVariableDeclaratorDelegate125(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableDeclaratorOperationWrapper operation);
        private delegate void VisitVariableInitializerDelegate126(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableInitializerOperationWrapper operation);
        private delegate void VisitWhileLoopDelegate127(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IWhileLoopOperationWrapper operation);
        private delegate void VisitWithDelegate128(global::System.Object _obj, global::Microsoft.CodeAnalysis.Operations.Lightup.IWithOperationWrapper operation);

        private static readonly DefaultVisitDelegate0 DefaultVisitFunc0;
        private static readonly VisitDelegate1 VisitFunc1;
        private static readonly VisitAddressOfDelegate2 VisitAddressOfFunc2;
        private static readonly VisitAnonymousFunctionDelegate3 VisitAnonymousFunctionFunc3;
        private static readonly VisitAnonymousObjectCreationDelegate4 VisitAnonymousObjectCreationFunc4;
        private static readonly VisitArgumentDelegate5 VisitArgumentFunc5;
        private static readonly VisitArrayCreationDelegate6 VisitArrayCreationFunc6;
        private static readonly VisitArrayElementReferenceDelegate7 VisitArrayElementReferenceFunc7;
        private static readonly VisitArrayInitializerDelegate8 VisitArrayInitializerFunc8;
        private static readonly VisitAttributeDelegate9 VisitAttributeFunc9;
        private static readonly VisitAwaitDelegate10 VisitAwaitFunc10;
        private static readonly VisitBinaryOperatorDelegate11 VisitBinaryOperatorFunc11;
        private static readonly VisitBinaryPatternDelegate12 VisitBinaryPatternFunc12;
        private static readonly VisitBlockDelegate13 VisitBlockFunc13;
        private static readonly VisitBranchDelegate14 VisitBranchFunc14;
        private static readonly VisitCatchClauseDelegate15 VisitCatchClauseFunc15;
        private static readonly VisitCaughtExceptionDelegate16 VisitCaughtExceptionFunc16;
        private static readonly VisitCoalesceDelegate17 VisitCoalesceFunc17;
        private static readonly VisitCoalesceAssignmentDelegate18 VisitCoalesceAssignmentFunc18;
        private static readonly VisitCollectionElementInitializerDelegate19 VisitCollectionElementInitializerFunc19;
        private static readonly VisitCollectionExpressionDelegate20 VisitCollectionExpressionFunc20;
        private static readonly VisitCompoundAssignmentDelegate21 VisitCompoundAssignmentFunc21;
        private static readonly VisitConditionalDelegate22 VisitConditionalFunc22;
        private static readonly VisitConditionalAccessDelegate23 VisitConditionalAccessFunc23;
        private static readonly VisitConditionalAccessInstanceDelegate24 VisitConditionalAccessInstanceFunc24;
        private static readonly VisitConstantPatternDelegate25 VisitConstantPatternFunc25;
        private static readonly VisitConstructorBodyOperationDelegate26 VisitConstructorBodyOperationFunc26;
        private static readonly VisitConversionDelegate27 VisitConversionFunc27;
        private static readonly VisitDeclarationExpressionDelegate28 VisitDeclarationExpressionFunc28;
        private static readonly VisitDeclarationPatternDelegate29 VisitDeclarationPatternFunc29;
        private static readonly VisitDeconstructionAssignmentDelegate30 VisitDeconstructionAssignmentFunc30;
        private static readonly VisitDefaultCaseClauseDelegate31 VisitDefaultCaseClauseFunc31;
        private static readonly VisitDefaultValueDelegate32 VisitDefaultValueFunc32;
        private static readonly VisitDelegateCreationDelegate33 VisitDelegateCreationFunc33;
        private static readonly VisitDiscardOperationDelegate34 VisitDiscardOperationFunc34;
        private static readonly VisitDiscardPatternDelegate35 VisitDiscardPatternFunc35;
        private static readonly VisitDynamicIndexerAccessDelegate36 VisitDynamicIndexerAccessFunc36;
        private static readonly VisitDynamicInvocationDelegate37 VisitDynamicInvocationFunc37;
        private static readonly VisitDynamicMemberReferenceDelegate38 VisitDynamicMemberReferenceFunc38;
        private static readonly VisitDynamicObjectCreationDelegate39 VisitDynamicObjectCreationFunc39;
        private static readonly VisitEmptyDelegate40 VisitEmptyFunc40;
        private static readonly VisitEndDelegate41 VisitEndFunc41;
        private static readonly VisitEventAssignmentDelegate42 VisitEventAssignmentFunc42;
        private static readonly VisitEventReferenceDelegate43 VisitEventReferenceFunc43;
        private static readonly VisitExpressionStatementDelegate44 VisitExpressionStatementFunc44;
        private static readonly VisitFieldInitializerDelegate45 VisitFieldInitializerFunc45;
        private static readonly VisitFieldReferenceDelegate46 VisitFieldReferenceFunc46;
        private static readonly VisitFlowAnonymousFunctionDelegate47 VisitFlowAnonymousFunctionFunc47;
        private static readonly VisitFlowCaptureDelegate48 VisitFlowCaptureFunc48;
        private static readonly VisitFlowCaptureReferenceDelegate49 VisitFlowCaptureReferenceFunc49;
        private static readonly VisitForEachLoopDelegate50 VisitForEachLoopFunc50;
        private static readonly VisitForLoopDelegate51 VisitForLoopFunc51;
        private static readonly VisitForToLoopDelegate52 VisitForToLoopFunc52;
        private static readonly VisitFunctionPointerInvocationDelegate53 VisitFunctionPointerInvocationFunc53;
        private static readonly VisitImplicitIndexerReferenceDelegate54 VisitImplicitIndexerReferenceFunc54;
        private static readonly VisitIncrementOrDecrementDelegate55 VisitIncrementOrDecrementFunc55;
        private static readonly VisitInlineArrayAccessDelegate56 VisitInlineArrayAccessFunc56;
        private static readonly VisitInstanceReferenceDelegate57 VisitInstanceReferenceFunc57;
        private static readonly VisitInterpolatedStringDelegate58 VisitInterpolatedStringFunc58;
        private static readonly VisitInterpolatedStringAdditionDelegate59 VisitInterpolatedStringAdditionFunc59;
        private static readonly VisitInterpolatedStringAppendDelegate60 VisitInterpolatedStringAppendFunc60;
        private static readonly VisitInterpolatedStringHandlerArgumentPlaceholderDelegate61 VisitInterpolatedStringHandlerArgumentPlaceholderFunc61;
        private static readonly VisitInterpolatedStringHandlerCreationDelegate62 VisitInterpolatedStringHandlerCreationFunc62;
        private static readonly VisitInterpolatedStringTextDelegate63 VisitInterpolatedStringTextFunc63;
        private static readonly VisitInterpolationDelegate64 VisitInterpolationFunc64;
        private static readonly VisitInvalidDelegate65 VisitInvalidFunc65;
        private static readonly VisitInvocationDelegate66 VisitInvocationFunc66;
        private static readonly VisitIsNullDelegate67 VisitIsNullFunc67;
        private static readonly VisitIsPatternDelegate68 VisitIsPatternFunc68;
        private static readonly VisitIsTypeDelegate69 VisitIsTypeFunc69;
        private static readonly VisitLabeledDelegate70 VisitLabeledFunc70;
        private static readonly VisitListPatternDelegate71 VisitListPatternFunc71;
        private static readonly VisitLiteralDelegate72 VisitLiteralFunc72;
        private static readonly VisitLocalFunctionDelegate73 VisitLocalFunctionFunc73;
        private static readonly VisitLocalReferenceDelegate74 VisitLocalReferenceFunc74;
        private static readonly VisitLockDelegate75 VisitLockFunc75;
        private static readonly VisitMemberInitializerDelegate76 VisitMemberInitializerFunc76;
        private static readonly VisitMethodBodyOperationDelegate77 VisitMethodBodyOperationFunc77;
        private static readonly VisitMethodReferenceDelegate78 VisitMethodReferenceFunc78;
        private static readonly VisitNameOfDelegate79 VisitNameOfFunc79;
        private static readonly VisitNegatedPatternDelegate80 VisitNegatedPatternFunc80;
        private static readonly VisitObjectCreationDelegate81 VisitObjectCreationFunc81;
        private static readonly VisitObjectOrCollectionInitializerDelegate82 VisitObjectOrCollectionInitializerFunc82;
        private static readonly VisitOmittedArgumentDelegate83 VisitOmittedArgumentFunc83;
        private static readonly VisitParameterInitializerDelegate84 VisitParameterInitializerFunc84;
        private static readonly VisitParameterReferenceDelegate85 VisitParameterReferenceFunc85;
        private static readonly VisitParenthesizedDelegate86 VisitParenthesizedFunc86;
        private static readonly VisitPatternCaseClauseDelegate87 VisitPatternCaseClauseFunc87;
        private static readonly VisitPropertyInitializerDelegate88 VisitPropertyInitializerFunc88;
        private static readonly VisitPropertyReferenceDelegate89 VisitPropertyReferenceFunc89;
        private static readonly VisitPropertySubpatternDelegate90 VisitPropertySubpatternFunc90;
        private static readonly VisitRaiseEventDelegate91 VisitRaiseEventFunc91;
        private static readonly VisitRangeCaseClauseDelegate92 VisitRangeCaseClauseFunc92;
        private static readonly VisitRangeOperationDelegate93 VisitRangeOperationFunc93;
        private static readonly VisitRecursivePatternDelegate94 VisitRecursivePatternFunc94;
        private static readonly VisitReDimDelegate95 VisitReDimFunc95;
        private static readonly VisitReDimClauseDelegate96 VisitReDimClauseFunc96;
        private static readonly VisitRelationalCaseClauseDelegate97 VisitRelationalCaseClauseFunc97;
        private static readonly VisitRelationalPatternDelegate98 VisitRelationalPatternFunc98;
        private static readonly VisitReturnDelegate99 VisitReturnFunc99;
        private static readonly VisitSimpleAssignmentDelegate100 VisitSimpleAssignmentFunc100;
        private static readonly VisitSingleValueCaseClauseDelegate101 VisitSingleValueCaseClauseFunc101;
        private static readonly VisitSizeOfDelegate102 VisitSizeOfFunc102;
        private static readonly VisitSlicePatternDelegate103 VisitSlicePatternFunc103;
        private static readonly VisitSpreadDelegate104 VisitSpreadFunc104;
        private static readonly VisitStaticLocalInitializationSemaphoreDelegate105 VisitStaticLocalInitializationSemaphoreFunc105;
        private static readonly VisitStopDelegate106 VisitStopFunc106;
        private static readonly VisitSwitchDelegate107 VisitSwitchFunc107;
        private static readonly VisitSwitchCaseDelegate108 VisitSwitchCaseFunc108;
        private static readonly VisitSwitchExpressionDelegate109 VisitSwitchExpressionFunc109;
        private static readonly VisitSwitchExpressionArmDelegate110 VisitSwitchExpressionArmFunc110;
        private static readonly VisitThrowDelegate111 VisitThrowFunc111;
        private static readonly VisitTranslatedQueryDelegate112 VisitTranslatedQueryFunc112;
        private static readonly VisitTryDelegate113 VisitTryFunc113;
        private static readonly VisitTupleDelegate114 VisitTupleFunc114;
        private static readonly VisitTupleBinaryOperatorDelegate115 VisitTupleBinaryOperatorFunc115;
        private static readonly VisitTypeOfDelegate116 VisitTypeOfFunc116;
        private static readonly VisitTypeParameterObjectCreationDelegate117 VisitTypeParameterObjectCreationFunc117;
        private static readonly VisitTypePatternDelegate118 VisitTypePatternFunc118;
        private static readonly VisitUnaryOperatorDelegate119 VisitUnaryOperatorFunc119;
        private static readonly VisitUsingDelegate120 VisitUsingFunc120;
        private static readonly VisitUsingDeclarationDelegate121 VisitUsingDeclarationFunc121;
        private static readonly VisitUtf8StringDelegate122 VisitUtf8StringFunc122;
        private static readonly VisitVariableDeclarationDelegate123 VisitVariableDeclarationFunc123;
        private static readonly VisitVariableDeclarationGroupDelegate124 VisitVariableDeclarationGroupFunc124;
        private static readonly VisitVariableDeclaratorDelegate125 VisitVariableDeclaratorFunc125;
        private static readonly VisitVariableInitializerDelegate126 VisitVariableInitializerFunc126;
        private static readonly VisitWhileLoopDelegate127 VisitWhileLoopFunc127;
        private static readonly VisitWithDelegate128 VisitWithFunc128;

        private readonly global::System.Object wrappedObject;

        static OperationVisitorWrapper()
        {
            WrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            DefaultVisitFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<DefaultVisitDelegate0>(WrappedType, "DefaultVisit", "operationIOperation");
            VisitFunc1 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDelegate1>(WrappedType, "Visit", "operationIOperation");
            VisitAddressOfFunc2 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitAddressOfDelegate2>(WrappedType, "VisitAddressOf", "operationIAddressOfOperation");
            VisitAnonymousFunctionFunc3 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitAnonymousFunctionDelegate3>(WrappedType, "VisitAnonymousFunction", "operationIAnonymousFunctionOperation");
            VisitAnonymousObjectCreationFunc4 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitAnonymousObjectCreationDelegate4>(WrappedType, "VisitAnonymousObjectCreation", "operationIAnonymousObjectCreationOperation");
            VisitArgumentFunc5 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitArgumentDelegate5>(WrappedType, "VisitArgument", "operationIArgumentOperation");
            VisitArrayCreationFunc6 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitArrayCreationDelegate6>(WrappedType, "VisitArrayCreation", "operationIArrayCreationOperation");
            VisitArrayElementReferenceFunc7 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitArrayElementReferenceDelegate7>(WrappedType, "VisitArrayElementReference", "operationIArrayElementReferenceOperation");
            VisitArrayInitializerFunc8 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitArrayInitializerDelegate8>(WrappedType, "VisitArrayInitializer", "operationIArrayInitializerOperation");
            VisitAttributeFunc9 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitAttributeDelegate9>(WrappedType, "VisitAttribute", "operationIAttributeOperation");
            VisitAwaitFunc10 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitAwaitDelegate10>(WrappedType, "VisitAwait", "operationIAwaitOperation");
            VisitBinaryOperatorFunc11 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitBinaryOperatorDelegate11>(WrappedType, "VisitBinaryOperator", "operationIBinaryOperation");
            VisitBinaryPatternFunc12 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitBinaryPatternDelegate12>(WrappedType, "VisitBinaryPattern", "operationIBinaryPatternOperation");
            VisitBlockFunc13 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitBlockDelegate13>(WrappedType, "VisitBlock", "operationIBlockOperation");
            VisitBranchFunc14 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitBranchDelegate14>(WrappedType, "VisitBranch", "operationIBranchOperation");
            VisitCatchClauseFunc15 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitCatchClauseDelegate15>(WrappedType, "VisitCatchClause", "operationICatchClauseOperation");
            VisitCaughtExceptionFunc16 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitCaughtExceptionDelegate16>(WrappedType, "VisitCaughtException", "operationICaughtExceptionOperation");
            VisitCoalesceFunc17 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitCoalesceDelegate17>(WrappedType, "VisitCoalesce", "operationICoalesceOperation");
            VisitCoalesceAssignmentFunc18 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitCoalesceAssignmentDelegate18>(WrappedType, "VisitCoalesceAssignment", "operationICoalesceAssignmentOperation");
            VisitCollectionElementInitializerFunc19 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitCollectionElementInitializerDelegate19>(WrappedType, "VisitCollectionElementInitializer", "operationICollectionElementInitializerOperation");
            VisitCollectionExpressionFunc20 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitCollectionExpressionDelegate20>(WrappedType, "VisitCollectionExpression", "operationICollectionExpressionOperation");
            VisitCompoundAssignmentFunc21 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitCompoundAssignmentDelegate21>(WrappedType, "VisitCompoundAssignment", "operationICompoundAssignmentOperation");
            VisitConditionalFunc22 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitConditionalDelegate22>(WrappedType, "VisitConditional", "operationIConditionalOperation");
            VisitConditionalAccessFunc23 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitConditionalAccessDelegate23>(WrappedType, "VisitConditionalAccess", "operationIConditionalAccessOperation");
            VisitConditionalAccessInstanceFunc24 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitConditionalAccessInstanceDelegate24>(WrappedType, "VisitConditionalAccessInstance", "operationIConditionalAccessInstanceOperation");
            VisitConstantPatternFunc25 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitConstantPatternDelegate25>(WrappedType, "VisitConstantPattern", "operationIConstantPatternOperation");
            VisitConstructorBodyOperationFunc26 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitConstructorBodyOperationDelegate26>(WrappedType, "VisitConstructorBodyOperation", "operationIConstructorBodyOperation");
            VisitConversionFunc27 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitConversionDelegate27>(WrappedType, "VisitConversion", "operationIConversionOperation");
            VisitDeclarationExpressionFunc28 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDeclarationExpressionDelegate28>(WrappedType, "VisitDeclarationExpression", "operationIDeclarationExpressionOperation");
            VisitDeclarationPatternFunc29 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDeclarationPatternDelegate29>(WrappedType, "VisitDeclarationPattern", "operationIDeclarationPatternOperation");
            VisitDeconstructionAssignmentFunc30 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDeconstructionAssignmentDelegate30>(WrappedType, "VisitDeconstructionAssignment", "operationIDeconstructionAssignmentOperation");
            VisitDefaultCaseClauseFunc31 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDefaultCaseClauseDelegate31>(WrappedType, "VisitDefaultCaseClause", "operationIDefaultCaseClauseOperation");
            VisitDefaultValueFunc32 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDefaultValueDelegate32>(WrappedType, "VisitDefaultValue", "operationIDefaultValueOperation");
            VisitDelegateCreationFunc33 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDelegateCreationDelegate33>(WrappedType, "VisitDelegateCreation", "operationIDelegateCreationOperation");
            VisitDiscardOperationFunc34 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDiscardOperationDelegate34>(WrappedType, "VisitDiscardOperation", "operationIDiscardOperation");
            VisitDiscardPatternFunc35 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDiscardPatternDelegate35>(WrappedType, "VisitDiscardPattern", "operationIDiscardPatternOperation");
            VisitDynamicIndexerAccessFunc36 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDynamicIndexerAccessDelegate36>(WrappedType, "VisitDynamicIndexerAccess", "operationIDynamicIndexerAccessOperation");
            VisitDynamicInvocationFunc37 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDynamicInvocationDelegate37>(WrappedType, "VisitDynamicInvocation", "operationIDynamicInvocationOperation");
            VisitDynamicMemberReferenceFunc38 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDynamicMemberReferenceDelegate38>(WrappedType, "VisitDynamicMemberReference", "operationIDynamicMemberReferenceOperation");
            VisitDynamicObjectCreationFunc39 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitDynamicObjectCreationDelegate39>(WrappedType, "VisitDynamicObjectCreation", "operationIDynamicObjectCreationOperation");
            VisitEmptyFunc40 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitEmptyDelegate40>(WrappedType, "VisitEmpty", "operationIEmptyOperation");
            VisitEndFunc41 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitEndDelegate41>(WrappedType, "VisitEnd", "operationIEndOperation");
            VisitEventAssignmentFunc42 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitEventAssignmentDelegate42>(WrappedType, "VisitEventAssignment", "operationIEventAssignmentOperation");
            VisitEventReferenceFunc43 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitEventReferenceDelegate43>(WrappedType, "VisitEventReference", "operationIEventReferenceOperation");
            VisitExpressionStatementFunc44 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitExpressionStatementDelegate44>(WrappedType, "VisitExpressionStatement", "operationIExpressionStatementOperation");
            VisitFieldInitializerFunc45 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitFieldInitializerDelegate45>(WrappedType, "VisitFieldInitializer", "operationIFieldInitializerOperation");
            VisitFieldReferenceFunc46 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitFieldReferenceDelegate46>(WrappedType, "VisitFieldReference", "operationIFieldReferenceOperation");
            VisitFlowAnonymousFunctionFunc47 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitFlowAnonymousFunctionDelegate47>(WrappedType, "VisitFlowAnonymousFunction", "operationIFlowAnonymousFunctionOperation");
            VisitFlowCaptureFunc48 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitFlowCaptureDelegate48>(WrappedType, "VisitFlowCapture", "operationIFlowCaptureOperation");
            VisitFlowCaptureReferenceFunc49 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitFlowCaptureReferenceDelegate49>(WrappedType, "VisitFlowCaptureReference", "operationIFlowCaptureReferenceOperation");
            VisitForEachLoopFunc50 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitForEachLoopDelegate50>(WrappedType, "VisitForEachLoop", "operationIForEachLoopOperation");
            VisitForLoopFunc51 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitForLoopDelegate51>(WrappedType, "VisitForLoop", "operationIForLoopOperation");
            VisitForToLoopFunc52 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitForToLoopDelegate52>(WrappedType, "VisitForToLoop", "operationIForToLoopOperation");
            VisitFunctionPointerInvocationFunc53 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerInvocationDelegate53>(WrappedType, "VisitFunctionPointerInvocation", "operationIFunctionPointerInvocationOperation");
            VisitImplicitIndexerReferenceFunc54 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitImplicitIndexerReferenceDelegate54>(WrappedType, "VisitImplicitIndexerReference", "operationIImplicitIndexerReferenceOperation");
            VisitIncrementOrDecrementFunc55 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitIncrementOrDecrementDelegate55>(WrappedType, "VisitIncrementOrDecrement", "operationIIncrementOrDecrementOperation");
            VisitInlineArrayAccessFunc56 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInlineArrayAccessDelegate56>(WrappedType, "VisitInlineArrayAccess", "operationIInlineArrayAccessOperation");
            VisitInstanceReferenceFunc57 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInstanceReferenceDelegate57>(WrappedType, "VisitInstanceReference", "operationIInstanceReferenceOperation");
            VisitInterpolatedStringFunc58 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringDelegate58>(WrappedType, "VisitInterpolatedString", "operationIInterpolatedStringOperation");
            VisitInterpolatedStringAdditionFunc59 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringAdditionDelegate59>(WrappedType, "VisitInterpolatedStringAddition", "operationIInterpolatedStringAdditionOperation");
            VisitInterpolatedStringAppendFunc60 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringAppendDelegate60>(WrappedType, "VisitInterpolatedStringAppend", "operationIInterpolatedStringAppendOperation");
            VisitInterpolatedStringHandlerArgumentPlaceholderFunc61 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringHandlerArgumentPlaceholderDelegate61>(WrappedType, "VisitInterpolatedStringHandlerArgumentPlaceholder", "operationIInterpolatedStringHandlerArgumentPlaceholderOperation");
            VisitInterpolatedStringHandlerCreationFunc62 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringHandlerCreationDelegate62>(WrappedType, "VisitInterpolatedStringHandlerCreation", "operationIInterpolatedStringHandlerCreationOperation");
            VisitInterpolatedStringTextFunc63 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringTextDelegate63>(WrappedType, "VisitInterpolatedStringText", "operationIInterpolatedStringTextOperation");
            VisitInterpolationFunc64 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInterpolationDelegate64>(WrappedType, "VisitInterpolation", "operationIInterpolationOperation");
            VisitInvalidFunc65 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInvalidDelegate65>(WrappedType, "VisitInvalid", "operationIInvalidOperation");
            VisitInvocationFunc66 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitInvocationDelegate66>(WrappedType, "VisitInvocation", "operationIInvocationOperation");
            VisitIsNullFunc67 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitIsNullDelegate67>(WrappedType, "VisitIsNull", "operationIIsNullOperation");
            VisitIsPatternFunc68 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitIsPatternDelegate68>(WrappedType, "VisitIsPattern", "operationIIsPatternOperation");
            VisitIsTypeFunc69 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitIsTypeDelegate69>(WrappedType, "VisitIsType", "operationIIsTypeOperation");
            VisitLabeledFunc70 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitLabeledDelegate70>(WrappedType, "VisitLabeled", "operationILabeledOperation");
            VisitListPatternFunc71 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitListPatternDelegate71>(WrappedType, "VisitListPattern", "operationIListPatternOperation");
            VisitLiteralFunc72 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitLiteralDelegate72>(WrappedType, "VisitLiteral", "operationILiteralOperation");
            VisitLocalFunctionFunc73 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitLocalFunctionDelegate73>(WrappedType, "VisitLocalFunction", "operationILocalFunctionOperation");
            VisitLocalReferenceFunc74 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitLocalReferenceDelegate74>(WrappedType, "VisitLocalReference", "operationILocalReferenceOperation");
            VisitLockFunc75 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitLockDelegate75>(WrappedType, "VisitLock", "operationILockOperation");
            VisitMemberInitializerFunc76 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitMemberInitializerDelegate76>(WrappedType, "VisitMemberInitializer", "operationIMemberInitializerOperation");
            VisitMethodBodyOperationFunc77 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitMethodBodyOperationDelegate77>(WrappedType, "VisitMethodBodyOperation", "operationIMethodBodyOperation");
            VisitMethodReferenceFunc78 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitMethodReferenceDelegate78>(WrappedType, "VisitMethodReference", "operationIMethodReferenceOperation");
            VisitNameOfFunc79 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitNameOfDelegate79>(WrappedType, "VisitNameOf", "operationINameOfOperation");
            VisitNegatedPatternFunc80 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitNegatedPatternDelegate80>(WrappedType, "VisitNegatedPattern", "operationINegatedPatternOperation");
            VisitObjectCreationFunc81 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitObjectCreationDelegate81>(WrappedType, "VisitObjectCreation", "operationIObjectCreationOperation");
            VisitObjectOrCollectionInitializerFunc82 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitObjectOrCollectionInitializerDelegate82>(WrappedType, "VisitObjectOrCollectionInitializer", "operationIObjectOrCollectionInitializerOperation");
            VisitOmittedArgumentFunc83 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitOmittedArgumentDelegate83>(WrappedType, "VisitOmittedArgument", "operationIOmittedArgumentOperation");
            VisitParameterInitializerFunc84 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitParameterInitializerDelegate84>(WrappedType, "VisitParameterInitializer", "operationIParameterInitializerOperation");
            VisitParameterReferenceFunc85 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitParameterReferenceDelegate85>(WrappedType, "VisitParameterReference", "operationIParameterReferenceOperation");
            VisitParenthesizedFunc86 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitParenthesizedDelegate86>(WrappedType, "VisitParenthesized", "operationIParenthesizedOperation");
            VisitPatternCaseClauseFunc87 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitPatternCaseClauseDelegate87>(WrappedType, "VisitPatternCaseClause", "operationIPatternCaseClauseOperation");
            VisitPropertyInitializerFunc88 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitPropertyInitializerDelegate88>(WrappedType, "VisitPropertyInitializer", "operationIPropertyInitializerOperation");
            VisitPropertyReferenceFunc89 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitPropertyReferenceDelegate89>(WrappedType, "VisitPropertyReference", "operationIPropertyReferenceOperation");
            VisitPropertySubpatternFunc90 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitPropertySubpatternDelegate90>(WrappedType, "VisitPropertySubpattern", "operationIPropertySubpatternOperation");
            VisitRaiseEventFunc91 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitRaiseEventDelegate91>(WrappedType, "VisitRaiseEvent", "operationIRaiseEventOperation");
            VisitRangeCaseClauseFunc92 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitRangeCaseClauseDelegate92>(WrappedType, "VisitRangeCaseClause", "operationIRangeCaseClauseOperation");
            VisitRangeOperationFunc93 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitRangeOperationDelegate93>(WrappedType, "VisitRangeOperation", "operationIRangeOperation");
            VisitRecursivePatternFunc94 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitRecursivePatternDelegate94>(WrappedType, "VisitRecursivePattern", "operationIRecursivePatternOperation");
            VisitReDimFunc95 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitReDimDelegate95>(WrappedType, "VisitReDim", "operationIReDimOperation");
            VisitReDimClauseFunc96 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitReDimClauseDelegate96>(WrappedType, "VisitReDimClause", "operationIReDimClauseOperation");
            VisitRelationalCaseClauseFunc97 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitRelationalCaseClauseDelegate97>(WrappedType, "VisitRelationalCaseClause", "operationIRelationalCaseClauseOperation");
            VisitRelationalPatternFunc98 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitRelationalPatternDelegate98>(WrappedType, "VisitRelationalPattern", "operationIRelationalPatternOperation");
            VisitReturnFunc99 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitReturnDelegate99>(WrappedType, "VisitReturn", "operationIReturnOperation");
            VisitSimpleAssignmentFunc100 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSimpleAssignmentDelegate100>(WrappedType, "VisitSimpleAssignment", "operationISimpleAssignmentOperation");
            VisitSingleValueCaseClauseFunc101 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSingleValueCaseClauseDelegate101>(WrappedType, "VisitSingleValueCaseClause", "operationISingleValueCaseClauseOperation");
            VisitSizeOfFunc102 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSizeOfDelegate102>(WrappedType, "VisitSizeOf", "operationISizeOfOperation");
            VisitSlicePatternFunc103 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSlicePatternDelegate103>(WrappedType, "VisitSlicePattern", "operationISlicePatternOperation");
            VisitSpreadFunc104 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSpreadDelegate104>(WrappedType, "VisitSpread", "operationISpreadOperation");
            VisitStaticLocalInitializationSemaphoreFunc105 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitStaticLocalInitializationSemaphoreDelegate105>(WrappedType, "VisitStaticLocalInitializationSemaphore", "operationIStaticLocalInitializationSemaphoreOperation");
            VisitStopFunc106 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitStopDelegate106>(WrappedType, "VisitStop", "operationIStopOperation");
            VisitSwitchFunc107 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSwitchDelegate107>(WrappedType, "VisitSwitch", "operationISwitchOperation");
            VisitSwitchCaseFunc108 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSwitchCaseDelegate108>(WrappedType, "VisitSwitchCase", "operationISwitchCaseOperation");
            VisitSwitchExpressionFunc109 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSwitchExpressionDelegate109>(WrappedType, "VisitSwitchExpression", "operationISwitchExpressionOperation");
            VisitSwitchExpressionArmFunc110 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitSwitchExpressionArmDelegate110>(WrappedType, "VisitSwitchExpressionArm", "operationISwitchExpressionArmOperation");
            VisitThrowFunc111 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitThrowDelegate111>(WrappedType, "VisitThrow", "operationIThrowOperation");
            VisitTranslatedQueryFunc112 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitTranslatedQueryDelegate112>(WrappedType, "VisitTranslatedQuery", "operationITranslatedQueryOperation");
            VisitTryFunc113 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitTryDelegate113>(WrappedType, "VisitTry", "operationITryOperation");
            VisitTupleFunc114 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitTupleDelegate114>(WrappedType, "VisitTuple", "operationITupleOperation");
            VisitTupleBinaryOperatorFunc115 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitTupleBinaryOperatorDelegate115>(WrappedType, "VisitTupleBinaryOperator", "operationITupleBinaryOperation");
            VisitTypeOfFunc116 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitTypeOfDelegate116>(WrappedType, "VisitTypeOf", "operationITypeOfOperation");
            VisitTypeParameterObjectCreationFunc117 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitTypeParameterObjectCreationDelegate117>(WrappedType, "VisitTypeParameterObjectCreation", "operationITypeParameterObjectCreationOperation");
            VisitTypePatternFunc118 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitTypePatternDelegate118>(WrappedType, "VisitTypePattern", "operationITypePatternOperation");
            VisitUnaryOperatorFunc119 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitUnaryOperatorDelegate119>(WrappedType, "VisitUnaryOperator", "operationIUnaryOperation");
            VisitUsingFunc120 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitUsingDelegate120>(WrappedType, "VisitUsing", "operationIUsingOperation");
            VisitUsingDeclarationFunc121 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitUsingDeclarationDelegate121>(WrappedType, "VisitUsingDeclaration", "operationIUsingDeclarationOperation");
            VisitUtf8StringFunc122 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitUtf8StringDelegate122>(WrappedType, "VisitUtf8String", "operationIUtf8StringOperation");
            VisitVariableDeclarationFunc123 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitVariableDeclarationDelegate123>(WrappedType, "VisitVariableDeclaration", "operationIVariableDeclarationOperation");
            VisitVariableDeclarationGroupFunc124 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitVariableDeclarationGroupDelegate124>(WrappedType, "VisitVariableDeclarationGroup", "operationIVariableDeclarationGroupOperation");
            VisitVariableDeclaratorFunc125 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitVariableDeclaratorDelegate125>(WrappedType, "VisitVariableDeclarator", "operationIVariableDeclaratorOperation");
            VisitVariableInitializerFunc126 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitVariableInitializerDelegate126>(WrappedType, "VisitVariableInitializer", "operationIVariableInitializerOperation");
            VisitWhileLoopFunc127 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitWhileLoopDelegate127>(WrappedType, "VisitWhileLoop", "operationIWhileLoopOperation");
            VisitWithFunc128 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceMethodAccessor<VisitWithDelegate128>(WrappedType, "VisitWith", "operationIWithOperation");
        }

        private OperationVisitorWrapper(global::System.Object obj)
        {
            wrappedObject = obj;
        }

        /// <summary>Returns true if the specified object is compatible with this wrapper.</summary>
        public static bool Is(global::System.Object? obj)
        {
            return global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.Is(obj, WrappedType);
        }

        /// <summary>Creates a wrapper object containing the specified object. If the object is not compatible with this wrapper, an exception will be thrown.</summary>
        public static OperationVisitorWrapper Wrap(global::System.Object obj)
        {
            var obj2 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.Wrap<global::System.Object>(obj, WrappedType);
            return new OperationVisitorWrapper(obj2);
        }

        /// <summary>Returns the wrapped object.</summary>
        public global::System.Object Unwrap()
        {
            return wrappedObject;
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void DefaultVisit(global::Microsoft.CodeAnalysis.Lightup.IOperationWrapper operation)
        {
            DefaultVisitFunc0(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void Visit(global::Microsoft.CodeAnalysis.Lightup.IOperationWrapper? operation)
        {
            VisitFunc1(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitAddressOf(global::Microsoft.CodeAnalysis.Operations.Lightup.IAddressOfOperationWrapper operation)
        {
            VisitAddressOfFunc2(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitAnonymousFunction(global::Microsoft.CodeAnalysis.Operations.Lightup.IAnonymousFunctionOperationWrapper operation)
        {
            VisitAnonymousFunctionFunc3(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitAnonymousObjectCreation(global::Microsoft.CodeAnalysis.Operations.Lightup.IAnonymousObjectCreationOperationWrapper operation)
        {
            VisitAnonymousObjectCreationFunc4(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitArgument(global::Microsoft.CodeAnalysis.Operations.Lightup.IArgumentOperationWrapper operation)
        {
            VisitArgumentFunc5(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitArrayCreation(global::Microsoft.CodeAnalysis.Operations.Lightup.IArrayCreationOperationWrapper operation)
        {
            VisitArrayCreationFunc6(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitArrayElementReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IArrayElementReferenceOperationWrapper operation)
        {
            VisitArrayElementReferenceFunc7(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitArrayInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.IArrayInitializerOperationWrapper operation)
        {
            VisitArrayInitializerFunc8(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.5.0.0.</summary>
        public void VisitAttribute(global::Microsoft.CodeAnalysis.Operations.Lightup.IAttributeOperationWrapper operation)
        {
            VisitAttributeFunc9(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitAwait(global::Microsoft.CodeAnalysis.Operations.Lightup.IAwaitOperationWrapper operation)
        {
            VisitAwaitFunc10(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitBinaryOperator(global::Microsoft.CodeAnalysis.Operations.Lightup.IBinaryOperationWrapper operation)
        {
            VisitBinaryOperatorFunc11(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public void VisitBinaryPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IBinaryPatternOperationWrapper operation)
        {
            VisitBinaryPatternFunc12(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitBlock(global::Microsoft.CodeAnalysis.Operations.Lightup.IBlockOperationWrapper operation)
        {
            VisitBlockFunc13(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitBranch(global::Microsoft.CodeAnalysis.Operations.Lightup.IBranchOperationWrapper operation)
        {
            VisitBranchFunc14(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitCatchClause(global::Microsoft.CodeAnalysis.Operations.Lightup.ICatchClauseOperationWrapper operation)
        {
            VisitCatchClauseFunc15(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public void VisitCaughtException(global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.ICaughtExceptionOperationWrapper operation)
        {
            VisitCaughtExceptionFunc16(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitCoalesce(global::Microsoft.CodeAnalysis.Operations.Lightup.ICoalesceOperationWrapper operation)
        {
            VisitCoalesceFunc17(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.0.0.0.</summary>
        public void VisitCoalesceAssignment(global::Microsoft.CodeAnalysis.Operations.Lightup.ICoalesceAssignmentOperationWrapper operation)
        {
            VisitCoalesceAssignmentFunc18(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitCollectionElementInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.ICollectionElementInitializerOperationWrapper operation)
        {
            VisitCollectionElementInitializerFunc19(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.9.0.0.</summary>
        public void VisitCollectionExpression(global::Microsoft.CodeAnalysis.Operations.Lightup.ICollectionExpressionOperationWrapper operation)
        {
            VisitCollectionExpressionFunc20(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitCompoundAssignment(global::Microsoft.CodeAnalysis.Operations.Lightup.ICompoundAssignmentOperationWrapper operation)
        {
            VisitCompoundAssignmentFunc21(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitConditional(global::Microsoft.CodeAnalysis.Operations.Lightup.IConditionalOperationWrapper operation)
        {
            VisitConditionalFunc22(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitConditionalAccess(global::Microsoft.CodeAnalysis.Operations.Lightup.IConditionalAccessOperationWrapper operation)
        {
            VisitConditionalAccessFunc23(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitConditionalAccessInstance(global::Microsoft.CodeAnalysis.Operations.Lightup.IConditionalAccessInstanceOperationWrapper operation)
        {
            VisitConditionalAccessInstanceFunc24(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitConstantPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IConstantPatternOperationWrapper operation)
        {
            VisitConstantPatternFunc25(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.8.0.0.</summary>
        public void VisitConstructorBodyOperation(global::Microsoft.CodeAnalysis.Operations.Lightup.IConstructorBodyOperationWrapper operation)
        {
            VisitConstructorBodyOperationFunc26(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitConversion(global::Microsoft.CodeAnalysis.Operations.Lightup.IConversionOperationWrapper operation)
        {
            VisitConversionFunc27(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDeclarationExpression(global::Microsoft.CodeAnalysis.Operations.Lightup.IDeclarationExpressionOperationWrapper operation)
        {
            VisitDeclarationExpressionFunc28(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDeclarationPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IDeclarationPatternOperationWrapper operation)
        {
            VisitDeclarationPatternFunc29(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDeconstructionAssignment(global::Microsoft.CodeAnalysis.Operations.Lightup.IDeconstructionAssignmentOperationWrapper operation)
        {
            VisitDeconstructionAssignmentFunc30(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDefaultCaseClause(global::Microsoft.CodeAnalysis.Operations.Lightup.IDefaultCaseClauseOperationWrapper operation)
        {
            VisitDefaultCaseClauseFunc31(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDefaultValue(global::Microsoft.CodeAnalysis.Operations.Lightup.IDefaultValueOperationWrapper operation)
        {
            VisitDefaultValueFunc32(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDelegateCreation(global::Microsoft.CodeAnalysis.Operations.Lightup.IDelegateCreationOperationWrapper operation)
        {
            VisitDelegateCreationFunc33(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.8.0.0.</summary>
        public void VisitDiscardOperation(global::Microsoft.CodeAnalysis.Operations.Lightup.IDiscardOperationWrapper operation)
        {
            VisitDiscardOperationFunc34(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.0.0.0.</summary>
        public void VisitDiscardPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IDiscardPatternOperationWrapper operation)
        {
            VisitDiscardPatternFunc35(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDynamicIndexerAccess(global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicIndexerAccessOperationWrapper operation)
        {
            VisitDynamicIndexerAccessFunc36(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDynamicInvocation(global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicInvocationOperationWrapper operation)
        {
            VisitDynamicInvocationFunc37(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDynamicMemberReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicMemberReferenceOperationWrapper operation)
        {
            VisitDynamicMemberReferenceFunc38(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitDynamicObjectCreation(global::Microsoft.CodeAnalysis.Operations.Lightup.IDynamicObjectCreationOperationWrapper operation)
        {
            VisitDynamicObjectCreationFunc39(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitEmpty(global::Microsoft.CodeAnalysis.Operations.Lightup.IEmptyOperationWrapper operation)
        {
            VisitEmptyFunc40(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitEnd(global::Microsoft.CodeAnalysis.Operations.Lightup.IEndOperationWrapper operation)
        {
            VisitEndFunc41(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitEventAssignment(global::Microsoft.CodeAnalysis.Operations.Lightup.IEventAssignmentOperationWrapper operation)
        {
            VisitEventAssignmentFunc42(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitEventReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IEventReferenceOperationWrapper operation)
        {
            VisitEventReferenceFunc43(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitExpressionStatement(global::Microsoft.CodeAnalysis.Operations.Lightup.IExpressionStatementOperationWrapper operation)
        {
            VisitExpressionStatementFunc44(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitFieldInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.IFieldInitializerOperationWrapper operation)
        {
            VisitFieldInitializerFunc45(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitFieldReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IFieldReferenceOperationWrapper operation)
        {
            VisitFieldReferenceFunc46(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public void VisitFlowAnonymousFunction(global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IFlowAnonymousFunctionOperationWrapper operation)
        {
            VisitFlowAnonymousFunctionFunc47(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public void VisitFlowCapture(global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IFlowCaptureOperationWrapper operation)
        {
            VisitFlowCaptureFunc48(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public void VisitFlowCaptureReference(global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IFlowCaptureReferenceOperationWrapper operation)
        {
            VisitFlowCaptureReferenceFunc49(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitForEachLoop(global::Microsoft.CodeAnalysis.Operations.Lightup.IForEachLoopOperationWrapper operation)
        {
            VisitForEachLoopFunc50(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitForLoop(global::Microsoft.CodeAnalysis.Operations.Lightup.IForLoopOperationWrapper operation)
        {
            VisitForLoopFunc51(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitForToLoop(global::Microsoft.CodeAnalysis.Operations.Lightup.IForToLoopOperationWrapper operation)
        {
            VisitForToLoopFunc52(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitFunctionPointerInvocation(global::Microsoft.CodeAnalysis.Operations.Lightup.IFunctionPointerInvocationOperationWrapper operation)
        {
            VisitFunctionPointerInvocationFunc53(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitImplicitIndexerReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IImplicitIndexerReferenceOperationWrapper operation)
        {
            VisitImplicitIndexerReferenceFunc54(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitIncrementOrDecrement(global::Microsoft.CodeAnalysis.Operations.Lightup.IIncrementOrDecrementOperationWrapper operation)
        {
            VisitIncrementOrDecrementFunc55(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.7.0.0.</summary>
        public void VisitInlineArrayAccess(global::Microsoft.CodeAnalysis.Operations.Lightup.IInlineArrayAccessOperationWrapper operation)
        {
            VisitInlineArrayAccessFunc56(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitInstanceReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IInstanceReferenceOperationWrapper operation)
        {
            VisitInstanceReferenceFunc57(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitInterpolatedString(global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringOperationWrapper operation)
        {
            VisitInterpolatedStringFunc58(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitInterpolatedStringAddition(global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringAdditionOperationWrapper operation)
        {
            VisitInterpolatedStringAdditionFunc59(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitInterpolatedStringAppend(global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringAppendOperationWrapper operation)
        {
            VisitInterpolatedStringAppendFunc60(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitInterpolatedStringHandlerArgumentPlaceholder(global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper operation)
        {
            VisitInterpolatedStringHandlerArgumentPlaceholderFunc61(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitInterpolatedStringHandlerCreation(global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringHandlerCreationOperationWrapper operation)
        {
            VisitInterpolatedStringHandlerCreationFunc62(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitInterpolatedStringText(global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolatedStringTextOperationWrapper operation)
        {
            VisitInterpolatedStringTextFunc63(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitInterpolation(global::Microsoft.CodeAnalysis.Operations.Lightup.IInterpolationOperationWrapper operation)
        {
            VisitInterpolationFunc64(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitInvalid(global::Microsoft.CodeAnalysis.Operations.Lightup.IInvalidOperationWrapper operation)
        {
            VisitInvalidFunc65(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitInvocation(global::Microsoft.CodeAnalysis.Operations.Lightup.IInvocationOperationWrapper operation)
        {
            VisitInvocationFunc66(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public void VisitIsNull(global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IIsNullOperationWrapper operation)
        {
            VisitIsNullFunc67(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitIsPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IIsPatternOperationWrapper operation)
        {
            VisitIsPatternFunc68(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitIsType(global::Microsoft.CodeAnalysis.Operations.Lightup.IIsTypeOperationWrapper operation)
        {
            VisitIsTypeFunc69(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitLabeled(global::Microsoft.CodeAnalysis.Operations.Lightup.ILabeledOperationWrapper operation)
        {
            VisitLabeledFunc70(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitListPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IListPatternOperationWrapper operation)
        {
            VisitListPatternFunc71(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitLiteral(global::Microsoft.CodeAnalysis.Operations.Lightup.ILiteralOperationWrapper operation)
        {
            VisitLiteralFunc72(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitLocalFunction(global::Microsoft.CodeAnalysis.Operations.Lightup.ILocalFunctionOperationWrapper operation)
        {
            VisitLocalFunctionFunc73(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitLocalReference(global::Microsoft.CodeAnalysis.Operations.Lightup.ILocalReferenceOperationWrapper operation)
        {
            VisitLocalReferenceFunc74(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitLock(global::Microsoft.CodeAnalysis.Operations.Lightup.ILockOperationWrapper operation)
        {
            VisitLockFunc75(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitMemberInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.IMemberInitializerOperationWrapper operation)
        {
            VisitMemberInitializerFunc76(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.8.0.0.</summary>
        public void VisitMethodBodyOperation(global::Microsoft.CodeAnalysis.Operations.Lightup.IMethodBodyOperationWrapper operation)
        {
            VisitMethodBodyOperationFunc77(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitMethodReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IMethodReferenceOperationWrapper operation)
        {
            VisitMethodReferenceFunc78(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitNameOf(global::Microsoft.CodeAnalysis.Operations.Lightup.INameOfOperationWrapper operation)
        {
            VisitNameOfFunc79(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public void VisitNegatedPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.INegatedPatternOperationWrapper operation)
        {
            VisitNegatedPatternFunc80(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitObjectCreation(global::Microsoft.CodeAnalysis.Operations.Lightup.IObjectCreationOperationWrapper operation)
        {
            VisitObjectCreationFunc81(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitObjectOrCollectionInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.IObjectOrCollectionInitializerOperationWrapper operation)
        {
            VisitObjectOrCollectionInitializerFunc82(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitOmittedArgument(global::Microsoft.CodeAnalysis.Operations.Lightup.IOmittedArgumentOperationWrapper operation)
        {
            VisitOmittedArgumentFunc83(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitParameterInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.IParameterInitializerOperationWrapper operation)
        {
            VisitParameterInitializerFunc84(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitParameterReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IParameterReferenceOperationWrapper operation)
        {
            VisitParameterReferenceFunc85(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitParenthesized(global::Microsoft.CodeAnalysis.Operations.Lightup.IParenthesizedOperationWrapper operation)
        {
            VisitParenthesizedFunc86(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitPatternCaseClause(global::Microsoft.CodeAnalysis.Operations.Lightup.IPatternCaseClauseOperationWrapper operation)
        {
            VisitPatternCaseClauseFunc87(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitPropertyInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.IPropertyInitializerOperationWrapper operation)
        {
            VisitPropertyInitializerFunc88(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitPropertyReference(global::Microsoft.CodeAnalysis.Operations.Lightup.IPropertyReferenceOperationWrapper operation)
        {
            VisitPropertyReferenceFunc89(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.4.0.0.</summary>
        public void VisitPropertySubpattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IPropertySubpatternOperationWrapper operation)
        {
            VisitPropertySubpatternFunc90(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitRaiseEvent(global::Microsoft.CodeAnalysis.Operations.Lightup.IRaiseEventOperationWrapper operation)
        {
            VisitRaiseEventFunc91(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitRangeCaseClause(global::Microsoft.CodeAnalysis.Operations.Lightup.IRangeCaseClauseOperationWrapper operation)
        {
            VisitRangeCaseClauseFunc92(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.0.0.0.</summary>
        public void VisitRangeOperation(global::Microsoft.CodeAnalysis.Operations.Lightup.IRangeOperationWrapper operation)
        {
            VisitRangeOperationFunc93(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.4.0.0.</summary>
        public void VisitRecursivePattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IRecursivePatternOperationWrapper operation)
        {
            VisitRecursivePatternFunc94(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.0.0.0.</summary>
        public void VisitReDim(global::Microsoft.CodeAnalysis.Operations.Lightup.IReDimOperationWrapper operation)
        {
            VisitReDimFunc95(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.0.0.0.</summary>
        public void VisitReDimClause(global::Microsoft.CodeAnalysis.Operations.Lightup.IReDimClauseOperationWrapper operation)
        {
            VisitReDimClauseFunc96(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitRelationalCaseClause(global::Microsoft.CodeAnalysis.Operations.Lightup.IRelationalCaseClauseOperationWrapper operation)
        {
            VisitRelationalCaseClauseFunc97(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public void VisitRelationalPattern(global::Microsoft.CodeAnalysis.Operations.Lightup.IRelationalPatternOperationWrapper operation)
        {
            VisitRelationalPatternFunc98(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitReturn(global::Microsoft.CodeAnalysis.Operations.Lightup.IReturnOperationWrapper operation)
        {
            VisitReturnFunc99(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitSimpleAssignment(global::Microsoft.CodeAnalysis.Operations.Lightup.ISimpleAssignmentOperationWrapper operation)
        {
            VisitSimpleAssignmentFunc100(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitSingleValueCaseClause(global::Microsoft.CodeAnalysis.Operations.Lightup.ISingleValueCaseClauseOperationWrapper operation)
        {
            VisitSingleValueCaseClauseFunc101(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitSizeOf(global::Microsoft.CodeAnalysis.Operations.Lightup.ISizeOfOperationWrapper operation)
        {
            VisitSizeOfFunc102(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.1.0.0.</summary>
        public void VisitSlicePattern(global::Microsoft.CodeAnalysis.Operations.Lightup.ISlicePatternOperationWrapper operation)
        {
            VisitSlicePatternFunc103(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.9.0.0.</summary>
        public void VisitSpread(global::Microsoft.CodeAnalysis.Operations.Lightup.ISpreadOperationWrapper operation)
        {
            VisitSpreadFunc104(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.9.0.0.</summary>
        public void VisitStaticLocalInitializationSemaphore(global::Microsoft.CodeAnalysis.FlowAnalysis.Lightup.IStaticLocalInitializationSemaphoreOperationWrapper operation)
        {
            VisitStaticLocalInitializationSemaphoreFunc105(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitStop(global::Microsoft.CodeAnalysis.Operations.Lightup.IStopOperationWrapper operation)
        {
            VisitStopFunc106(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitSwitch(global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchOperationWrapper operation)
        {
            VisitSwitchFunc107(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitSwitchCase(global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchCaseOperationWrapper operation)
        {
            VisitSwitchCaseFunc108(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.0.0.0.</summary>
        public void VisitSwitchExpression(global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchExpressionOperationWrapper operation)
        {
            VisitSwitchExpressionFunc109(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.0.0.0.</summary>
        public void VisitSwitchExpressionArm(global::Microsoft.CodeAnalysis.Operations.Lightup.ISwitchExpressionArmOperationWrapper operation)
        {
            VisitSwitchExpressionArmFunc110(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitThrow(global::Microsoft.CodeAnalysis.Operations.Lightup.IThrowOperationWrapper operation)
        {
            VisitThrowFunc111(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitTranslatedQuery(global::Microsoft.CodeAnalysis.Operations.Lightup.ITranslatedQueryOperationWrapper operation)
        {
            VisitTranslatedQueryFunc112(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitTry(global::Microsoft.CodeAnalysis.Operations.Lightup.ITryOperationWrapper operation)
        {
            VisitTryFunc113(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitTuple(global::Microsoft.CodeAnalysis.Operations.Lightup.ITupleOperationWrapper operation)
        {
            VisitTupleFunc114(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.8.0.0.</summary>
        public void VisitTupleBinaryOperator(global::Microsoft.CodeAnalysis.Operations.Lightup.ITupleBinaryOperationWrapper operation)
        {
            VisitTupleBinaryOperatorFunc115(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitTypeOf(global::Microsoft.CodeAnalysis.Operations.Lightup.ITypeOfOperationWrapper operation)
        {
            VisitTypeOfFunc116(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitTypeParameterObjectCreation(global::Microsoft.CodeAnalysis.Operations.Lightup.ITypeParameterObjectCreationOperationWrapper operation)
        {
            VisitTypeParameterObjectCreationFunc117(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public void VisitTypePattern(global::Microsoft.CodeAnalysis.Operations.Lightup.ITypePatternOperationWrapper operation)
        {
            VisitTypePatternFunc118(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitUnaryOperator(global::Microsoft.CodeAnalysis.Operations.Lightup.IUnaryOperationWrapper operation)
        {
            VisitUnaryOperatorFunc119(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitUsing(global::Microsoft.CodeAnalysis.Operations.Lightup.IUsingOperationWrapper operation)
        {
            VisitUsingFunc120(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.4.0.0.</summary>
        public void VisitUsingDeclaration(global::Microsoft.CodeAnalysis.Operations.Lightup.IUsingDeclarationOperationWrapper operation)
        {
            VisitUsingDeclarationFunc121(wrappedObject, operation);
        }

        /// <summary>Method added in version 4.3.0.0.</summary>
        public void VisitUtf8String(global::Microsoft.CodeAnalysis.Operations.Lightup.IUtf8StringOperationWrapper operation)
        {
            VisitUtf8StringFunc122(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitVariableDeclaration(global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableDeclarationOperationWrapper operation)
        {
            VisitVariableDeclarationFunc123(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitVariableDeclarationGroup(global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableDeclarationGroupOperationWrapper operation)
        {
            VisitVariableDeclarationGroupFunc124(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitVariableDeclarator(global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableDeclaratorOperationWrapper operation)
        {
            VisitVariableDeclaratorFunc125(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitVariableInitializer(global::Microsoft.CodeAnalysis.Operations.Lightup.IVariableInitializerOperationWrapper operation)
        {
            VisitVariableInitializerFunc126(wrappedObject, operation);
        }

        /// <summary>Method added in version 2.6.0.0.</summary>
        public void VisitWhileLoop(global::Microsoft.CodeAnalysis.Operations.Lightup.IWhileLoopOperationWrapper operation)
        {
            VisitWhileLoopFunc127(wrappedObject, operation);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public void VisitWith(global::Microsoft.CodeAnalysis.Operations.Lightup.IWithOperationWrapper operation)
        {
            VisitWithFunc128(wrappedObject, operation);
        }
    }
}
