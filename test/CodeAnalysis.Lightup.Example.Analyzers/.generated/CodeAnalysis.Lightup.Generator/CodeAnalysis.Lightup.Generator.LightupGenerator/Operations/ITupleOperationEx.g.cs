// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.Operations.ITupleOperation.</summary>
    public static partial class ITupleOperationEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.ITupleOperation";

        private delegate global::Microsoft.CodeAnalysis.ITypeSymbol? NaturalTypeGetterDelegate(global::Microsoft.CodeAnalysis.Operations.ITupleOperation _obj);

        private static readonly NaturalTypeGetterDelegate NaturalTypeGetterFunc;

        static ITupleOperationEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            NaturalTypeGetterFunc = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateInstanceGetAccessor<NaturalTypeGetterDelegate>(wrappedType, nameof(NaturalType));
        }

        /// <summary>Property added in version 2.7.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.ITypeSymbol? NaturalType(this global::Microsoft.CodeAnalysis.Operations.ITupleOperation _obj)
        {
            return NaturalTypeGetterFunc(_obj);
        }
    }
}
