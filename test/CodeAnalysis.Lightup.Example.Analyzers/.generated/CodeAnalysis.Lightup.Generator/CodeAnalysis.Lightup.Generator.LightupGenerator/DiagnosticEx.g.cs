// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Diagnostic.</summary>
    public static partial class DiagnosticEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Diagnostic";

        private delegate global::Microsoft.CodeAnalysis.Diagnostic CreateDelegate0(global::Microsoft.CodeAnalysis.DiagnosticDescriptor descriptor, global::Microsoft.CodeAnalysis.Location? location, global::Microsoft.CodeAnalysis.DiagnosticSeverity effectiveSeverity, global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.Location>? additionalLocations, global::System.Collections.Immutable.ImmutableDictionary<global::System.String, global::System.String>? properties, params global::System.Object[]? messageArgs);

        private static readonly CreateDelegate0 CreateFunc0;

        static DiagnosticEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            CreateFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "descriptorDiagnosticDescriptor", "locationLocation", "effectiveSeverityDiagnosticSeverity", "additionalLocationsIEnumerable`1", "propertiesImmutableDictionary`2", "messageArgsObject[]");
        }

        /// <summary>Method added in version 2.7.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Diagnostic Create(global::Microsoft.CodeAnalysis.DiagnosticDescriptor descriptor, global::Microsoft.CodeAnalysis.Location? location, global::Microsoft.CodeAnalysis.DiagnosticSeverity effectiveSeverity, global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.Location>? additionalLocations, global::System.Collections.Immutable.ImmutableDictionary<global::System.String, global::System.String>? properties, params global::System.Object[]? messageArgs)
        {
            return CreateFunc0(descriptor, location, effectiveSeverity, additionalLocations, properties, messageArgs);
        }
    }
}
