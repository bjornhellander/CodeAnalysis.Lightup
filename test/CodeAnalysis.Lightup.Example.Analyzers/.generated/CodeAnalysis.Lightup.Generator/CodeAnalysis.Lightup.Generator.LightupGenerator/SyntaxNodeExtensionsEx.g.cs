// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.SyntaxNodeExtensions.</summary>
    public static partial class SyntaxNodeExtensionsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.SyntaxNodeExtensions";

        private delegate global::Microsoft.CodeAnalysis.SyntaxToken WithoutTriviaDelegate0(global::Microsoft.CodeAnalysis.SyntaxToken token);

        private static readonly WithoutTriviaDelegate0 WithoutTriviaFunc0;

        static SyntaxNodeExtensionsEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.FindType(WrappedTypeName);

            WithoutTriviaFunc0 = global::Microsoft.CodeAnalysis.Lightup.CommonLightupHelper.CreateStaticMethodAccessor<WithoutTriviaDelegate0>(wrappedType, "WithoutTrivia", "tokenSyntaxToken");
        }

        /// <summary>Method added in version 2.0.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.SyntaxToken WithoutTrivia(this global::Microsoft.CodeAnalysis.SyntaxToken token)
        {
            return WithoutTriviaFunc0(token);
        }
    }
}
