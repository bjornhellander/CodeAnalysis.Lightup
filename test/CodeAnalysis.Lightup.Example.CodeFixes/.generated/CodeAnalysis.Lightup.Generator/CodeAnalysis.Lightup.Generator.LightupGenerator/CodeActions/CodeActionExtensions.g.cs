// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CodeActions.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CodeActions.CodeAction.</summary>
    public static partial class CodeActionExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CodeActions.CodeAction";

        private delegate global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx PriorityGetterDelegate(global::Microsoft.CodeAnalysis.CodeActions.CodeAction? _obj);

        private delegate global::Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate0(global::System.String title, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, global::System.Boolean isInlinable);
        private delegate global::Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate1(global::System.String title, global::System.Func<global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Document>> createChangedDocument, global::System.String? equivalenceKey, global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority);
        private delegate global::Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate2(global::System.String title, global::System.Func<global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Solution>> createChangedSolution, global::System.String? equivalenceKey, global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority);
        private delegate global::Microsoft.CodeAnalysis.CodeActions.CodeAction CreateDelegate3(global::System.String title, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, global::System.Boolean isInlinable, global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority);

        private static readonly PriorityGetterDelegate PriorityGetterFunc;

        private static readonly CreateDelegate0 CreateFunc0;
        private static readonly CreateDelegate1 CreateFunc1;
        private static readonly CreateDelegate2 CreateFunc2;
        private static readonly CreateDelegate3 CreateFunc3;

        static CodeActionExtensions()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            PriorityGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<PriorityGetterDelegate>(wrappedType, nameof(Priority));

            CreateFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "titleString", "nestedActionsImmutableArray`1", "isInlinableBoolean");
            CreateFunc1 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate1>(wrappedType, "Create", "titleString", "createChangedDocumentFunc`2", "equivalenceKeyString", "priorityCodeActionPriority");
            CreateFunc2 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate2>(wrappedType, "Create", "titleString", "createChangedSolutionFunc`2", "equivalenceKeyString", "priorityCodeActionPriority");
            CreateFunc3 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate3>(wrappedType, "Create", "titleString", "nestedActionsImmutableArray`1", "isInlinableBoolean", "priorityCodeActionPriority");
        }

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx Priority(this global::Microsoft.CodeAnalysis.CodeActions.CodeAction _obj)
        {
            return PriorityGetterFunc(_obj);
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CodeActions.CodeAction Create(global::System.String title, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, global::System.Boolean isInlinable)
        {
            return CreateFunc0(title, nestedActions, isInlinable);
        }

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CodeActions.CodeAction Create(global::System.String title, global::System.Func<global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Document>> createChangedDocument, global::System.String? equivalenceKey, global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority)
        {
            return CreateFunc1(title, createChangedDocument, equivalenceKey, priority);
        }

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CodeActions.CodeAction Create(global::System.String title, global::System.Func<global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Solution>> createChangedSolution, global::System.String? equivalenceKey, global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority)
        {
            return CreateFunc2(title, createChangedSolution, equivalenceKey, priority);
        }

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CodeActions.CodeAction Create(global::System.String title, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CodeActions.CodeAction> nestedActions, global::System.Boolean isInlinable, global::Microsoft.CodeAnalysis.CodeActions.Lightup.CodeActionPriorityEx priority)
        {
            return CreateFunc3(title, nestedActions, isInlinable, priority);
        }
    }
}
