// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Editing.Lightup
{
    /// <summary>Provides lightup support for struct Microsoft.CodeAnalysis.Editing.DeclarationModifiers.</summary>
    public static partial class DeclarationModifiersEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Editing.DeclarationModifiers";

        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers ExternGetterDelegate();
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers FileGetterDelegate();
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers RefGetterDelegate();
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers RequiredGetterDelegate();
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers VolatileGetterDelegate();

        private delegate global::System.Boolean IsExternGetterDelegate(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj);
        private delegate global::System.Boolean IsFileGetterDelegate(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj);
        private delegate global::System.Boolean IsRefGetterDelegate(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj);
        private delegate global::System.Boolean IsRequiredGetterDelegate(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj);
        private delegate global::System.Boolean IsVolatileGetterDelegate(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj);

        private delegate global::System.Boolean TryParseDelegate0(global::System.String? value, out global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers modifiers);

        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsExternDelegate0(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isExtern);
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsFileDelegate1(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isFile);
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsRefDelegate2(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isRef);
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsRequiredDelegate3(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isRequired);
        private delegate global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsVolatileDelegate4(global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isVolatile);

        private static readonly ExternGetterDelegate ExternGetterFunc;
        private static readonly FileGetterDelegate FileGetterFunc;
        private static readonly RefGetterDelegate RefGetterFunc;
        private static readonly RequiredGetterDelegate RequiredGetterFunc;
        private static readonly VolatileGetterDelegate VolatileGetterFunc;

        private static readonly IsExternGetterDelegate IsExternGetterFunc;
        private static readonly IsFileGetterDelegate IsFileGetterFunc;
        private static readonly IsRefGetterDelegate IsRefGetterFunc;
        private static readonly IsRequiredGetterDelegate IsRequiredGetterFunc;
        private static readonly IsVolatileGetterDelegate IsVolatileGetterFunc;

        private static readonly TryParseDelegate0 TryParseFunc0;

        private static readonly WithIsExternDelegate0 WithIsExternFunc0;
        private static readonly WithIsFileDelegate1 WithIsFileFunc1;
        private static readonly WithIsRefDelegate2 WithIsRefFunc2;
        private static readonly WithIsRequiredDelegate3 WithIsRequiredFunc3;
        private static readonly WithIsVolatileDelegate4 WithIsVolatileFunc4;

        static DeclarationModifiersEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            ExternGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticGetAccessor<ExternGetterDelegate>(wrappedType, nameof(Extern));
            FileGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticGetAccessor<FileGetterDelegate>(wrappedType, nameof(File));
            RefGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticGetAccessor<RefGetterDelegate>(wrappedType, nameof(Ref));
            RequiredGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticGetAccessor<RequiredGetterDelegate>(wrappedType, nameof(Required));
            VolatileGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticGetAccessor<VolatileGetterDelegate>(wrappedType, nameof(Volatile));

            IsExternGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<IsExternGetterDelegate>(wrappedType, nameof(IsExtern));
            IsFileGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<IsFileGetterDelegate>(wrappedType, nameof(IsFile));
            IsRefGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<IsRefGetterDelegate>(wrappedType, nameof(IsRef));
            IsRequiredGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<IsRequiredGetterDelegate>(wrappedType, nameof(IsRequired));
            IsVolatileGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<IsVolatileGetterDelegate>(wrappedType, nameof(IsVolatile));

            TryParseFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<TryParseDelegate0>(wrappedType, "TryParse", "valueString", "modifiersDeclarationModifiers&");

            WithIsExternFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithIsExternDelegate0>(wrappedType, "WithIsExtern", "isExternBoolean");
            WithIsFileFunc1 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithIsFileDelegate1>(wrappedType, "WithIsFile", "isFileBoolean");
            WithIsRefFunc2 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithIsRefDelegate2>(wrappedType, "WithIsRef", "isRefBoolean");
            WithIsRequiredFunc3 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithIsRequiredDelegate3>(wrappedType, "WithIsRequired", "isRequiredBoolean");
            WithIsVolatileFunc4 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithIsVolatileDelegate4>(wrappedType, "WithIsVolatile", "isVolatileBoolean");
        }

        /// <summary>Property added in version 3.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers Extern()
        {
            return ExternGetterFunc();
        }

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers File()
        {
            return FileGetterFunc();
        }

        /// <summary>Property added in version 2.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers Ref()
        {
            return RefGetterFunc();
        }

        /// <summary>Property added in version 4.3.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers Required()
        {
            return RequiredGetterFunc();
        }

        /// <summary>Property added in version 3.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers Volatile()
        {
            return VolatileGetterFunc();
        }

        /// <summary>Property added in version 3.6.0.0.</summary>
        public static global::System.Boolean IsExtern(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj)
        {
            return IsExternGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static global::System.Boolean IsFile(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj)
        {
            return IsFileGetterFunc(_obj);
        }

        /// <summary>Property added in version 2.6.0.0.</summary>
        public static global::System.Boolean IsRef(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj)
        {
            return IsRefGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.3.0.0.</summary>
        public static global::System.Boolean IsRequired(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj)
        {
            return IsRequiredGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.6.0.0.</summary>
        public static global::System.Boolean IsVolatile(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj)
        {
            return IsVolatileGetterFunc(_obj);
        }

        /// <summary>Method added in version 1.3.0.0.</summary>
        public static global::System.Boolean TryParse(global::System.String? value, out global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers modifiers)
        {
            return TryParseFunc0(value, out modifiers);
        }

        /// <summary>Method added in version 3.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsExtern(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isExtern)
        {
            return WithIsExternFunc0(_obj, isExtern);
        }

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsFile(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isFile)
        {
            return WithIsFileFunc1(_obj, isFile);
        }

        /// <summary>Method added in version 3.1.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsRef(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isRef)
        {
            return WithIsRefFunc2(_obj, isRef);
        }

        /// <summary>Method added in version 4.3.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsRequired(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isRequired)
        {
            return WithIsRequiredFunc3(_obj, isRequired);
        }

        /// <summary>Method added in version 3.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers WithIsVolatile(this global::Microsoft.CodeAnalysis.Editing.DeclarationModifiers _obj, global::System.Boolean isVolatile)
        {
            return WithIsVolatileFunc4(_obj, isVolatile);
        }
    }
}
