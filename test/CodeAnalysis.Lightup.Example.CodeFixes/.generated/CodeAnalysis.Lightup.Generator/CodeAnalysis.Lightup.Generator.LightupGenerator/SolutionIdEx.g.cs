// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.SolutionId.</summary>
    public static partial class SolutionIdEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.SolutionId";

        private delegate global::Microsoft.CodeAnalysis.SolutionId? CreateFromSerializedDelegate0(global::System.Guid id, global::System.String? debugName);

        private static readonly CreateFromSerializedDelegate0 CreateFromSerializedFunc0;

        static SolutionIdEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            CreateFromSerializedFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateFromSerializedDelegate0>(wrappedType, "CreateFromSerialized", "idGuid", "debugNameString");
        }

        /// <summary>Method added in version 2.0.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.SolutionId? CreateFromSerialized(global::System.Guid id, global::System.String? debugName)
        {
            return CreateFromSerializedFunc0(id, debugName);
        }
    }
}
