// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.CodeFixes.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.</summary>
    public static partial class FixAllProviderEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CodeFixes.FixAllProvider";

        private delegate global::Microsoft.CodeAnalysis.CodeFixes.FixAllProvider CreateDelegate0(global::System.Func<global::Microsoft.CodeAnalysis.CodeFixes.FixAllContext, global::Microsoft.CodeAnalysis.Document, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Diagnostic>, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Document>> fixAllAsync);
        private delegate global::Microsoft.CodeAnalysis.CodeFixes.FixAllProvider CreateDelegate1(global::System.Func<global::Microsoft.CodeAnalysis.CodeFixes.FixAllContext, global::Microsoft.CodeAnalysis.Document, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Diagnostic>, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Document>> fixAllAsync, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CodeFixes.FixAllScope> supportedFixAllScopes);

        private static readonly CreateDelegate0 CreateFunc0;
        private static readonly CreateDelegate1 CreateFunc1;

        static FixAllProviderEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            CreateFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate0>(wrappedType, "Create", "fixAllAsyncFunc`4");
            CreateFunc1 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<CreateDelegate1>(wrappedType, "Create", "fixAllAsyncFunc`4", "supportedFixAllScopesImmutableArray`1");
        }

        /// <summary>Method added in version 3.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CodeFixes.FixAllProvider Create(global::System.Func<global::Microsoft.CodeAnalysis.CodeFixes.FixAllContext, global::Microsoft.CodeAnalysis.Document, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Diagnostic>, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Document>> fixAllAsync)
        {
            return CreateFunc0(fixAllAsync);
        }

        /// <summary>Method added in version 4.3.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.CodeFixes.FixAllProvider Create(global::System.Func<global::Microsoft.CodeAnalysis.CodeFixes.FixAllContext, global::Microsoft.CodeAnalysis.Document, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.Diagnostic>, global::System.Threading.Tasks.Task<global::Microsoft.CodeAnalysis.Document>> fixAllAsync, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.CodeFixes.FixAllScope> supportedFixAllScopes)
        {
            return CreateFunc1(fixAllAsync, supportedFixAllScopes);
        }
    }
}
