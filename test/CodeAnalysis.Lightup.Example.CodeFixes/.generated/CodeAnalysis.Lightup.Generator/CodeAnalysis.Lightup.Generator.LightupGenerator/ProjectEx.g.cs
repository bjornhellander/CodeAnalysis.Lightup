// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Project.</summary>
    public static partial class ProjectEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Project";

        private delegate global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.Lightup.AnalyzerConfigDocumentWrapper> AnalyzerConfigDocumentsGetterDelegate(global::Microsoft.CodeAnalysis.Project _obj);
        private delegate global::Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper CompilationOutputInfoGetterDelegate(global::Microsoft.CodeAnalysis.Project _obj);
        private delegate global::System.String? DefaultNamespaceGetterDelegate(global::Microsoft.CodeAnalysis.Project _obj);
        private delegate global::Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions HostAnalyzerOptionsGetterDelegate(global::Microsoft.CodeAnalysis.Project _obj);
        private delegate global::System.String? OutputRefFilePathGetterDelegate(global::Microsoft.CodeAnalysis.Project _obj);
        private delegate global::Microsoft.CodeAnalysis.Host.Lightup.LanguageServicesWrapper ServicesGetterDelegate(global::Microsoft.CodeAnalysis.Project _obj);

        private delegate global::Microsoft.CodeAnalysis.TextDocument AddAnalyzerConfigDocumentDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::System.String name, global::Microsoft.CodeAnalysis.Text.SourceText text, global::System.Collections.Generic.IEnumerable<global::System.String>? folders, global::System.String? filePath);
        private delegate global::System.Boolean ContainsAnalyzerConfigDocumentDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId);
        private delegate global::Microsoft.CodeAnalysis.Lightup.AnalyzerConfigDocumentWrapper? GetAnalyzerConfigDocumentDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId);
        private delegate global::System.Threading.Tasks.ValueTask<global::Microsoft.CodeAnalysis.Lightup.SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsyncDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId, global::System.Threading.CancellationToken cancellationToken);
        private delegate global::System.Threading.Tasks.ValueTask<global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.Lightup.SourceGeneratedDocumentWrapper>> GetSourceGeneratedDocumentsAsyncDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::System.Threading.CancellationToken cancellationToken);
        private delegate global::Microsoft.CodeAnalysis.Project RemoveAdditionalDocumentsDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.DocumentId> documentIds);
        private delegate global::Microsoft.CodeAnalysis.Project RemoveAnalyzerConfigDocumentDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId);
        private delegate global::Microsoft.CodeAnalysis.Project RemoveAnalyzerConfigDocumentsDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.DocumentId> documentIds);
        private delegate global::Microsoft.CodeAnalysis.Project RemoveDocumentsDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.DocumentId> documentIds);
        private delegate global::Microsoft.CodeAnalysis.Project WithDefaultNamespaceDelegate0(global::Microsoft.CodeAnalysis.Project _obj, global::System.String defaultNamespace);

        private static readonly AnalyzerConfigDocumentsGetterDelegate AnalyzerConfigDocumentsGetterFunc;
        private static readonly CompilationOutputInfoGetterDelegate CompilationOutputInfoGetterFunc;
        private static readonly DefaultNamespaceGetterDelegate DefaultNamespaceGetterFunc;
        private static readonly HostAnalyzerOptionsGetterDelegate HostAnalyzerOptionsGetterFunc;
        private static readonly OutputRefFilePathGetterDelegate OutputRefFilePathGetterFunc;
        private static readonly ServicesGetterDelegate ServicesGetterFunc;

        private static readonly AddAnalyzerConfigDocumentDelegate0 AddAnalyzerConfigDocumentFunc0;
        private static readonly ContainsAnalyzerConfigDocumentDelegate0 ContainsAnalyzerConfigDocumentFunc0;
        private static readonly GetAnalyzerConfigDocumentDelegate0 GetAnalyzerConfigDocumentFunc0;
        private static readonly GetSourceGeneratedDocumentAsyncDelegate0 GetSourceGeneratedDocumentAsyncFunc0;
        private static readonly GetSourceGeneratedDocumentsAsyncDelegate0 GetSourceGeneratedDocumentsAsyncFunc0;
        private static readonly RemoveAdditionalDocumentsDelegate0 RemoveAdditionalDocumentsFunc0;
        private static readonly RemoveAnalyzerConfigDocumentDelegate0 RemoveAnalyzerConfigDocumentFunc0;
        private static readonly RemoveAnalyzerConfigDocumentsDelegate0 RemoveAnalyzerConfigDocumentsFunc0;
        private static readonly RemoveDocumentsDelegate0 RemoveDocumentsFunc0;
        private static readonly WithDefaultNamespaceDelegate0 WithDefaultNamespaceFunc0;

        static ProjectEx()
        {
            var wrappedType = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            AnalyzerConfigDocumentsGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<AnalyzerConfigDocumentsGetterDelegate>(wrappedType, nameof(AnalyzerConfigDocuments));
            CompilationOutputInfoGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<CompilationOutputInfoGetterDelegate>(wrappedType, nameof(CompilationOutputInfo));
            DefaultNamespaceGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<DefaultNamespaceGetterDelegate>(wrappedType, nameof(DefaultNamespace));
            HostAnalyzerOptionsGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<HostAnalyzerOptionsGetterDelegate>(wrappedType, nameof(HostAnalyzerOptions));
            OutputRefFilePathGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<OutputRefFilePathGetterDelegate>(wrappedType, nameof(OutputRefFilePath));
            ServicesGetterFunc = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceGetAccessor<ServicesGetterDelegate>(wrappedType, nameof(Services));

            AddAnalyzerConfigDocumentFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<AddAnalyzerConfigDocumentDelegate0>(wrappedType, "AddAnalyzerConfigDocument", "nameString", "textSourceText", "foldersIEnumerable`1", "filePathString");
            ContainsAnalyzerConfigDocumentFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<ContainsAnalyzerConfigDocumentDelegate0>(wrappedType, "ContainsAnalyzerConfigDocument", "documentIdDocumentId");
            GetAnalyzerConfigDocumentFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<GetAnalyzerConfigDocumentDelegate0>(wrappedType, "GetAnalyzerConfigDocument", "documentIdDocumentId");
            GetSourceGeneratedDocumentAsyncFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<GetSourceGeneratedDocumentAsyncDelegate0>(wrappedType, "GetSourceGeneratedDocumentAsync", "documentIdDocumentId", "cancellationTokenCancellationToken");
            GetSourceGeneratedDocumentsAsyncFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<GetSourceGeneratedDocumentsAsyncDelegate0>(wrappedType, "GetSourceGeneratedDocumentsAsync", "cancellationTokenCancellationToken");
            RemoveAdditionalDocumentsFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveAdditionalDocumentsDelegate0>(wrappedType, "RemoveAdditionalDocuments", "documentIdsImmutableArray`1");
            RemoveAnalyzerConfigDocumentFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentDelegate0>(wrappedType, "RemoveAnalyzerConfigDocument", "documentIdDocumentId");
            RemoveAnalyzerConfigDocumentsFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveAnalyzerConfigDocumentsDelegate0>(wrappedType, "RemoveAnalyzerConfigDocuments", "documentIdsImmutableArray`1");
            RemoveDocumentsFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<RemoveDocumentsDelegate0>(wrappedType, "RemoveDocuments", "documentIdsImmutableArray`1");
            WithDefaultNamespaceFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceMethodAccessor<WithDefaultNamespaceDelegate0>(wrappedType, "WithDefaultNamespace", "defaultNamespaceString");
        }

        /// <summary>Property added in version 3.2.0.0.</summary>
        public static global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.Lightup.AnalyzerConfigDocumentWrapper> AnalyzerConfigDocuments(this global::Microsoft.CodeAnalysis.Project _obj)
        {
            return AnalyzerConfigDocumentsGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.7.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Lightup.CompilationOutputInfoWrapper CompilationOutputInfo(this global::Microsoft.CodeAnalysis.Project _obj)
        {
            return CompilationOutputInfoGetterFunc(_obj);
        }

        /// <summary>Property added in version 3.3.0.0.</summary>
        public static global::System.String? DefaultNamespace(this global::Microsoft.CodeAnalysis.Project _obj)
        {
            return DefaultNamespaceGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.12.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions HostAnalyzerOptions(this global::Microsoft.CodeAnalysis.Project _obj)
        {
            return HostAnalyzerOptionsGetterFunc(_obj);
        }

        /// <summary>Property added in version 2.8.0.0.</summary>
        public static global::System.String? OutputRefFilePath(this global::Microsoft.CodeAnalysis.Project _obj)
        {
            return OutputRefFilePathGetterFunc(_obj);
        }

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Host.Lightup.LanguageServicesWrapper Services(this global::Microsoft.CodeAnalysis.Project _obj)
        {
            return ServicesGetterFunc(_obj);
        }

        /// <summary>Method added in version 3.2.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.TextDocument AddAnalyzerConfigDocument(this global::Microsoft.CodeAnalysis.Project _obj, global::System.String name, global::Microsoft.CodeAnalysis.Text.SourceText text, global::System.Collections.Generic.IEnumerable<global::System.String>? folders, global::System.String? filePath)
        {
            return AddAnalyzerConfigDocumentFunc0(_obj, name, text, folders, filePath);
        }

        /// <summary>Method added in version 3.2.0.0.</summary>
        public static global::System.Boolean ContainsAnalyzerConfigDocument(this global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId)
        {
            return ContainsAnalyzerConfigDocumentFunc0(_obj, documentId);
        }

        /// <summary>Method added in version 3.2.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Lightup.AnalyzerConfigDocumentWrapper? GetAnalyzerConfigDocument(this global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId)
        {
            return GetAnalyzerConfigDocumentFunc0(_obj, documentId);
        }

        /// <summary>Method added in version 3.9.0.0.</summary>
        public static global::System.Threading.Tasks.ValueTask<global::Microsoft.CodeAnalysis.Lightup.SourceGeneratedDocumentWrapper> GetSourceGeneratedDocumentAsync(this global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId, global::System.Threading.CancellationToken cancellationToken)
        {
            return GetSourceGeneratedDocumentAsyncFunc0(_obj, documentId, cancellationToken);
        }

        /// <summary>Method added in version 3.9.0.0.</summary>
        public static global::System.Threading.Tasks.ValueTask<global::System.Collections.Generic.IEnumerable<global::Microsoft.CodeAnalysis.Lightup.SourceGeneratedDocumentWrapper>> GetSourceGeneratedDocumentsAsync(this global::Microsoft.CodeAnalysis.Project _obj, global::System.Threading.CancellationToken cancellationToken)
        {
            return GetSourceGeneratedDocumentsAsyncFunc0(_obj, cancellationToken);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Project RemoveAdditionalDocuments(this global::Microsoft.CodeAnalysis.Project _obj, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.DocumentId> documentIds)
        {
            return RemoveAdditionalDocumentsFunc0(_obj, documentIds);
        }

        /// <summary>Method added in version 3.2.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Project RemoveAnalyzerConfigDocument(this global::Microsoft.CodeAnalysis.Project _obj, global::Microsoft.CodeAnalysis.DocumentId documentId)
        {
            return RemoveAnalyzerConfigDocumentFunc0(_obj, documentId);
        }

        /// <summary>Method added in version 3.7.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Project RemoveAnalyzerConfigDocuments(this global::Microsoft.CodeAnalysis.Project _obj, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.DocumentId> documentIds)
        {
            return RemoveAnalyzerConfigDocumentsFunc0(_obj, documentIds);
        }

        /// <summary>Method added in version 3.6.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Project RemoveDocuments(this global::Microsoft.CodeAnalysis.Project _obj, global::System.Collections.Immutable.ImmutableArray<global::Microsoft.CodeAnalysis.DocumentId> documentIds)
        {
            return RemoveDocumentsFunc0(_obj, documentIds);
        }

        /// <summary>Method added in version 3.3.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Project WithDefaultNamespace(this global::Microsoft.CodeAnalysis.Project _obj, global::System.String defaultNamespace)
        {
            return WithDefaultNamespaceFunc0(_obj, defaultNamespace);
        }
    }
}
