// <auto-generated/>
#nullable enable

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CodeAnalysisProgress. Added in version 4.9.0.0.</summary>
    public partial struct CodeAnalysisProgressWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CodeAnalysisProgress";

        private static readonly global::System.Type? WrappedType;

        private delegate CodeAnalysisProgressWrapper ConstructorDelegate0();

        private delegate global::Microsoft.CodeAnalysis.Lightup.CodeAnalysisProgressWrapper AddCompleteItemsDelegate0(global::System.Int32 count, global::System.String? description);
        private delegate global::Microsoft.CodeAnalysis.Lightup.CodeAnalysisProgressWrapper AddIncompleteItemsDelegate0(global::System.Int32 count, global::System.String? description);
        private delegate global::Microsoft.CodeAnalysis.Lightup.CodeAnalysisProgressWrapper DescriptionDelegate0(global::System.String description);

        private static readonly ConstructorDelegate0 ConstructorFunc0;

        private static readonly AddCompleteItemsDelegate0 AddCompleteItemsFunc0;
        private static readonly AddIncompleteItemsDelegate0 AddIncompleteItemsFunc0;
        private static readonly DescriptionDelegate0 DescriptionFunc0;

        private readonly global::System.Object wrappedObject;

        static CodeAnalysisProgressWrapper()
        {
            WrappedType = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.FindType(WrappedTypeName);

            ConstructorFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateInstanceConstructorAccessor<ConstructorDelegate0>(WrappedType);

            AddCompleteItemsFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<AddCompleteItemsDelegate0>(WrappedType, "AddCompleteItems", "countInt32", "descriptionString");
            AddIncompleteItemsFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<AddIncompleteItemsDelegate0>(WrappedType, "AddIncompleteItems", "countInt32", "descriptionString");
            DescriptionFunc0 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.CreateStaticMethodAccessor<DescriptionDelegate0>(WrappedType, "Description", "descriptionString");
        }

        private CodeAnalysisProgressWrapper(global::System.Object obj)
        {
            wrappedObject = obj;
        }

        /// <summary>Constructor added in version 4.9.0.0.</summary>
        public static CodeAnalysisProgressWrapper Create()
        {
            return ConstructorFunc0();
        }

        /// <summary>Returns true if the specified object is compatible with this wrapper.</summary>
        public static bool Is(global::System.Object? obj)
        {
            return global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.Is(obj, WrappedType);
        }

        /// <summary>Creates a wrapper object containing the specified object. If the object is not compatible with this wrapper, an exception will be thrown.</summary>
        public static CodeAnalysisProgressWrapper Wrap(global::System.Object obj)
        {
            var obj2 = global::Microsoft.CodeAnalysis.Lightup.WorkspacesCommonLightupHelper.Wrap<global::System.Object>(obj, WrappedType);
            return new CodeAnalysisProgressWrapper(obj2);
        }

        /// <summary>Returns the wrapped object.</summary>
        public global::System.Object Unwrap()
        {
            return wrappedObject;
        }

        /// <summary>Method added in version 4.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Lightup.CodeAnalysisProgressWrapper AddCompleteItems(global::System.Int32 count, global::System.String? description)
        {
            return AddCompleteItemsFunc0(count, description);
        }

        /// <summary>Method added in version 4.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Lightup.CodeAnalysisProgressWrapper AddIncompleteItems(global::System.Int32 count, global::System.String? description)
        {
            return AddIncompleteItemsFunc0(count, description);
        }

        /// <summary>Method added in version 4.9.0.0.</summary>
        public static global::Microsoft.CodeAnalysis.Lightup.CodeAnalysisProgressWrapper Description(global::System.String description)
        {
            return DescriptionFunc0(description);
        }
    }
}
