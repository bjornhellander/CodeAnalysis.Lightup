// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    public static class LocalFunctionStatementSyntaxExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax";

        private delegate SyntaxList<AttributeListSyntax> AttributeListsGetterDelegate(LocalFunctionStatementSyntax? _obj);

        private delegate LocalFunctionStatementSyntax AddAttributeListsDelegate0(LocalFunctionStatementSyntax? _obj, params AttributeListSyntax[] items);
        private delegate LocalFunctionStatementSyntax AddBodyAttributeListsDelegate1(LocalFunctionStatementSyntax? _obj, params AttributeListSyntax[] items);
        private delegate LocalFunctionStatementSyntax UpdateDelegate2(LocalFunctionStatementSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, TypeSyntax returnType, SyntaxToken identifier, TypeParameterListSyntax? typeParameterList, ParameterListSyntax parameterList, SyntaxList<TypeParameterConstraintClauseSyntax> constraintClauses, BlockSyntax? body, ArrowExpressionClauseSyntax? expressionBody, SyntaxToken semicolonToken);
        private delegate LocalFunctionStatementSyntax WithAttributeListsDelegate3(LocalFunctionStatementSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists);

        private static readonly AttributeListsGetterDelegate AttributeListsGetterFunc;

        private static readonly AddAttributeListsDelegate0 AddAttributeListsFunc0;
        private static readonly AddBodyAttributeListsDelegate1 AddBodyAttributeListsFunc1;
        private static readonly UpdateDelegate2 UpdateFunc2;
        private static readonly WithAttributeListsDelegate3 WithAttributeListsFunc3;

        static LocalFunctionStatementSyntaxExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AttributeListsGetterFunc = LightupHelper.CreateInstanceGetAccessor<AttributeListsGetterDelegate>(wrappedType, nameof(AttributeLists));

            AddAttributeListsFunc0 = LightupHelper.CreateInstanceMethodAccessor<AddAttributeListsDelegate0>(wrappedType, nameof(AddAttributeLists));
            AddBodyAttributeListsFunc1 = LightupHelper.CreateInstanceMethodAccessor<AddBodyAttributeListsDelegate1>(wrappedType, nameof(AddBodyAttributeLists));
            UpdateFunc2 = LightupHelper.CreateInstanceMethodAccessor<UpdateDelegate2>(wrappedType, nameof(Update));
            WithAttributeListsFunc3 = LightupHelper.CreateInstanceMethodAccessor<WithAttributeListsDelegate3>(wrappedType, nameof(WithAttributeLists));
        }

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static SyntaxList<AttributeListSyntax> AttributeLists(this LocalFunctionStatementSyntax _obj)
            => AttributeListsGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static LocalFunctionStatementSyntax AddAttributeLists(this LocalFunctionStatementSyntax _obj, params AttributeListSyntax[] items)
            => AddAttributeListsFunc0(_obj, items);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static LocalFunctionStatementSyntax AddBodyAttributeLists(this LocalFunctionStatementSyntax _obj, params AttributeListSyntax[] items)
            => AddBodyAttributeListsFunc1(_obj, items);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static LocalFunctionStatementSyntax Update(this LocalFunctionStatementSyntax _obj, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, TypeSyntax returnType, SyntaxToken identifier, TypeParameterListSyntax? typeParameterList, ParameterListSyntax parameterList, SyntaxList<TypeParameterConstraintClauseSyntax> constraintClauses, BlockSyntax? body, ArrowExpressionClauseSyntax? expressionBody, SyntaxToken semicolonToken)
            => UpdateFunc2(_obj, attributeLists, modifiers, returnType, identifier, typeParameterList, parameterList, constraintClauses, body, expressionBody, semicolonToken);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static LocalFunctionStatementSyntax WithAttributeLists(this LocalFunctionStatementSyntax _obj, SyntaxList<AttributeListSyntax> attributeLists)
            => WithAttributeListsFunc3(_obj, attributeLists);
    }
}
