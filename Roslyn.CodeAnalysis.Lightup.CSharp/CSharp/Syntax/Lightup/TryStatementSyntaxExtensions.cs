// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    public static class TryStatementSyntaxExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax";

        public static readonly Type? WrappedType;

        private delegate SyntaxList<AttributeListSyntax> AttributeListsGetterDelegate(TryStatementSyntax? _obj);

        private delegate TryStatementSyntax AddAttributeListsDelegate0(TryStatementSyntax? _obj, params AttributeListSyntax[] items);
        private delegate TryStatementSyntax AddBlockAttributeListsDelegate1(TryStatementSyntax? _obj, params AttributeListSyntax[] items);
        private delegate TryStatementSyntax UpdateDelegate2(TryStatementSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists, SyntaxToken tryKeyword, BlockSyntax block, SyntaxList<CatchClauseSyntax> catches, FinallyClauseSyntax? @finally);
        private delegate TryStatementSyntax WithAttributeListsDelegate3(TryStatementSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists);

        private static readonly AttributeListsGetterDelegate AttributeListsGetterFunc;

        private static readonly AddAttributeListsDelegate0 AddAttributeListsFunc0;
        private static readonly AddBlockAttributeListsDelegate1 AddBlockAttributeListsFunc1;
        private static readonly UpdateDelegate2 UpdateFunc2;
        private static readonly WithAttributeListsDelegate3 WithAttributeListsFunc3;

        static TryStatementSyntaxExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            AttributeListsGetterFunc = LightupHelper.CreateInstanceGetAccessor<AttributeListsGetterDelegate>(WrappedType, nameof(AttributeLists));

            AddAttributeListsFunc0 = LightupHelper.CreateInstanceMethodAccessor<AddAttributeListsDelegate0>(WrappedType, nameof(AddAttributeLists));
            AddBlockAttributeListsFunc1 = LightupHelper.CreateInstanceMethodAccessor<AddBlockAttributeListsDelegate1>(WrappedType, nameof(AddBlockAttributeLists));
            UpdateFunc2 = LightupHelper.CreateInstanceMethodAccessor<UpdateDelegate2>(WrappedType, nameof(Update));
            WithAttributeListsFunc3 = LightupHelper.CreateInstanceMethodAccessor<WithAttributeListsDelegate3>(WrappedType, nameof(WithAttributeLists));
        }

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static SyntaxList<AttributeListSyntax> AttributeLists(this TryStatementSyntax _obj)
            => AttributeListsGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static TryStatementSyntax AddAttributeLists(this TryStatementSyntax _obj, params AttributeListSyntax[] items)
            => AddAttributeListsFunc0(_obj, items);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static TryStatementSyntax AddBlockAttributeLists(this TryStatementSyntax _obj, params AttributeListSyntax[] items)
            => AddBlockAttributeListsFunc1(_obj, items);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static TryStatementSyntax Update(this TryStatementSyntax _obj, SyntaxList<AttributeListSyntax> attributeLists, SyntaxToken tryKeyword, BlockSyntax block, SyntaxList<CatchClauseSyntax> catches, FinallyClauseSyntax? @finally)
            => UpdateFunc2(_obj, attributeLists, tryKeyword, block, catches, @finally);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static TryStatementSyntax WithAttributeLists(this TryStatementSyntax _obj, SyntaxList<AttributeListSyntax> attributeLists)
            => WithAttributeListsFunc3(_obj, attributeLists);
    }
}
