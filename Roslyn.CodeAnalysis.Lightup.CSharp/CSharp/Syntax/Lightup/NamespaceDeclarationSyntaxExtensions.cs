// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Class added in Roslyn version </summary>
    public static class NamespaceDeclarationSyntaxExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax";

        public static readonly Type? WrappedType;

        private delegate SyntaxList<AttributeListSyntax> AttributeListsGetterDelegate(NamespaceDeclarationSyntax? _obj);
        private delegate SyntaxTokenList ModifiersGetterDelegate(NamespaceDeclarationSyntax? _obj);

        private delegate NamespaceDeclarationSyntax AddAttributeListsDelegate0(NamespaceDeclarationSyntax? _obj, params AttributeListSyntax[] items);
        private delegate NamespaceDeclarationSyntax AddModifiersDelegate1(NamespaceDeclarationSyntax? _obj, params SyntaxToken[] items);
        private delegate NamespaceDeclarationSyntax UpdateDelegate2(NamespaceDeclarationSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, SyntaxToken namespaceKeyword, NameSyntax name, SyntaxToken openBraceToken, SyntaxList<ExternAliasDirectiveSyntax> externs, SyntaxList<UsingDirectiveSyntax> usings, SyntaxList<MemberDeclarationSyntax> members, SyntaxToken closeBraceToken, SyntaxToken semicolonToken);
        private delegate NamespaceDeclarationSyntax WithAttributeListsDelegate3(NamespaceDeclarationSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists);
        private delegate NamespaceDeclarationSyntax WithModifiersDelegate4(NamespaceDeclarationSyntax? _obj, SyntaxTokenList modifiers);

        private static readonly AttributeListsGetterDelegate AttributeListsGetterFunc;
        private static readonly ModifiersGetterDelegate ModifiersGetterFunc;

        private static readonly AddAttributeListsDelegate0 AddAttributeListsFunc0;
        private static readonly AddModifiersDelegate1 AddModifiersFunc1;
        private static readonly UpdateDelegate2 UpdateFunc2;
        private static readonly WithAttributeListsDelegate3 WithAttributeListsFunc3;
        private static readonly WithModifiersDelegate4 WithModifiersFunc4;

        static NamespaceDeclarationSyntaxExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            AttributeListsGetterFunc = LightupHelper.CreateInstanceGetAccessor<AttributeListsGetterDelegate>(WrappedType, nameof(AttributeLists));
            ModifiersGetterFunc = LightupHelper.CreateInstanceGetAccessor<ModifiersGetterDelegate>(WrappedType, nameof(Modifiers));

            AddAttributeListsFunc0 = LightupHelper.CreateInstanceMethodAccessor<AddAttributeListsDelegate0>(WrappedType, nameof(AddAttributeLists));
            AddModifiersFunc1 = LightupHelper.CreateInstanceMethodAccessor<AddModifiersDelegate1>(WrappedType, nameof(AddModifiers));
            UpdateFunc2 = LightupHelper.CreateInstanceMethodAccessor<UpdateDelegate2>(WrappedType, nameof(Update));
            WithAttributeListsFunc3 = LightupHelper.CreateInstanceMethodAccessor<WithAttributeListsDelegate3>(WrappedType, nameof(WithAttributeLists));
            WithModifiersFunc4 = LightupHelper.CreateInstanceMethodAccessor<WithModifiersDelegate4>(WrappedType, nameof(WithModifiers));
        }

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static SyntaxList<AttributeListSyntax> AttributeLists(this NamespaceDeclarationSyntax _obj)
            => AttributeListsGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static SyntaxTokenList Modifiers(this NamespaceDeclarationSyntax _obj)
            => ModifiersGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NamespaceDeclarationSyntax AddAttributeLists(this NamespaceDeclarationSyntax wrappedObject, params AttributeListSyntax[] items)
            => AddAttributeListsFunc0(wrappedObject, items);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NamespaceDeclarationSyntax AddModifiers(this NamespaceDeclarationSyntax wrappedObject, params SyntaxToken[] items)
            => AddModifiersFunc1(wrappedObject, items);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NamespaceDeclarationSyntax Update(this NamespaceDeclarationSyntax wrappedObject, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, SyntaxToken namespaceKeyword, NameSyntax name, SyntaxToken openBraceToken, SyntaxList<ExternAliasDirectiveSyntax> externs, SyntaxList<UsingDirectiveSyntax> usings, SyntaxList<MemberDeclarationSyntax> members, SyntaxToken closeBraceToken, SyntaxToken semicolonToken)
            => UpdateFunc2(wrappedObject, attributeLists, modifiers, namespaceKeyword, name, openBraceToken, externs, usings, members, closeBraceToken, semicolonToken);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NamespaceDeclarationSyntax WithAttributeLists(this NamespaceDeclarationSyntax wrappedObject, SyntaxList<AttributeListSyntax> attributeLists)
            => WithAttributeListsFunc3(wrappedObject, attributeLists);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NamespaceDeclarationSyntax WithModifiers(this NamespaceDeclarationSyntax wrappedObject, SyntaxTokenList modifiers)
            => WithModifiersFunc4(wrappedObject, modifiers);
    }
}
