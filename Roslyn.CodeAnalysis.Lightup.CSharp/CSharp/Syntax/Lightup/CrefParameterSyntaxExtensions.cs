// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Class added in Roslyn version </summary>
    public static class CrefParameterSyntaxExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax";

        public static readonly Type? WrappedType;

        private delegate SyntaxToken ReadOnlyKeywordGetterDelegate(CrefParameterSyntax? _obj);

        private delegate CrefParameterSyntax UpdateDelegate0(CrefParameterSyntax? _obj, SyntaxToken refKindKeyword, SyntaxToken readOnlyKeyword, TypeSyntax type);
        private delegate CrefParameterSyntax WithReadOnlyKeywordDelegate1(CrefParameterSyntax? _obj, SyntaxToken readOnlyKeyword);

        private static readonly ReadOnlyKeywordGetterDelegate ReadOnlyKeywordGetterFunc;

        private static readonly UpdateDelegate0 UpdateFunc0;
        private static readonly WithReadOnlyKeywordDelegate1 WithReadOnlyKeywordFunc1;

        static CrefParameterSyntaxExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            ReadOnlyKeywordGetterFunc = LightupHelper.CreateGetAccessor<ReadOnlyKeywordGetterDelegate>(WrappedType, nameof(ReadOnlyKeyword));

            UpdateFunc0 = LightupHelper.CreateMethodAccessor<UpdateDelegate0>(WrappedType, nameof(Update));
            WithReadOnlyKeywordFunc1 = LightupHelper.CreateMethodAccessor<WithReadOnlyKeywordDelegate1>(WrappedType, nameof(WithReadOnlyKeyword));
        }

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static SyntaxToken ReadOnlyKeyword(this CrefParameterSyntax _obj)
            => ReadOnlyKeywordGetterFunc(_obj);

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static CrefParameterSyntax Update(this CrefParameterSyntax wrappedObject, SyntaxToken refKindKeyword, SyntaxToken readOnlyKeyword, TypeSyntax type)
            => UpdateFunc0(wrappedObject, refKindKeyword, readOnlyKeyword, type);

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static CrefParameterSyntax WithReadOnlyKeyword(this CrefParameterSyntax wrappedObject, SyntaxToken readOnlyKeyword)
            => WithReadOnlyKeywordFunc1(wrappedObject, readOnlyKeyword);
    }
}
