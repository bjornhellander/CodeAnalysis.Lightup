// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.</summary>
    public static class ConstructorDeclarationSyntaxExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax";

        private delegate ConstructorDeclarationSyntax AddBodyAttributeListsDelegate0(ConstructorDeclarationSyntax? _obj, params AttributeListSyntax[] items);

        private static readonly AddBodyAttributeListsDelegate0 AddBodyAttributeListsFunc0;

        static ConstructorDeclarationSyntaxExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AddBodyAttributeListsFunc0 = LightupHelper.CreateInstanceMethodAccessor<AddBodyAttributeListsDelegate0>(wrappedType, "AddBodyAttributeLists", "itemsAttributeListSyntax[]");
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static ConstructorDeclarationSyntax AddBodyAttributeLists(this ConstructorDeclarationSyntax _obj, params AttributeListSyntax[] items)
            => AddBodyAttributeListsFunc0(_obj, items);
    }
}
