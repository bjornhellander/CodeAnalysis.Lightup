// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    public static class OperatorMemberCrefSyntaxExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax";

        public static readonly Type? WrappedType;

        private delegate SyntaxToken CheckedKeywordGetterDelegate(OperatorMemberCrefSyntax? _obj);

        private delegate OperatorMemberCrefSyntax UpdateDelegate0(OperatorMemberCrefSyntax? _obj, SyntaxToken operatorKeyword, SyntaxToken checkedKeyword, SyntaxToken operatorToken, CrefParameterListSyntax? parameters);
        private delegate OperatorMemberCrefSyntax WithCheckedKeywordDelegate1(OperatorMemberCrefSyntax? _obj, SyntaxToken checkedKeyword);

        private static readonly CheckedKeywordGetterDelegate CheckedKeywordGetterFunc;

        private static readonly UpdateDelegate0 UpdateFunc0;
        private static readonly WithCheckedKeywordDelegate1 WithCheckedKeywordFunc1;

        static OperatorMemberCrefSyntaxExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            CheckedKeywordGetterFunc = LightupHelper.CreateInstanceGetAccessor<CheckedKeywordGetterDelegate>(WrappedType, nameof(CheckedKeyword));

            UpdateFunc0 = LightupHelper.CreateInstanceMethodAccessor<UpdateDelegate0>(WrappedType, nameof(Update));
            WithCheckedKeywordFunc1 = LightupHelper.CreateInstanceMethodAccessor<WithCheckedKeywordDelegate1>(WrappedType, nameof(WithCheckedKeyword));
        }

        /// <summary>Property added in version 4.4.0.0 of Roslyn.</summary>
        public static SyntaxToken CheckedKeyword(this OperatorMemberCrefSyntax _obj)
            => CheckedKeywordGetterFunc(_obj);

        /// <summary>Method added in version 4.4.0.0 of Roslyn.</summary>
        public static OperatorMemberCrefSyntax Update(this OperatorMemberCrefSyntax _obj, SyntaxToken operatorKeyword, SyntaxToken checkedKeyword, SyntaxToken operatorToken, CrefParameterListSyntax? parameters)
            => UpdateFunc0(_obj, operatorKeyword, checkedKeyword, operatorToken, parameters);

        /// <summary>Method added in version 4.4.0.0 of Roslyn.</summary>
        public static OperatorMemberCrefSyntax WithCheckedKeyword(this OperatorMemberCrefSyntax _obj, SyntaxToken checkedKeyword)
            => WithCheckedKeywordFunc1(_obj, checkedKeyword);
    }
}
