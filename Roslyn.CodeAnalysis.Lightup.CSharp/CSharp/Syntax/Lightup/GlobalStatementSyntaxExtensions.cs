// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Syntax.Lightup
{
    public static class GlobalStatementSyntaxExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax";

        public static readonly Type? WrappedType;

        private delegate SyntaxList<AttributeListSyntax> AttributeListsGetterDelegate(GlobalStatementSyntax? _obj);
        private delegate SyntaxTokenList ModifiersGetterDelegate(GlobalStatementSyntax? _obj);

        private delegate GlobalStatementSyntax AddAttributeListsDelegate0(GlobalStatementSyntax? _obj, params AttributeListSyntax[] items);
        private delegate GlobalStatementSyntax AddModifiersDelegate1(GlobalStatementSyntax? _obj, params SyntaxToken[] items);
        private delegate GlobalStatementSyntax UpdateDelegate2(GlobalStatementSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, StatementSyntax statement);
        private delegate GlobalStatementSyntax WithAttributeListsDelegate3(GlobalStatementSyntax? _obj, SyntaxList<AttributeListSyntax> attributeLists);
        private delegate GlobalStatementSyntax WithModifiersDelegate4(GlobalStatementSyntax? _obj, SyntaxTokenList modifiers);

        private static readonly AttributeListsGetterDelegate AttributeListsGetterFunc;
        private static readonly ModifiersGetterDelegate ModifiersGetterFunc;

        private static readonly AddAttributeListsDelegate0 AddAttributeListsFunc0;
        private static readonly AddModifiersDelegate1 AddModifiersFunc1;
        private static readonly UpdateDelegate2 UpdateFunc2;
        private static readonly WithAttributeListsDelegate3 WithAttributeListsFunc3;
        private static readonly WithModifiersDelegate4 WithModifiersFunc4;

        static GlobalStatementSyntaxExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            AttributeListsGetterFunc = LightupHelper.CreateInstanceGetAccessor<AttributeListsGetterDelegate>(WrappedType, nameof(AttributeLists));
            ModifiersGetterFunc = LightupHelper.CreateInstanceGetAccessor<ModifiersGetterDelegate>(WrappedType, nameof(Modifiers));

            AddAttributeListsFunc0 = LightupHelper.CreateInstanceMethodAccessor<AddAttributeListsDelegate0>(WrappedType, nameof(AddAttributeLists));
            AddModifiersFunc1 = LightupHelper.CreateInstanceMethodAccessor<AddModifiersDelegate1>(WrappedType, nameof(AddModifiers));
            UpdateFunc2 = LightupHelper.CreateInstanceMethodAccessor<UpdateDelegate2>(WrappedType, nameof(Update));
            WithAttributeListsFunc3 = LightupHelper.CreateInstanceMethodAccessor<WithAttributeListsDelegate3>(WrappedType, nameof(WithAttributeLists));
            WithModifiersFunc4 = LightupHelper.CreateInstanceMethodAccessor<WithModifiersDelegate4>(WrappedType, nameof(WithModifiers));
        }

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static SyntaxList<AttributeListSyntax> AttributeLists(this GlobalStatementSyntax _obj)
            => AttributeListsGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static SyntaxTokenList Modifiers(this GlobalStatementSyntax _obj)
            => ModifiersGetterFunc(_obj);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static GlobalStatementSyntax AddAttributeLists(this GlobalStatementSyntax _obj, params AttributeListSyntax[] items)
            => AddAttributeListsFunc0(_obj, items);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static GlobalStatementSyntax AddModifiers(this GlobalStatementSyntax _obj, params SyntaxToken[] items)
            => AddModifiersFunc1(_obj, items);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static GlobalStatementSyntax Update(this GlobalStatementSyntax _obj, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, StatementSyntax statement)
            => UpdateFunc2(_obj, attributeLists, modifiers, statement);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static GlobalStatementSyntax WithAttributeLists(this GlobalStatementSyntax _obj, SyntaxList<AttributeListSyntax> attributeLists)
            => WithAttributeListsFunc3(_obj, attributeLists);

        /// <summary>Method added in version 3.8.0.0 of Roslyn.</summary>
        public static GlobalStatementSyntax WithModifiers(this GlobalStatementSyntax _obj, SyntaxTokenList modifiers)
            => WithModifiersFunc4(_obj, modifiers);
    }
}
