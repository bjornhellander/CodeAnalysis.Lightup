// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.SymbolDisplay.</summary>
    public static class SymbolDisplayEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.SymbolDisplay";

        private delegate ImmutableArray<SymbolDisplayPart> ToDisplayPartsDelegate0(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SymbolDisplayFormat? format);
        private delegate ImmutableArray<SymbolDisplayPart> ToDisplayPartsDelegate1(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SymbolDisplayFormat? format);
        private delegate String ToDisplayStringDelegate2(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SymbolDisplayFormat? format);
        private delegate String ToDisplayStringDelegate3(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SymbolDisplayFormat? format);
        private delegate ImmutableArray<SymbolDisplayPart> ToMinimalDisplayPartsDelegate4(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format);
        private delegate ImmutableArray<SymbolDisplayPart> ToMinimalDisplayPartsDelegate5(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format);
        private delegate String ToMinimalDisplayStringDelegate6(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format);
        private delegate String ToMinimalDisplayStringDelegate7(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format);

        private static readonly ToDisplayPartsDelegate0 ToDisplayPartsFunc0;
        private static readonly ToDisplayPartsDelegate1 ToDisplayPartsFunc1;
        private static readonly ToDisplayStringDelegate2 ToDisplayStringFunc2;
        private static readonly ToDisplayStringDelegate3 ToDisplayStringFunc3;
        private static readonly ToMinimalDisplayPartsDelegate4 ToMinimalDisplayPartsFunc4;
        private static readonly ToMinimalDisplayPartsDelegate5 ToMinimalDisplayPartsFunc5;
        private static readonly ToMinimalDisplayStringDelegate6 ToMinimalDisplayStringFunc6;
        private static readonly ToMinimalDisplayStringDelegate7 ToMinimalDisplayStringFunc7;

        static SymbolDisplayEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            ToDisplayPartsFunc0 = LightupHelper.CreateStaticMethodAccessor<ToDisplayPartsDelegate0>(wrappedType, nameof(ToDisplayParts));
            ToDisplayPartsFunc1 = LightupHelper.CreateStaticMethodAccessor<ToDisplayPartsDelegate1>(wrappedType, nameof(ToDisplayParts));
            ToDisplayStringFunc2 = LightupHelper.CreateStaticMethodAccessor<ToDisplayStringDelegate2>(wrappedType, nameof(ToDisplayString));
            ToDisplayStringFunc3 = LightupHelper.CreateStaticMethodAccessor<ToDisplayStringDelegate3>(wrappedType, nameof(ToDisplayString));
            ToMinimalDisplayPartsFunc4 = LightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayPartsDelegate4>(wrappedType, nameof(ToMinimalDisplayParts));
            ToMinimalDisplayPartsFunc5 = LightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayPartsDelegate5>(wrappedType, nameof(ToMinimalDisplayParts));
            ToMinimalDisplayStringFunc6 = LightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayStringDelegate6>(wrappedType, nameof(ToMinimalDisplayString));
            ToMinimalDisplayStringFunc7 = LightupHelper.CreateStaticMethodAccessor<ToMinimalDisplayStringDelegate7>(wrappedType, nameof(ToMinimalDisplayString));
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static ImmutableArray<SymbolDisplayPart> ToDisplayParts(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SymbolDisplayFormat? format)
            => ToDisplayPartsFunc0(symbol, nullableFlowState, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static ImmutableArray<SymbolDisplayPart> ToDisplayParts(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SymbolDisplayFormat? format)
            => ToDisplayPartsFunc1(symbol, nullableAnnotation, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static String ToDisplayString(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SymbolDisplayFormat? format)
            => ToDisplayStringFunc2(symbol, nullableFlowState, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static String ToDisplayString(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SymbolDisplayFormat? format)
            => ToDisplayStringFunc3(symbol, nullableAnnotation, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static ImmutableArray<SymbolDisplayPart> ToMinimalDisplayParts(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format)
            => ToMinimalDisplayPartsFunc4(symbol, nullableFlowState, semanticModel, position, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static ImmutableArray<SymbolDisplayPart> ToMinimalDisplayParts(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format)
            => ToMinimalDisplayPartsFunc5(symbol, nullableAnnotation, semanticModel, position, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static String ToMinimalDisplayString(ITypeSymbol symbol, NullableFlowStateEx nullableFlowState, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format)
            => ToMinimalDisplayStringFunc6(symbol, nullableFlowState, semanticModel, position, format);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static String ToMinimalDisplayString(ITypeSymbol symbol, NullableAnnotationEx nullableAnnotation, SemanticModel semanticModel, Int32 position, SymbolDisplayFormat? format)
            => ToMinimalDisplayStringFunc7(symbol, nullableAnnotation, semanticModel, position, format);
    }
}
