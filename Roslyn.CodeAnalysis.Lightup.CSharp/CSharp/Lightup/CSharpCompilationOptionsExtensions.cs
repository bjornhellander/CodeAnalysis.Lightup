// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    public static class CSharpCompilationOptionsExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions";

        public static readonly Type? WrappedType;

        private delegate NullableContextOptionsEx NullableContextOptionsGetterDelegate(CSharpCompilationOptions? _obj);

        private delegate CSharpCompilationOptions WithNullableContextOptionsDelegate0(CSharpCompilationOptions? _obj, NullableContextOptionsEx options);
        private delegate CSharpCompilationOptions WithSyntaxTreeOptionsProviderDelegate1(CSharpCompilationOptions? _obj, SyntaxTreeOptionsProviderWrapper provider);

        private static readonly NullableContextOptionsGetterDelegate NullableContextOptionsGetterFunc;

        private static readonly WithNullableContextOptionsDelegate0 WithNullableContextOptionsFunc0;
        private static readonly WithSyntaxTreeOptionsProviderDelegate1 WithSyntaxTreeOptionsProviderFunc1;

        static CSharpCompilationOptionsExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            NullableContextOptionsGetterFunc = LightupHelper.CreateInstanceGetAccessor<NullableContextOptionsGetterDelegate>(WrappedType, nameof(NullableContextOptions));

            WithNullableContextOptionsFunc0 = LightupHelper.CreateInstanceMethodAccessor<WithNullableContextOptionsDelegate0>(WrappedType, nameof(WithNullableContextOptions));
            WithSyntaxTreeOptionsProviderFunc1 = LightupHelper.CreateInstanceMethodAccessor<WithSyntaxTreeOptionsProviderDelegate1>(WrappedType, nameof(WithSyntaxTreeOptionsProvider));
        }

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NullableContextOptionsEx NullableContextOptions(this CSharpCompilationOptions _obj)
            => NullableContextOptionsGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static CSharpCompilationOptions WithNullableContextOptions(this CSharpCompilationOptions _obj, NullableContextOptionsEx options)
            => WithNullableContextOptionsFunc0(_obj, options);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static CSharpCompilationOptions WithSyntaxTreeOptionsProvider(this CSharpCompilationOptions _obj, SyntaxTreeOptionsProviderWrapper provider)
            => WithSyntaxTreeOptionsProviderFunc1(_obj, provider);
    }
}
