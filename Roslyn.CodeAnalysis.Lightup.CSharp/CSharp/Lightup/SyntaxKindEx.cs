// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for enum Microsoft.CodeAnalysis.CSharp.SyntaxKind.</summary>
    public partial class SyntaxKindEx
    {
        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind GreaterThanGreaterThanGreaterThanToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8286;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind GreaterThanGreaterThanGreaterThanEqualsToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8287;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind OrKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8438;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind AndKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8439;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind NotKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8440;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind DataKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8441;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind WithKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8442;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind InitKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8443;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind RecordKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8444;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ManagedKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8445;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind UnmanagedKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8446;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind RequiredKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8447;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ScopedKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8448;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FileKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8449;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind WarningsKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8488;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind AnnotationsKeyword = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8489;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind SingleLineRawStringLiteralToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8518;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind MultiLineRawStringLiteralToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8519;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8StringLiteralToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8520;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8SingleLineRawStringLiteralToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8521;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8MultiLineRawStringLiteralToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8522;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ImplicitObjectCreationExpression = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8659;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind UnsignedRightShiftExpression = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8692;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind UnsignedRightShiftAssignmentExpression = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8726;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind Utf8StringLiteralExpression = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8756;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FileScopedNamespaceDeclaration = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)8845;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ParenthesizedPattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9028;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind RelationalPattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9029;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind TypePattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9030;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind OrPattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9031;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind AndPattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9032;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind NotPattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9033;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind SlicePattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9034;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ListPattern = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9035;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerType = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9056;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerParameter = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9057;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerParameterList = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9058;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerCallingConvention = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9059;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind InitAccessorDeclaration = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9060;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind WithExpression = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9061;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind WithInitializerExpression = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9062;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind RecordDeclaration = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9063;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind DefaultConstraint = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9064;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind PrimaryConstructorBaseType = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9065;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerUnmanagedCallingConventionList = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9066;

        /// <summary>Added in version 3.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind FunctionPointerUnmanagedCallingConvention = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9067;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind RecordStructDeclaration = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9068;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ExpressionColon = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9069;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind LineDirectivePosition = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9070;

        /// <summary>Added in version 4.0.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind LineSpanDirectiveTrivia = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9071;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind InterpolatedSingleLineRawStringStartToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9072;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind InterpolatedMultiLineRawStringStartToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9073;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind InterpolatedRawStringEndToken = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9074;

        /// <summary>Added in version 4.4.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ScopedType = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9075;

        /// <summary>Added in version 4.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind CollectionExpression = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9076;

        /// <summary>Added in version 4.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind ExpressionElement = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9077;

        /// <summary>Added in version 4.8.0.0.</summary>
        public const Microsoft.CodeAnalysis.CSharp.SyntaxKind SpreadElement = (Microsoft.CodeAnalysis.CSharp.SyntaxKind)9078;
    }
}
