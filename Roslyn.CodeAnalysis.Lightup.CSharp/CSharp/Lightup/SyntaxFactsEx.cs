// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.SyntaxFacts.</summary>
    public static partial class SyntaxFactsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.SyntaxFacts";

        private delegate System.Boolean IsCheckedOperatorDelegate0(System.String operatorMetadataName);

        private static readonly IsCheckedOperatorDelegate0 IsCheckedOperatorFunc0;

        static SyntaxFactsEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            IsCheckedOperatorFunc0 = LightupHelper.CreateStaticMethodAccessor<IsCheckedOperatorDelegate0>(wrappedType, "IsCheckedOperator", "operatorMetadataNameString");
        }

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static System.Boolean IsCheckedOperator(System.String operatorMetadataName)
            => IsCheckedOperatorFunc0(operatorMetadataName);
    }
}
