// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    public static class CSharpSyntaxVisitorExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor";

        public static readonly Type? WrappedType;

        private delegate void VisitBinaryPatternDelegate0(CSharpSyntaxVisitor? _obj, BinaryPatternSyntaxWrapper node);
        private delegate void VisitCollectionExpressionDelegate1(CSharpSyntaxVisitor? _obj, CollectionExpressionSyntaxWrapper node);
        private delegate void VisitDefaultConstraintDelegate2(CSharpSyntaxVisitor? _obj, DefaultConstraintSyntaxWrapper node);
        private delegate void VisitExpressionColonDelegate3(CSharpSyntaxVisitor? _obj, ExpressionColonSyntaxWrapper node);
        private delegate void VisitExpressionElementDelegate4(CSharpSyntaxVisitor? _obj, ExpressionElementSyntaxWrapper node);
        private delegate void VisitFileScopedNamespaceDeclarationDelegate5(CSharpSyntaxVisitor? _obj, FileScopedNamespaceDeclarationSyntaxWrapper node);
        private delegate void VisitFunctionPointerCallingConventionDelegate6(CSharpSyntaxVisitor? _obj, FunctionPointerCallingConventionSyntaxWrapper node);
        private delegate void VisitFunctionPointerParameterDelegate7(CSharpSyntaxVisitor? _obj, FunctionPointerParameterSyntaxWrapper node);
        private delegate void VisitFunctionPointerParameterListDelegate8(CSharpSyntaxVisitor? _obj, FunctionPointerParameterListSyntaxWrapper node);
        private delegate void VisitFunctionPointerTypeDelegate9(CSharpSyntaxVisitor? _obj, FunctionPointerTypeSyntaxWrapper node);
        private delegate void VisitFunctionPointerUnmanagedCallingConventionDelegate10(CSharpSyntaxVisitor? _obj, FunctionPointerUnmanagedCallingConventionSyntaxWrapper node);
        private delegate void VisitFunctionPointerUnmanagedCallingConventionListDelegate11(CSharpSyntaxVisitor? _obj, FunctionPointerUnmanagedCallingConventionListSyntaxWrapper node);
        private delegate void VisitImplicitObjectCreationExpressionDelegate12(CSharpSyntaxVisitor? _obj, ImplicitObjectCreationExpressionSyntaxWrapper node);
        private delegate void VisitLineDirectivePositionDelegate13(CSharpSyntaxVisitor? _obj, LineDirectivePositionSyntaxWrapper node);
        private delegate void VisitLineSpanDirectiveTriviaDelegate14(CSharpSyntaxVisitor? _obj, LineSpanDirectiveTriviaSyntaxWrapper node);
        private delegate void VisitListPatternDelegate15(CSharpSyntaxVisitor? _obj, ListPatternSyntaxWrapper node);
        private delegate void VisitParenthesizedPatternDelegate16(CSharpSyntaxVisitor? _obj, ParenthesizedPatternSyntaxWrapper node);
        private delegate void VisitPrimaryConstructorBaseTypeDelegate17(CSharpSyntaxVisitor? _obj, PrimaryConstructorBaseTypeSyntaxWrapper node);
        private delegate void VisitRecordDeclarationDelegate18(CSharpSyntaxVisitor? _obj, RecordDeclarationSyntaxWrapper node);
        private delegate void VisitRelationalPatternDelegate19(CSharpSyntaxVisitor? _obj, RelationalPatternSyntaxWrapper node);
        private delegate void VisitScopedTypeDelegate20(CSharpSyntaxVisitor? _obj, ScopedTypeSyntaxWrapper node);
        private delegate void VisitSlicePatternDelegate21(CSharpSyntaxVisitor? _obj, SlicePatternSyntaxWrapper node);
        private delegate void VisitSpreadElementDelegate22(CSharpSyntaxVisitor? _obj, SpreadElementSyntaxWrapper node);
        private delegate void VisitTypePatternDelegate23(CSharpSyntaxVisitor? _obj, TypePatternSyntaxWrapper node);
        private delegate void VisitUnaryPatternDelegate24(CSharpSyntaxVisitor? _obj, UnaryPatternSyntaxWrapper node);
        private delegate void VisitWithExpressionDelegate25(CSharpSyntaxVisitor? _obj, WithExpressionSyntaxWrapper node);

        private static readonly VisitBinaryPatternDelegate0 VisitBinaryPatternFunc0;
        private static readonly VisitCollectionExpressionDelegate1 VisitCollectionExpressionFunc1;
        private static readonly VisitDefaultConstraintDelegate2 VisitDefaultConstraintFunc2;
        private static readonly VisitExpressionColonDelegate3 VisitExpressionColonFunc3;
        private static readonly VisitExpressionElementDelegate4 VisitExpressionElementFunc4;
        private static readonly VisitFileScopedNamespaceDeclarationDelegate5 VisitFileScopedNamespaceDeclarationFunc5;
        private static readonly VisitFunctionPointerCallingConventionDelegate6 VisitFunctionPointerCallingConventionFunc6;
        private static readonly VisitFunctionPointerParameterDelegate7 VisitFunctionPointerParameterFunc7;
        private static readonly VisitFunctionPointerParameterListDelegate8 VisitFunctionPointerParameterListFunc8;
        private static readonly VisitFunctionPointerTypeDelegate9 VisitFunctionPointerTypeFunc9;
        private static readonly VisitFunctionPointerUnmanagedCallingConventionDelegate10 VisitFunctionPointerUnmanagedCallingConventionFunc10;
        private static readonly VisitFunctionPointerUnmanagedCallingConventionListDelegate11 VisitFunctionPointerUnmanagedCallingConventionListFunc11;
        private static readonly VisitImplicitObjectCreationExpressionDelegate12 VisitImplicitObjectCreationExpressionFunc12;
        private static readonly VisitLineDirectivePositionDelegate13 VisitLineDirectivePositionFunc13;
        private static readonly VisitLineSpanDirectiveTriviaDelegate14 VisitLineSpanDirectiveTriviaFunc14;
        private static readonly VisitListPatternDelegate15 VisitListPatternFunc15;
        private static readonly VisitParenthesizedPatternDelegate16 VisitParenthesizedPatternFunc16;
        private static readonly VisitPrimaryConstructorBaseTypeDelegate17 VisitPrimaryConstructorBaseTypeFunc17;
        private static readonly VisitRecordDeclarationDelegate18 VisitRecordDeclarationFunc18;
        private static readonly VisitRelationalPatternDelegate19 VisitRelationalPatternFunc19;
        private static readonly VisitScopedTypeDelegate20 VisitScopedTypeFunc20;
        private static readonly VisitSlicePatternDelegate21 VisitSlicePatternFunc21;
        private static readonly VisitSpreadElementDelegate22 VisitSpreadElementFunc22;
        private static readonly VisitTypePatternDelegate23 VisitTypePatternFunc23;
        private static readonly VisitUnaryPatternDelegate24 VisitUnaryPatternFunc24;
        private static readonly VisitWithExpressionDelegate25 VisitWithExpressionFunc25;

        static CSharpSyntaxVisitorExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            VisitBinaryPatternFunc0 = LightupHelper.CreateInstanceMethodAccessor<VisitBinaryPatternDelegate0>(WrappedType, nameof(VisitBinaryPattern));
            VisitCollectionExpressionFunc1 = LightupHelper.CreateInstanceMethodAccessor<VisitCollectionExpressionDelegate1>(WrappedType, nameof(VisitCollectionExpression));
            VisitDefaultConstraintFunc2 = LightupHelper.CreateInstanceMethodAccessor<VisitDefaultConstraintDelegate2>(WrappedType, nameof(VisitDefaultConstraint));
            VisitExpressionColonFunc3 = LightupHelper.CreateInstanceMethodAccessor<VisitExpressionColonDelegate3>(WrappedType, nameof(VisitExpressionColon));
            VisitExpressionElementFunc4 = LightupHelper.CreateInstanceMethodAccessor<VisitExpressionElementDelegate4>(WrappedType, nameof(VisitExpressionElement));
            VisitFileScopedNamespaceDeclarationFunc5 = LightupHelper.CreateInstanceMethodAccessor<VisitFileScopedNamespaceDeclarationDelegate5>(WrappedType, nameof(VisitFileScopedNamespaceDeclaration));
            VisitFunctionPointerCallingConventionFunc6 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerCallingConventionDelegate6>(WrappedType, nameof(VisitFunctionPointerCallingConvention));
            VisitFunctionPointerParameterFunc7 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerParameterDelegate7>(WrappedType, nameof(VisitFunctionPointerParameter));
            VisitFunctionPointerParameterListFunc8 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerParameterListDelegate8>(WrappedType, nameof(VisitFunctionPointerParameterList));
            VisitFunctionPointerTypeFunc9 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerTypeDelegate9>(WrappedType, nameof(VisitFunctionPointerType));
            VisitFunctionPointerUnmanagedCallingConventionFunc10 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerUnmanagedCallingConventionDelegate10>(WrappedType, nameof(VisitFunctionPointerUnmanagedCallingConvention));
            VisitFunctionPointerUnmanagedCallingConventionListFunc11 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerUnmanagedCallingConventionListDelegate11>(WrappedType, nameof(VisitFunctionPointerUnmanagedCallingConventionList));
            VisitImplicitObjectCreationExpressionFunc12 = LightupHelper.CreateInstanceMethodAccessor<VisitImplicitObjectCreationExpressionDelegate12>(WrappedType, nameof(VisitImplicitObjectCreationExpression));
            VisitLineDirectivePositionFunc13 = LightupHelper.CreateInstanceMethodAccessor<VisitLineDirectivePositionDelegate13>(WrappedType, nameof(VisitLineDirectivePosition));
            VisitLineSpanDirectiveTriviaFunc14 = LightupHelper.CreateInstanceMethodAccessor<VisitLineSpanDirectiveTriviaDelegate14>(WrappedType, nameof(VisitLineSpanDirectiveTrivia));
            VisitListPatternFunc15 = LightupHelper.CreateInstanceMethodAccessor<VisitListPatternDelegate15>(WrappedType, nameof(VisitListPattern));
            VisitParenthesizedPatternFunc16 = LightupHelper.CreateInstanceMethodAccessor<VisitParenthesizedPatternDelegate16>(WrappedType, nameof(VisitParenthesizedPattern));
            VisitPrimaryConstructorBaseTypeFunc17 = LightupHelper.CreateInstanceMethodAccessor<VisitPrimaryConstructorBaseTypeDelegate17>(WrappedType, nameof(VisitPrimaryConstructorBaseType));
            VisitRecordDeclarationFunc18 = LightupHelper.CreateInstanceMethodAccessor<VisitRecordDeclarationDelegate18>(WrappedType, nameof(VisitRecordDeclaration));
            VisitRelationalPatternFunc19 = LightupHelper.CreateInstanceMethodAccessor<VisitRelationalPatternDelegate19>(WrappedType, nameof(VisitRelationalPattern));
            VisitScopedTypeFunc20 = LightupHelper.CreateInstanceMethodAccessor<VisitScopedTypeDelegate20>(WrappedType, nameof(VisitScopedType));
            VisitSlicePatternFunc21 = LightupHelper.CreateInstanceMethodAccessor<VisitSlicePatternDelegate21>(WrappedType, nameof(VisitSlicePattern));
            VisitSpreadElementFunc22 = LightupHelper.CreateInstanceMethodAccessor<VisitSpreadElementDelegate22>(WrappedType, nameof(VisitSpreadElement));
            VisitTypePatternFunc23 = LightupHelper.CreateInstanceMethodAccessor<VisitTypePatternDelegate23>(WrappedType, nameof(VisitTypePattern));
            VisitUnaryPatternFunc24 = LightupHelper.CreateInstanceMethodAccessor<VisitUnaryPatternDelegate24>(WrappedType, nameof(VisitUnaryPattern));
            VisitWithExpressionFunc25 = LightupHelper.CreateInstanceMethodAccessor<VisitWithExpressionDelegate25>(WrappedType, nameof(VisitWithExpression));
        }

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitBinaryPattern(this CSharpSyntaxVisitor _obj, BinaryPatternSyntaxWrapper node)
            => VisitBinaryPatternFunc0(_obj, node);

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static void VisitCollectionExpression(this CSharpSyntaxVisitor _obj, CollectionExpressionSyntaxWrapper node)
            => VisitCollectionExpressionFunc1(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitDefaultConstraint(this CSharpSyntaxVisitor _obj, DefaultConstraintSyntaxWrapper node)
            => VisitDefaultConstraintFunc2(_obj, node);

        /// <summary>Added in Roslyn version 4.0.0.0</summary>
        public static void VisitExpressionColon(this CSharpSyntaxVisitor _obj, ExpressionColonSyntaxWrapper node)
            => VisitExpressionColonFunc3(_obj, node);

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static void VisitExpressionElement(this CSharpSyntaxVisitor _obj, ExpressionElementSyntaxWrapper node)
            => VisitExpressionElementFunc4(_obj, node);

        /// <summary>Added in Roslyn version 4.0.0.0</summary>
        public static void VisitFileScopedNamespaceDeclaration(this CSharpSyntaxVisitor _obj, FileScopedNamespaceDeclarationSyntaxWrapper node)
            => VisitFileScopedNamespaceDeclarationFunc5(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitFunctionPointerCallingConvention(this CSharpSyntaxVisitor _obj, FunctionPointerCallingConventionSyntaxWrapper node)
            => VisitFunctionPointerCallingConventionFunc6(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitFunctionPointerParameter(this CSharpSyntaxVisitor _obj, FunctionPointerParameterSyntaxWrapper node)
            => VisitFunctionPointerParameterFunc7(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitFunctionPointerParameterList(this CSharpSyntaxVisitor _obj, FunctionPointerParameterListSyntaxWrapper node)
            => VisitFunctionPointerParameterListFunc8(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitFunctionPointerType(this CSharpSyntaxVisitor _obj, FunctionPointerTypeSyntaxWrapper node)
            => VisitFunctionPointerTypeFunc9(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitFunctionPointerUnmanagedCallingConvention(this CSharpSyntaxVisitor _obj, FunctionPointerUnmanagedCallingConventionSyntaxWrapper node)
            => VisitFunctionPointerUnmanagedCallingConventionFunc10(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitFunctionPointerUnmanagedCallingConventionList(this CSharpSyntaxVisitor _obj, FunctionPointerUnmanagedCallingConventionListSyntaxWrapper node)
            => VisitFunctionPointerUnmanagedCallingConventionListFunc11(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitImplicitObjectCreationExpression(this CSharpSyntaxVisitor _obj, ImplicitObjectCreationExpressionSyntaxWrapper node)
            => VisitImplicitObjectCreationExpressionFunc12(_obj, node);

        /// <summary>Added in Roslyn version 4.0.0.0</summary>
        public static void VisitLineDirectivePosition(this CSharpSyntaxVisitor _obj, LineDirectivePositionSyntaxWrapper node)
            => VisitLineDirectivePositionFunc13(_obj, node);

        /// <summary>Added in Roslyn version 4.0.0.0</summary>
        public static void VisitLineSpanDirectiveTrivia(this CSharpSyntaxVisitor _obj, LineSpanDirectiveTriviaSyntaxWrapper node)
            => VisitLineSpanDirectiveTriviaFunc14(_obj, node);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitListPattern(this CSharpSyntaxVisitor _obj, ListPatternSyntaxWrapper node)
            => VisitListPatternFunc15(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitParenthesizedPattern(this CSharpSyntaxVisitor _obj, ParenthesizedPatternSyntaxWrapper node)
            => VisitParenthesizedPatternFunc16(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitPrimaryConstructorBaseType(this CSharpSyntaxVisitor _obj, PrimaryConstructorBaseTypeSyntaxWrapper node)
            => VisitPrimaryConstructorBaseTypeFunc17(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitRecordDeclaration(this CSharpSyntaxVisitor _obj, RecordDeclarationSyntaxWrapper node)
            => VisitRecordDeclarationFunc18(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitRelationalPattern(this CSharpSyntaxVisitor _obj, RelationalPatternSyntaxWrapper node)
            => VisitRelationalPatternFunc19(_obj, node);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitScopedType(this CSharpSyntaxVisitor _obj, ScopedTypeSyntaxWrapper node)
            => VisitScopedTypeFunc20(_obj, node);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitSlicePattern(this CSharpSyntaxVisitor _obj, SlicePatternSyntaxWrapper node)
            => VisitSlicePatternFunc21(_obj, node);

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static void VisitSpreadElement(this CSharpSyntaxVisitor _obj, SpreadElementSyntaxWrapper node)
            => VisitSpreadElementFunc22(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitTypePattern(this CSharpSyntaxVisitor _obj, TypePatternSyntaxWrapper node)
            => VisitTypePatternFunc23(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitUnaryPattern(this CSharpSyntaxVisitor _obj, UnaryPatternSyntaxWrapper node)
            => VisitUnaryPatternFunc24(_obj, node);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitWithExpression(this CSharpSyntaxVisitor _obj, WithExpressionSyntaxWrapper node)
            => VisitWithExpressionFunc25(_obj, node);
    }
}
