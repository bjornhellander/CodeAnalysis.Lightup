// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp.Syntax.Lightup;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.CSharp.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.</summary>
    public static class CSharpSyntaxRewriterExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter";

        private delegate SyntaxNode? VisitBinaryPatternDelegate0(CSharpSyntaxRewriter? _obj, BinaryPatternSyntaxWrapper node);
        private delegate SyntaxNode? VisitCollectionExpressionDelegate1(CSharpSyntaxRewriter? _obj, CollectionExpressionSyntaxWrapper node);
        private delegate SyntaxNode? VisitDefaultConstraintDelegate2(CSharpSyntaxRewriter? _obj, DefaultConstraintSyntaxWrapper node);
        private delegate SyntaxNode? VisitExpressionColonDelegate3(CSharpSyntaxRewriter? _obj, ExpressionColonSyntaxWrapper node);
        private delegate SyntaxNode? VisitExpressionElementDelegate4(CSharpSyntaxRewriter? _obj, ExpressionElementSyntaxWrapper node);
        private delegate SyntaxNode? VisitFileScopedNamespaceDeclarationDelegate5(CSharpSyntaxRewriter? _obj, FileScopedNamespaceDeclarationSyntaxWrapper node);
        private delegate SyntaxNode? VisitFunctionPointerCallingConventionDelegate6(CSharpSyntaxRewriter? _obj, FunctionPointerCallingConventionSyntaxWrapper node);
        private delegate SyntaxNode? VisitFunctionPointerParameterDelegate7(CSharpSyntaxRewriter? _obj, FunctionPointerParameterSyntaxWrapper node);
        private delegate SyntaxNode? VisitFunctionPointerParameterListDelegate8(CSharpSyntaxRewriter? _obj, FunctionPointerParameterListSyntaxWrapper node);
        private delegate SyntaxNode? VisitFunctionPointerTypeDelegate9(CSharpSyntaxRewriter? _obj, FunctionPointerTypeSyntaxWrapper node);
        private delegate SyntaxNode? VisitFunctionPointerUnmanagedCallingConventionDelegate10(CSharpSyntaxRewriter? _obj, FunctionPointerUnmanagedCallingConventionSyntaxWrapper node);
        private delegate SyntaxNode? VisitFunctionPointerUnmanagedCallingConventionListDelegate11(CSharpSyntaxRewriter? _obj, FunctionPointerUnmanagedCallingConventionListSyntaxWrapper node);
        private delegate SyntaxNode? VisitImplicitObjectCreationExpressionDelegate12(CSharpSyntaxRewriter? _obj, ImplicitObjectCreationExpressionSyntaxWrapper node);
        private delegate SyntaxNode? VisitLineDirectivePositionDelegate13(CSharpSyntaxRewriter? _obj, LineDirectivePositionSyntaxWrapper node);
        private delegate SyntaxNode? VisitLineSpanDirectiveTriviaDelegate14(CSharpSyntaxRewriter? _obj, LineSpanDirectiveTriviaSyntaxWrapper node);
        private delegate SyntaxNode? VisitListPatternDelegate15(CSharpSyntaxRewriter? _obj, ListPatternSyntaxWrapper node);
        private delegate SyntaxNode? VisitParenthesizedPatternDelegate16(CSharpSyntaxRewriter? _obj, ParenthesizedPatternSyntaxWrapper node);
        private delegate SyntaxNode? VisitPrimaryConstructorBaseTypeDelegate17(CSharpSyntaxRewriter? _obj, PrimaryConstructorBaseTypeSyntaxWrapper node);
        private delegate SyntaxNode? VisitRecordDeclarationDelegate18(CSharpSyntaxRewriter? _obj, RecordDeclarationSyntaxWrapper node);
        private delegate SyntaxNode? VisitRelationalPatternDelegate19(CSharpSyntaxRewriter? _obj, RelationalPatternSyntaxWrapper node);
        private delegate SyntaxNode? VisitScopedTypeDelegate20(CSharpSyntaxRewriter? _obj, ScopedTypeSyntaxWrapper node);
        private delegate SyntaxNode? VisitSlicePatternDelegate21(CSharpSyntaxRewriter? _obj, SlicePatternSyntaxWrapper node);
        private delegate SyntaxNode? VisitSpreadElementDelegate22(CSharpSyntaxRewriter? _obj, SpreadElementSyntaxWrapper node);
        private delegate SyntaxNode? VisitTypePatternDelegate23(CSharpSyntaxRewriter? _obj, TypePatternSyntaxWrapper node);
        private delegate SyntaxNode? VisitUnaryPatternDelegate24(CSharpSyntaxRewriter? _obj, UnaryPatternSyntaxWrapper node);
        private delegate SyntaxNode? VisitWithExpressionDelegate25(CSharpSyntaxRewriter? _obj, WithExpressionSyntaxWrapper node);

        private static readonly VisitBinaryPatternDelegate0 VisitBinaryPatternFunc0;
        private static readonly VisitCollectionExpressionDelegate1 VisitCollectionExpressionFunc1;
        private static readonly VisitDefaultConstraintDelegate2 VisitDefaultConstraintFunc2;
        private static readonly VisitExpressionColonDelegate3 VisitExpressionColonFunc3;
        private static readonly VisitExpressionElementDelegate4 VisitExpressionElementFunc4;
        private static readonly VisitFileScopedNamespaceDeclarationDelegate5 VisitFileScopedNamespaceDeclarationFunc5;
        private static readonly VisitFunctionPointerCallingConventionDelegate6 VisitFunctionPointerCallingConventionFunc6;
        private static readonly VisitFunctionPointerParameterDelegate7 VisitFunctionPointerParameterFunc7;
        private static readonly VisitFunctionPointerParameterListDelegate8 VisitFunctionPointerParameterListFunc8;
        private static readonly VisitFunctionPointerTypeDelegate9 VisitFunctionPointerTypeFunc9;
        private static readonly VisitFunctionPointerUnmanagedCallingConventionDelegate10 VisitFunctionPointerUnmanagedCallingConventionFunc10;
        private static readonly VisitFunctionPointerUnmanagedCallingConventionListDelegate11 VisitFunctionPointerUnmanagedCallingConventionListFunc11;
        private static readonly VisitImplicitObjectCreationExpressionDelegate12 VisitImplicitObjectCreationExpressionFunc12;
        private static readonly VisitLineDirectivePositionDelegate13 VisitLineDirectivePositionFunc13;
        private static readonly VisitLineSpanDirectiveTriviaDelegate14 VisitLineSpanDirectiveTriviaFunc14;
        private static readonly VisitListPatternDelegate15 VisitListPatternFunc15;
        private static readonly VisitParenthesizedPatternDelegate16 VisitParenthesizedPatternFunc16;
        private static readonly VisitPrimaryConstructorBaseTypeDelegate17 VisitPrimaryConstructorBaseTypeFunc17;
        private static readonly VisitRecordDeclarationDelegate18 VisitRecordDeclarationFunc18;
        private static readonly VisitRelationalPatternDelegate19 VisitRelationalPatternFunc19;
        private static readonly VisitScopedTypeDelegate20 VisitScopedTypeFunc20;
        private static readonly VisitSlicePatternDelegate21 VisitSlicePatternFunc21;
        private static readonly VisitSpreadElementDelegate22 VisitSpreadElementFunc22;
        private static readonly VisitTypePatternDelegate23 VisitTypePatternFunc23;
        private static readonly VisitUnaryPatternDelegate24 VisitUnaryPatternFunc24;
        private static readonly VisitWithExpressionDelegate25 VisitWithExpressionFunc25;

        static CSharpSyntaxRewriterExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            VisitBinaryPatternFunc0 = LightupHelper.CreateInstanceMethodAccessor<VisitBinaryPatternDelegate0>(wrappedType, "VisitBinaryPattern", "BinaryPatternSyntax");
            VisitCollectionExpressionFunc1 = LightupHelper.CreateInstanceMethodAccessor<VisitCollectionExpressionDelegate1>(wrappedType, "VisitCollectionExpression", "CollectionExpressionSyntax");
            VisitDefaultConstraintFunc2 = LightupHelper.CreateInstanceMethodAccessor<VisitDefaultConstraintDelegate2>(wrappedType, "VisitDefaultConstraint", "DefaultConstraintSyntax");
            VisitExpressionColonFunc3 = LightupHelper.CreateInstanceMethodAccessor<VisitExpressionColonDelegate3>(wrappedType, "VisitExpressionColon", "ExpressionColonSyntax");
            VisitExpressionElementFunc4 = LightupHelper.CreateInstanceMethodAccessor<VisitExpressionElementDelegate4>(wrappedType, "VisitExpressionElement", "ExpressionElementSyntax");
            VisitFileScopedNamespaceDeclarationFunc5 = LightupHelper.CreateInstanceMethodAccessor<VisitFileScopedNamespaceDeclarationDelegate5>(wrappedType, "VisitFileScopedNamespaceDeclaration", "FileScopedNamespaceDeclarationSyntax");
            VisitFunctionPointerCallingConventionFunc6 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerCallingConventionDelegate6>(wrappedType, "VisitFunctionPointerCallingConvention", "FunctionPointerCallingConventionSyntax");
            VisitFunctionPointerParameterFunc7 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerParameterDelegate7>(wrappedType, "VisitFunctionPointerParameter", "FunctionPointerParameterSyntax");
            VisitFunctionPointerParameterListFunc8 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerParameterListDelegate8>(wrappedType, "VisitFunctionPointerParameterList", "FunctionPointerParameterListSyntax");
            VisitFunctionPointerTypeFunc9 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerTypeDelegate9>(wrappedType, "VisitFunctionPointerType", "FunctionPointerTypeSyntax");
            VisitFunctionPointerUnmanagedCallingConventionFunc10 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerUnmanagedCallingConventionDelegate10>(wrappedType, "VisitFunctionPointerUnmanagedCallingConvention", "FunctionPointerUnmanagedCallingConventionSyntax");
            VisitFunctionPointerUnmanagedCallingConventionListFunc11 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerUnmanagedCallingConventionListDelegate11>(wrappedType, "VisitFunctionPointerUnmanagedCallingConventionList", "FunctionPointerUnmanagedCallingConventionListSyntax");
            VisitImplicitObjectCreationExpressionFunc12 = LightupHelper.CreateInstanceMethodAccessor<VisitImplicitObjectCreationExpressionDelegate12>(wrappedType, "VisitImplicitObjectCreationExpression", "ImplicitObjectCreationExpressionSyntax");
            VisitLineDirectivePositionFunc13 = LightupHelper.CreateInstanceMethodAccessor<VisitLineDirectivePositionDelegate13>(wrappedType, "VisitLineDirectivePosition", "LineDirectivePositionSyntax");
            VisitLineSpanDirectiveTriviaFunc14 = LightupHelper.CreateInstanceMethodAccessor<VisitLineSpanDirectiveTriviaDelegate14>(wrappedType, "VisitLineSpanDirectiveTrivia", "LineSpanDirectiveTriviaSyntax");
            VisitListPatternFunc15 = LightupHelper.CreateInstanceMethodAccessor<VisitListPatternDelegate15>(wrappedType, "VisitListPattern", "ListPatternSyntax");
            VisitParenthesizedPatternFunc16 = LightupHelper.CreateInstanceMethodAccessor<VisitParenthesizedPatternDelegate16>(wrappedType, "VisitParenthesizedPattern", "ParenthesizedPatternSyntax");
            VisitPrimaryConstructorBaseTypeFunc17 = LightupHelper.CreateInstanceMethodAccessor<VisitPrimaryConstructorBaseTypeDelegate17>(wrappedType, "VisitPrimaryConstructorBaseType", "PrimaryConstructorBaseTypeSyntax");
            VisitRecordDeclarationFunc18 = LightupHelper.CreateInstanceMethodAccessor<VisitRecordDeclarationDelegate18>(wrappedType, "VisitRecordDeclaration", "RecordDeclarationSyntax");
            VisitRelationalPatternFunc19 = LightupHelper.CreateInstanceMethodAccessor<VisitRelationalPatternDelegate19>(wrappedType, "VisitRelationalPattern", "RelationalPatternSyntax");
            VisitScopedTypeFunc20 = LightupHelper.CreateInstanceMethodAccessor<VisitScopedTypeDelegate20>(wrappedType, "VisitScopedType", "ScopedTypeSyntax");
            VisitSlicePatternFunc21 = LightupHelper.CreateInstanceMethodAccessor<VisitSlicePatternDelegate21>(wrappedType, "VisitSlicePattern", "SlicePatternSyntax");
            VisitSpreadElementFunc22 = LightupHelper.CreateInstanceMethodAccessor<VisitSpreadElementDelegate22>(wrappedType, "VisitSpreadElement", "SpreadElementSyntax");
            VisitTypePatternFunc23 = LightupHelper.CreateInstanceMethodAccessor<VisitTypePatternDelegate23>(wrappedType, "VisitTypePattern", "TypePatternSyntax");
            VisitUnaryPatternFunc24 = LightupHelper.CreateInstanceMethodAccessor<VisitUnaryPatternDelegate24>(wrappedType, "VisitUnaryPattern", "UnaryPatternSyntax");
            VisitWithExpressionFunc25 = LightupHelper.CreateInstanceMethodAccessor<VisitWithExpressionDelegate25>(wrappedType, "VisitWithExpression", "WithExpressionSyntax");
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitBinaryPattern(this CSharpSyntaxRewriter _obj, BinaryPatternSyntaxWrapper node)
            => VisitBinaryPatternFunc0(_obj, node);

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static SyntaxNode? VisitCollectionExpression(this CSharpSyntaxRewriter _obj, CollectionExpressionSyntaxWrapper node)
            => VisitCollectionExpressionFunc1(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitDefaultConstraint(this CSharpSyntaxRewriter _obj, DefaultConstraintSyntaxWrapper node)
            => VisitDefaultConstraintFunc2(_obj, node);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static SyntaxNode? VisitExpressionColon(this CSharpSyntaxRewriter _obj, ExpressionColonSyntaxWrapper node)
            => VisitExpressionColonFunc3(_obj, node);

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static SyntaxNode? VisitExpressionElement(this CSharpSyntaxRewriter _obj, ExpressionElementSyntaxWrapper node)
            => VisitExpressionElementFunc4(_obj, node);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static SyntaxNode? VisitFileScopedNamespaceDeclaration(this CSharpSyntaxRewriter _obj, FileScopedNamespaceDeclarationSyntaxWrapper node)
            => VisitFileScopedNamespaceDeclarationFunc5(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitFunctionPointerCallingConvention(this CSharpSyntaxRewriter _obj, FunctionPointerCallingConventionSyntaxWrapper node)
            => VisitFunctionPointerCallingConventionFunc6(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitFunctionPointerParameter(this CSharpSyntaxRewriter _obj, FunctionPointerParameterSyntaxWrapper node)
            => VisitFunctionPointerParameterFunc7(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitFunctionPointerParameterList(this CSharpSyntaxRewriter _obj, FunctionPointerParameterListSyntaxWrapper node)
            => VisitFunctionPointerParameterListFunc8(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitFunctionPointerType(this CSharpSyntaxRewriter _obj, FunctionPointerTypeSyntaxWrapper node)
            => VisitFunctionPointerTypeFunc9(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitFunctionPointerUnmanagedCallingConvention(this CSharpSyntaxRewriter _obj, FunctionPointerUnmanagedCallingConventionSyntaxWrapper node)
            => VisitFunctionPointerUnmanagedCallingConventionFunc10(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitFunctionPointerUnmanagedCallingConventionList(this CSharpSyntaxRewriter _obj, FunctionPointerUnmanagedCallingConventionListSyntaxWrapper node)
            => VisitFunctionPointerUnmanagedCallingConventionListFunc11(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitImplicitObjectCreationExpression(this CSharpSyntaxRewriter _obj, ImplicitObjectCreationExpressionSyntaxWrapper node)
            => VisitImplicitObjectCreationExpressionFunc12(_obj, node);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static SyntaxNode? VisitLineDirectivePosition(this CSharpSyntaxRewriter _obj, LineDirectivePositionSyntaxWrapper node)
            => VisitLineDirectivePositionFunc13(_obj, node);

        /// <summary>Method added in version 4.0.0.0.</summary>
        public static SyntaxNode? VisitLineSpanDirectiveTrivia(this CSharpSyntaxRewriter _obj, LineSpanDirectiveTriviaSyntaxWrapper node)
            => VisitLineSpanDirectiveTriviaFunc14(_obj, node);

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static SyntaxNode? VisitListPattern(this CSharpSyntaxRewriter _obj, ListPatternSyntaxWrapper node)
            => VisitListPatternFunc15(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitParenthesizedPattern(this CSharpSyntaxRewriter _obj, ParenthesizedPatternSyntaxWrapper node)
            => VisitParenthesizedPatternFunc16(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitPrimaryConstructorBaseType(this CSharpSyntaxRewriter _obj, PrimaryConstructorBaseTypeSyntaxWrapper node)
            => VisitPrimaryConstructorBaseTypeFunc17(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitRecordDeclaration(this CSharpSyntaxRewriter _obj, RecordDeclarationSyntaxWrapper node)
            => VisitRecordDeclarationFunc18(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitRelationalPattern(this CSharpSyntaxRewriter _obj, RelationalPatternSyntaxWrapper node)
            => VisitRelationalPatternFunc19(_obj, node);

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static SyntaxNode? VisitScopedType(this CSharpSyntaxRewriter _obj, ScopedTypeSyntaxWrapper node)
            => VisitScopedTypeFunc20(_obj, node);

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static SyntaxNode? VisitSlicePattern(this CSharpSyntaxRewriter _obj, SlicePatternSyntaxWrapper node)
            => VisitSlicePatternFunc21(_obj, node);

        /// <summary>Method added in version 4.8.0.0.</summary>
        public static SyntaxNode? VisitSpreadElement(this CSharpSyntaxRewriter _obj, SpreadElementSyntaxWrapper node)
            => VisitSpreadElementFunc22(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitTypePattern(this CSharpSyntaxRewriter _obj, TypePatternSyntaxWrapper node)
            => VisitTypePatternFunc23(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitUnaryPattern(this CSharpSyntaxRewriter _obj, UnaryPatternSyntaxWrapper node)
            => VisitUnaryPatternFunc24(_obj, node);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static SyntaxNode? VisitWithExpression(this CSharpSyntaxRewriter _obj, WithExpressionSyntaxWrapper node)
            => VisitWithExpressionFunc25(_obj, node);
    }
}
