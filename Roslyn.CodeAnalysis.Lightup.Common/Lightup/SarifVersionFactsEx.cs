// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Operations.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.SarifVersionFacts. Added in version 3.8.0.0.</summary>
    public static class SarifVersionFactsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.SarifVersionFacts";

        private delegate Boolean TryParseDelegate0(String version, out SarifVersionEx result);

        private static readonly TryParseDelegate0 TryParseFunc0;

        static SarifVersionFactsEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            TryParseFunc0 = LightupHelper.CreateStaticMethodAccessor<TryParseDelegate0>(wrappedType, nameof(TryParse));
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static Boolean TryParse(String version, out SarifVersionEx result)
            => TryParseFunc0(version, out result);
    }
}
