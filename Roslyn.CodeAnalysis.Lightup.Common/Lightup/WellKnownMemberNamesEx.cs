// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.WellKnownMemberNames.</summary>
    public static partial class WellKnownMemberNamesEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.WellKnownMemberNames";

        private delegate System.String CountPropertyNameGetterDelegate();
        private delegate System.String LengthPropertyNameGetterDelegate();
        private delegate System.String SliceMethodNameGetterDelegate();
        private delegate System.String TopLevelStatementsEntryPointMethodNameGetterDelegate();
        private delegate System.String TopLevelStatementsEntryPointTypeNameGetterDelegate();
        private delegate System.String PrintMembersMethodNameGetterDelegate();
        private delegate System.String CheckedAdditionOperatorNameGetterDelegate();
        private delegate System.String CheckedDecrementOperatorNameGetterDelegate();
        private delegate System.String CheckedDivisionOperatorNameGetterDelegate();
        private delegate System.String CheckedExplicitConversionNameGetterDelegate();
        private delegate System.String CheckedIncrementOperatorNameGetterDelegate();
        private delegate System.String CheckedMultiplyOperatorNameGetterDelegate();
        private delegate System.String CheckedSubtractionOperatorNameGetterDelegate();
        private delegate System.String CheckedUnaryNegationOperatorNameGetterDelegate();

        private static readonly CountPropertyNameGetterDelegate CountPropertyNameGetterFunc;
        private static readonly LengthPropertyNameGetterDelegate LengthPropertyNameGetterFunc;
        private static readonly SliceMethodNameGetterDelegate SliceMethodNameGetterFunc;
        private static readonly TopLevelStatementsEntryPointMethodNameGetterDelegate TopLevelStatementsEntryPointMethodNameGetterFunc;
        private static readonly TopLevelStatementsEntryPointTypeNameGetterDelegate TopLevelStatementsEntryPointTypeNameGetterFunc;
        private static readonly PrintMembersMethodNameGetterDelegate PrintMembersMethodNameGetterFunc;
        private static readonly CheckedAdditionOperatorNameGetterDelegate CheckedAdditionOperatorNameGetterFunc;
        private static readonly CheckedDecrementOperatorNameGetterDelegate CheckedDecrementOperatorNameGetterFunc;
        private static readonly CheckedDivisionOperatorNameGetterDelegate CheckedDivisionOperatorNameGetterFunc;
        private static readonly CheckedExplicitConversionNameGetterDelegate CheckedExplicitConversionNameGetterFunc;
        private static readonly CheckedIncrementOperatorNameGetterDelegate CheckedIncrementOperatorNameGetterFunc;
        private static readonly CheckedMultiplyOperatorNameGetterDelegate CheckedMultiplyOperatorNameGetterFunc;
        private static readonly CheckedSubtractionOperatorNameGetterDelegate CheckedSubtractionOperatorNameGetterFunc;
        private static readonly CheckedUnaryNegationOperatorNameGetterDelegate CheckedUnaryNegationOperatorNameGetterFunc;

        static WellKnownMemberNamesEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            CountPropertyNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CountPropertyNameGetterDelegate>(wrappedType, nameof(CountPropertyName));
            LengthPropertyNameGetterFunc = LightupHelper.CreateStaticReadAccessor<LengthPropertyNameGetterDelegate>(wrappedType, nameof(LengthPropertyName));
            SliceMethodNameGetterFunc = LightupHelper.CreateStaticReadAccessor<SliceMethodNameGetterDelegate>(wrappedType, nameof(SliceMethodName));
            TopLevelStatementsEntryPointMethodNameGetterFunc = LightupHelper.CreateStaticReadAccessor<TopLevelStatementsEntryPointMethodNameGetterDelegate>(wrappedType, nameof(TopLevelStatementsEntryPointMethodName));
            TopLevelStatementsEntryPointTypeNameGetterFunc = LightupHelper.CreateStaticReadAccessor<TopLevelStatementsEntryPointTypeNameGetterDelegate>(wrappedType, nameof(TopLevelStatementsEntryPointTypeName));
            PrintMembersMethodNameGetterFunc = LightupHelper.CreateStaticReadAccessor<PrintMembersMethodNameGetterDelegate>(wrappedType, nameof(PrintMembersMethodName));
            CheckedAdditionOperatorNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedAdditionOperatorNameGetterDelegate>(wrappedType, nameof(CheckedAdditionOperatorName));
            CheckedDecrementOperatorNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedDecrementOperatorNameGetterDelegate>(wrappedType, nameof(CheckedDecrementOperatorName));
            CheckedDivisionOperatorNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedDivisionOperatorNameGetterDelegate>(wrappedType, nameof(CheckedDivisionOperatorName));
            CheckedExplicitConversionNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedExplicitConversionNameGetterDelegate>(wrappedType, nameof(CheckedExplicitConversionName));
            CheckedIncrementOperatorNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedIncrementOperatorNameGetterDelegate>(wrappedType, nameof(CheckedIncrementOperatorName));
            CheckedMultiplyOperatorNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedMultiplyOperatorNameGetterDelegate>(wrappedType, nameof(CheckedMultiplyOperatorName));
            CheckedSubtractionOperatorNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedSubtractionOperatorNameGetterDelegate>(wrappedType, nameof(CheckedSubtractionOperatorName));
            CheckedUnaryNegationOperatorNameGetterFunc = LightupHelper.CreateStaticReadAccessor<CheckedUnaryNegationOperatorNameGetterDelegate>(wrappedType, nameof(CheckedUnaryNegationOperatorName));
        }

        /// <summary>Field added in version 3.8.0.0.</summary>
        public static System.String CountPropertyName
        {
            get => CountPropertyNameGetterFunc();
        }

        /// <summary>Field added in version 3.8.0.0.</summary>
        public static System.String LengthPropertyName
        {
            get => LengthPropertyNameGetterFunc();
        }

        /// <summary>Field added in version 3.8.0.0.</summary>
        public static System.String SliceMethodName
        {
            get => SliceMethodNameGetterFunc();
        }

        /// <summary>Field added in version 3.8.0.0.</summary>
        public static System.String TopLevelStatementsEntryPointMethodName
        {
            get => TopLevelStatementsEntryPointMethodNameGetterFunc();
        }

        /// <summary>Field added in version 3.8.0.0.</summary>
        public static System.String TopLevelStatementsEntryPointTypeName
        {
            get => TopLevelStatementsEntryPointTypeNameGetterFunc();
        }

        /// <summary>Field added in version 4.0.0.0.</summary>
        public static System.String PrintMembersMethodName
        {
            get => PrintMembersMethodNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedAdditionOperatorName
        {
            get => CheckedAdditionOperatorNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedDecrementOperatorName
        {
            get => CheckedDecrementOperatorNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedDivisionOperatorName
        {
            get => CheckedDivisionOperatorNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedExplicitConversionName
        {
            get => CheckedExplicitConversionNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedIncrementOperatorName
        {
            get => CheckedIncrementOperatorNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedMultiplyOperatorName
        {
            get => CheckedMultiplyOperatorNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedSubtractionOperatorName
        {
            get => CheckedSubtractionOperatorNameGetterFunc();
        }

        /// <summary>Field added in version 4.4.0.0.</summary>
        public static System.String CheckedUnaryNegationOperatorName
        {
            get => CheckedUnaryNegationOperatorNameGetterFunc();
        }
    }
}
