// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Operations.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    public static class IArrayTypeSymbolExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.IArrayTypeSymbol";

        public static readonly Type? WrappedType;

        private delegate NullableAnnotationEx ElementNullableAnnotationGetterDelegate(IArrayTypeSymbol? _obj);

        private static readonly ElementNullableAnnotationGetterDelegate ElementNullableAnnotationGetterFunc;

        static IArrayTypeSymbolExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            ElementNullableAnnotationGetterFunc = LightupHelper.CreateInstanceGetAccessor<ElementNullableAnnotationGetterDelegate>(WrappedType, nameof(ElementNullableAnnotation));
        }

        /// <summary>Property added in version 3.8.0.0 of Roslyn.</summary>
        public static NullableAnnotationEx ElementNullableAnnotation(this IArrayTypeSymbol _obj)
            => ElementNullableAnnotationGetterFunc(_obj);
    }
}
