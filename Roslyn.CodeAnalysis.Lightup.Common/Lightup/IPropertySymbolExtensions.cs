// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Operations.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    public static class IPropertySymbolExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.IPropertySymbol";

        public static readonly Type? WrappedType;

        private delegate Boolean IsRequiredGetterDelegate(IPropertySymbol? _obj);
        private delegate NullableAnnotationEx NullableAnnotationGetterDelegate(IPropertySymbol? _obj);

        private static readonly IsRequiredGetterDelegate IsRequiredGetterFunc;
        private static readonly NullableAnnotationGetterDelegate NullableAnnotationGetterFunc;

        static IPropertySymbolExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            IsRequiredGetterFunc = LightupHelper.CreateInstanceGetAccessor<IsRequiredGetterDelegate>(WrappedType, nameof(IsRequired));
            NullableAnnotationGetterFunc = LightupHelper.CreateInstanceGetAccessor<NullableAnnotationGetterDelegate>(WrappedType, nameof(NullableAnnotation));
        }

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static Boolean IsRequired(this IPropertySymbol _obj)
            => IsRequiredGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NullableAnnotationEx NullableAnnotation(this IPropertySymbol _obj)
            => NullableAnnotationGetterFunc(_obj);
    }
}
