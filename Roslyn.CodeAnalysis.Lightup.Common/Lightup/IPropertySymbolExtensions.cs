// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for interface Microsoft.CodeAnalysis.IPropertySymbol.</summary>
    public static partial class IPropertySymbolExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.IPropertySymbol";

        private delegate System.Boolean IsRequiredGetterDelegate(Microsoft.CodeAnalysis.IPropertySymbol? _obj);
        private delegate Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx NullableAnnotationGetterDelegate(Microsoft.CodeAnalysis.IPropertySymbol? _obj);

        private static readonly IsRequiredGetterDelegate IsRequiredGetterFunc;
        private static readonly NullableAnnotationGetterDelegate NullableAnnotationGetterFunc;

        static IPropertySymbolExtensions()
        {
            var wrappedType = CommonLightupHelper.FindType(WrappedTypeName);

            IsRequiredGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<IsRequiredGetterDelegate>(wrappedType, nameof(IsRequired));
            NullableAnnotationGetterFunc = CommonLightupHelper.CreateInstanceGetAccessor<NullableAnnotationGetterDelegate>(wrappedType, nameof(NullableAnnotation));
        }

        /// <summary>Property added in version 4.4.0.0.</summary>
        public static System.Boolean IsRequired(this Microsoft.CodeAnalysis.IPropertySymbol _obj)
            => IsRequiredGetterFunc(_obj);

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Lightup.NullableAnnotationEx NullableAnnotation(this Microsoft.CodeAnalysis.IPropertySymbol _obj)
            => NullableAnnotationGetterFunc(_obj);
    }
}
