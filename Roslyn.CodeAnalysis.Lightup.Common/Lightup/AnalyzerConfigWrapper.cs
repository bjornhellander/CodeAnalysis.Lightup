// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading;
using System.Threading.Tasks;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Class added in Roslyn version 3.8.0.0</summary>
    public readonly struct AnalyzerConfigWrapper
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.AnalyzerConfig";

        public static readonly Type? WrappedType;

        private readonly object? wrappedObject;

        static AnalyzerConfigWrapper()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);
        }

        private AnalyzerConfigWrapper(object? obj)
        {
            wrappedObject = obj;
        }

        public static bool Is(object? obj)
            => LightupHelper.Is(obj, WrappedType);

        public static AnalyzerConfigWrapper As(object? obj)
        {
            var obj2 = LightupHelper.As<object>(obj, WrappedType);
            return new AnalyzerConfigWrapper(obj2);
        }

        public object? Unwrap()
            => wrappedObject;
    }
}
