// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.NullableContextExtensions. Added in version 3.8.0.0.</summary>
    public static class NullableContextExtensionsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.NullableContextExtensions";

        private delegate System.Boolean AnnotationsEnabledDelegate0(Microsoft.CodeAnalysis.Lightup.NullableContextEx context);
        private delegate System.Boolean AnnotationsInheritedDelegate1(Microsoft.CodeAnalysis.Lightup.NullableContextEx context);
        private delegate System.Boolean WarningsEnabledDelegate2(Microsoft.CodeAnalysis.Lightup.NullableContextEx context);
        private delegate System.Boolean WarningsInheritedDelegate3(Microsoft.CodeAnalysis.Lightup.NullableContextEx context);

        private static readonly AnnotationsEnabledDelegate0 AnnotationsEnabledFunc0;
        private static readonly AnnotationsInheritedDelegate1 AnnotationsInheritedFunc1;
        private static readonly WarningsEnabledDelegate2 WarningsEnabledFunc2;
        private static readonly WarningsInheritedDelegate3 WarningsInheritedFunc3;

        static NullableContextExtensionsEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AnnotationsEnabledFunc0 = LightupHelper.CreateStaticMethodAccessor<AnnotationsEnabledDelegate0>(wrappedType, "AnnotationsEnabled", "contextNullableContext");
            AnnotationsInheritedFunc1 = LightupHelper.CreateStaticMethodAccessor<AnnotationsInheritedDelegate1>(wrappedType, "AnnotationsInherited", "contextNullableContext");
            WarningsEnabledFunc2 = LightupHelper.CreateStaticMethodAccessor<WarningsEnabledDelegate2>(wrappedType, "WarningsEnabled", "contextNullableContext");
            WarningsInheritedFunc3 = LightupHelper.CreateStaticMethodAccessor<WarningsInheritedDelegate3>(wrappedType, "WarningsInherited", "contextNullableContext");
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Boolean AnnotationsEnabled(this Microsoft.CodeAnalysis.Lightup.NullableContextEx context)
            => AnnotationsEnabledFunc0(context);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Boolean AnnotationsInherited(this Microsoft.CodeAnalysis.Lightup.NullableContextEx context)
            => AnnotationsInheritedFunc1(context);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Boolean WarningsEnabled(this Microsoft.CodeAnalysis.Lightup.NullableContextEx context)
            => WarningsEnabledFunc2(context);

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static System.Boolean WarningsInherited(this Microsoft.CodeAnalysis.Lightup.NullableContextEx context)
            => WarningsInheritedFunc3(context);
    }
}
