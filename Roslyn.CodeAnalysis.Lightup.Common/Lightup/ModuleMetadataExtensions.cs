// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.ModuleMetadata.</summary>
    public static partial class ModuleMetadataExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.ModuleMetadata";

        private delegate Microsoft.CodeAnalysis.ModuleMetadata CreateFromMetadataDelegate0(System.IntPtr metadata, System.Int32 size, System.Action onDispose);

        private static readonly CreateFromMetadataDelegate0 CreateFromMetadataFunc0;

        static ModuleMetadataExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            CreateFromMetadataFunc0 = LightupHelper.CreateStaticMethodAccessor<CreateFromMetadataDelegate0>(wrappedType, "CreateFromMetadata", "metadataIntPtr", "sizeInt32", "onDisposeAction");
        }

        /// <summary>Method added in version 4.4.0.0.</summary>
        public static Microsoft.CodeAnalysis.ModuleMetadata CreateFromMetadata(System.IntPtr metadata, System.Int32 size, System.Action onDispose)
            => CreateFromMetadataFunc0(metadata, size, onDispose);
    }
}
