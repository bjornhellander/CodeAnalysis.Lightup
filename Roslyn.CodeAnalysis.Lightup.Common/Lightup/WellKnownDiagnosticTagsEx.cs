// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.WellKnownDiagnosticTags.</summary>
    public static partial class WellKnownDiagnosticTagsEx
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.WellKnownDiagnosticTags";

        private delegate System.String CustomObsoleteGetterDelegate();
        private delegate System.String CompilationEndGetterDelegate();

        private static readonly CustomObsoleteGetterDelegate CustomObsoleteGetterFunc;
        private static readonly CompilationEndGetterDelegate CompilationEndGetterFunc;

        static WellKnownDiagnosticTagsEx()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            CustomObsoleteGetterFunc = LightupHelper.CreateStaticReadAccessor<CustomObsoleteGetterDelegate>(wrappedType, nameof(CustomObsolete));
            CompilationEndGetterFunc = LightupHelper.CreateStaticReadAccessor<CompilationEndGetterDelegate>(wrappedType, nameof(CompilationEnd));
        }

        /// <summary>Field added in version 3.8.0.0.</summary>
        public static System.String CustomObsolete
        {
            get => CustomObsoleteGetterFunc();
        }

        /// <summary>Field added in version 4.0.0.0.</summary>
        public static System.String CompilationEnd
        {
            get => CompilationEndGetterFunc();
        }
    }
}
