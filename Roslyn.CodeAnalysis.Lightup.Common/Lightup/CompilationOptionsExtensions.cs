// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Operations.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Lightup
{
    public static class CompilationOptionsExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.CompilationOptions";

        public static readonly Type? WrappedType;

        private delegate NullableContextOptionsEx NullableContextOptionsGetterDelegate(CompilationOptions? _obj);
        private delegate SyntaxTreeOptionsProviderWrapper SyntaxTreeOptionsProviderGetterDelegate(CompilationOptions? _obj);

        private delegate CompilationOptions WithSyntaxTreeOptionsProviderDelegate0(CompilationOptions? _obj, SyntaxTreeOptionsProviderWrapper provider);

        private static readonly NullableContextOptionsGetterDelegate NullableContextOptionsGetterFunc;
        private static readonly SyntaxTreeOptionsProviderGetterDelegate SyntaxTreeOptionsProviderGetterFunc;

        private static readonly WithSyntaxTreeOptionsProviderDelegate0 WithSyntaxTreeOptionsProviderFunc0;

        static CompilationOptionsExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            NullableContextOptionsGetterFunc = LightupHelper.CreateInstanceGetAccessor<NullableContextOptionsGetterDelegate>(WrappedType, nameof(NullableContextOptions));
            SyntaxTreeOptionsProviderGetterFunc = LightupHelper.CreateInstanceGetAccessor<SyntaxTreeOptionsProviderGetterDelegate>(WrappedType, nameof(SyntaxTreeOptionsProvider));

            WithSyntaxTreeOptionsProviderFunc0 = LightupHelper.CreateInstanceMethodAccessor<WithSyntaxTreeOptionsProviderDelegate0>(WrappedType, nameof(WithSyntaxTreeOptionsProvider));
        }

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static NullableContextOptionsEx NullableContextOptions(this CompilationOptions _obj)
            => NullableContextOptionsGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static SyntaxTreeOptionsProviderWrapper SyntaxTreeOptionsProvider(this CompilationOptions _obj)
            => SyntaxTreeOptionsProviderGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static CompilationOptions WithSyntaxTreeOptionsProvider(this CompilationOptions _obj, SyntaxTreeOptionsProviderWrapper provider)
            => WithSyntaxTreeOptionsProviderFunc0(_obj, provider);
    }
}
