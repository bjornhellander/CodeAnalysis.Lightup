// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Diagnostics.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.</summary>
    public static partial class CompilationStartAnalysisContextExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext";

        private delegate void RegisterAdditionalFileActionDelegate0(Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext? _obj, System.Action<Microsoft.CodeAnalysis.Diagnostics.Lightup.AdditionalFileAnalysisContextWrapper> action);

        private static readonly RegisterAdditionalFileActionDelegate0 RegisterAdditionalFileActionFunc0;

        static CompilationStartAnalysisContextExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            RegisterAdditionalFileActionFunc0 = LightupHelper.CreateInstanceMethodAccessor<RegisterAdditionalFileActionDelegate0>(wrappedType, "RegisterAdditionalFileAction", "actionAction`1");
        }

        /// <summary>Method added in version 3.8.0.0.</summary>
        public static void RegisterAdditionalFileAction(this Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext _obj, System.Action<Microsoft.CodeAnalysis.Diagnostics.Lightup.AdditionalFileAnalysisContextWrapper> action)
            => RegisterAdditionalFileActionFunc0(_obj, action);
    }
}
