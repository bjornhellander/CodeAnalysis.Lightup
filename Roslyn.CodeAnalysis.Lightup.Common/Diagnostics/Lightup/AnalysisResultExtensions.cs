// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Diagnostics.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.</summary>
    public static class AnalysisResultExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Diagnostics.AnalysisResult";

        private delegate System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.AdditionalText, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>>> AdditionalFileDiagnosticsGetterDelegate(Microsoft.CodeAnalysis.Diagnostics.AnalysisResult? _obj);

        private static readonly AdditionalFileDiagnosticsGetterDelegate AdditionalFileDiagnosticsGetterFunc;

        static AnalysisResultExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AdditionalFileDiagnosticsGetterFunc = LightupHelper.CreateInstanceGetAccessor<AdditionalFileDiagnosticsGetterDelegate>(wrappedType, nameof(AdditionalFileDiagnostics));
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.AdditionalText, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>>> AdditionalFileDiagnostics(this Microsoft.CodeAnalysis.Diagnostics.AnalysisResult _obj)
            => AdditionalFileDiagnosticsGetterFunc(_obj);
    }
}
