// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Diagnostics.Lightup
{
    /// <summary>Provides lightup support for class Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.</summary>
    public static partial class AnalyzerOptionsExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions";

        private delegate Microsoft.CodeAnalysis.Diagnostics.Lightup.AnalyzerConfigOptionsProviderWrapper AnalyzerConfigOptionsProviderGetterDelegate(Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions? _obj);

        private static readonly AnalyzerConfigOptionsProviderGetterDelegate AnalyzerConfigOptionsProviderGetterFunc;

        static AnalyzerOptionsExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            AnalyzerConfigOptionsProviderGetterFunc = LightupHelper.CreateInstanceGetAccessor<AnalyzerConfigOptionsProviderGetterDelegate>(wrappedType, nameof(AnalyzerConfigOptionsProvider));
        }

        /// <summary>Property added in version 3.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Diagnostics.Lightup.AnalyzerConfigOptionsProviderWrapper AnalyzerConfigOptionsProvider(this Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions _obj)
            => AnalyzerConfigOptionsProviderGetterFunc(_obj);
    }
}
