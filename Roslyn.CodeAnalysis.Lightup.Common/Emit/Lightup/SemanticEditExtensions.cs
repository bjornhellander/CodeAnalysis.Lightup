// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using Microsoft.CodeAnalysis.Lightup;

namespace Microsoft.CodeAnalysis.Emit.Lightup
{
    /// <summary>Provides lightup support for struct Microsoft.CodeAnalysis.Emit.SemanticEdit.</summary>
    public static class SemanticEditExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Emit.SemanticEdit";

        private delegate Microsoft.CodeAnalysis.Emit.Lightup.MethodInstrumentationWrapper InstrumentationGetterDelegate(Microsoft.CodeAnalysis.Emit.SemanticEdit? _obj);

        private static readonly InstrumentationGetterDelegate InstrumentationGetterFunc;

        static SemanticEditExtensions()
        {
            var wrappedType = LightupHelper.FindType(WrappedTypeName);

            InstrumentationGetterFunc = LightupHelper.CreateInstanceGetAccessor<InstrumentationGetterDelegate>(wrappedType, nameof(Instrumentation));
        }

        /// <summary>Property added in version 4.8.0.0.</summary>
        public static Microsoft.CodeAnalysis.Emit.Lightup.MethodInstrumentationWrapper Instrumentation(this Microsoft.CodeAnalysis.Emit.SemanticEdit _obj)
            => InstrumentationGetterFunc(_obj);
    }
}
