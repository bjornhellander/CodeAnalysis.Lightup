// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Operations.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Emit.Lightup
{
    /// <summary>Struct added in Roslyn version </summary>
    public static class EditAndContinueMethodDebugInformationExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation";

        public static readonly Type? WrappedType;

        static EditAndContinueMethodDebugInformationExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);
        }
    }
}
