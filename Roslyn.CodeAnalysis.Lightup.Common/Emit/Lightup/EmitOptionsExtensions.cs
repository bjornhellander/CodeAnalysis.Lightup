// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Emit.Lightup
{
    /// <summary>Class added in Roslyn version </summary>
    public static class EmitOptionsExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Emit.EmitOptions";

        public static readonly Type? WrappedType;

        private delegate Encoding? DefaultSourceFileEncodingGetterDelegate(EmitOptions? _obj);
        private delegate Encoding? FallbackSourceFileEncodingGetterDelegate(EmitOptions? _obj);

        private delegate EmitOptions WithDefaultSourceFileEncodingDelegate0(EmitOptions? _obj, Encoding? defaultSourceFileEncoding);
        private delegate EmitOptions WithFallbackSourceFileEncodingDelegate1(EmitOptions? _obj, Encoding? fallbackSourceFileEncoding);

        private static readonly DefaultSourceFileEncodingGetterDelegate DefaultSourceFileEncodingGetterFunc;
        private static readonly FallbackSourceFileEncodingGetterDelegate FallbackSourceFileEncodingGetterFunc;

        private static readonly WithDefaultSourceFileEncodingDelegate0 WithDefaultSourceFileEncodingFunc0;
        private static readonly WithFallbackSourceFileEncodingDelegate1 WithFallbackSourceFileEncodingFunc1;

        static EmitOptionsExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            DefaultSourceFileEncodingGetterFunc = LightupHelper.CreateGetAccessor<DefaultSourceFileEncodingGetterDelegate>(WrappedType, nameof(DefaultSourceFileEncoding));
            FallbackSourceFileEncodingGetterFunc = LightupHelper.CreateGetAccessor<FallbackSourceFileEncodingGetterDelegate>(WrappedType, nameof(FallbackSourceFileEncoding));

            WithDefaultSourceFileEncodingFunc0 = LightupHelper.CreateMethodAccessor<WithDefaultSourceFileEncodingDelegate0>(WrappedType, nameof(WithDefaultSourceFileEncoding));
            WithFallbackSourceFileEncodingFunc1 = LightupHelper.CreateMethodAccessor<WithFallbackSourceFileEncodingDelegate1>(WrappedType, nameof(WithFallbackSourceFileEncoding));
        }

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static Encoding? DefaultSourceFileEncoding(this EmitOptions _obj)
            => DefaultSourceFileEncodingGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static Encoding? FallbackSourceFileEncoding(this EmitOptions _obj)
            => FallbackSourceFileEncodingGetterFunc(_obj);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static EmitOptions WithDefaultSourceFileEncoding(this EmitOptions wrappedObject, Encoding? defaultSourceFileEncoding)
            => WithDefaultSourceFileEncodingFunc0(wrappedObject, defaultSourceFileEncoding);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static EmitOptions WithFallbackSourceFileEncoding(this EmitOptions wrappedObject, Encoding? fallbackSourceFileEncoding)
            => WithFallbackSourceFileEncodingFunc1(wrappedObject, fallbackSourceFileEncoding);
    }
}
