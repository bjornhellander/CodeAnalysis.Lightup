// Copyright © Björn Hellander 2024
// Licensed under the MIT License. See LICENSE.txt in the repository root for license information.

// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.IO;
using System.Reflection;
using System.Reflection.Metadata;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Emit;
using Microsoft.CodeAnalysis.Lightup;
using Microsoft.CodeAnalysis.Operations.Lightup;
using Microsoft.CodeAnalysis.Text;

namespace Microsoft.CodeAnalysis.Operations.Lightup
{
    public static class OperationVisitorExtensions
    {
        private const string WrappedTypeName = "Microsoft.CodeAnalysis.Operations.OperationVisitor";

        public static readonly Type? WrappedType;

        private delegate void VisitAttributeDelegate0(OperationVisitor? _obj, IAttributeOperationWrapper operation);
        private delegate void VisitBinaryPatternDelegate1(OperationVisitor? _obj, IBinaryPatternOperationWrapper operation);
        private delegate void VisitFunctionPointerInvocationDelegate2(OperationVisitor? _obj, IFunctionPointerInvocationOperationWrapper operation);
        private delegate void VisitImplicitIndexerReferenceDelegate3(OperationVisitor? _obj, IImplicitIndexerReferenceOperationWrapper operation);
        private delegate void VisitInlineArrayAccessDelegate4(OperationVisitor? _obj, IInlineArrayAccessOperationWrapper operation);
        private delegate void VisitInterpolatedStringAdditionDelegate5(OperationVisitor? _obj, IInterpolatedStringAdditionOperationWrapper operation);
        private delegate void VisitInterpolatedStringAppendDelegate6(OperationVisitor? _obj, IInterpolatedStringAppendOperationWrapper operation);
        private delegate void VisitInterpolatedStringHandlerArgumentPlaceholderDelegate7(OperationVisitor? _obj, IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper operation);
        private delegate void VisitInterpolatedStringHandlerCreationDelegate8(OperationVisitor? _obj, IInterpolatedStringHandlerCreationOperationWrapper operation);
        private delegate void VisitListPatternDelegate9(OperationVisitor? _obj, IListPatternOperationWrapper operation);
        private delegate void VisitNegatedPatternDelegate10(OperationVisitor? _obj, INegatedPatternOperationWrapper operation);
        private delegate void VisitPropertySubpatternDelegate11(OperationVisitor? _obj, IPropertySubpatternOperationWrapper operation);
        private delegate void VisitRecursivePatternDelegate12(OperationVisitor? _obj, IRecursivePatternOperationWrapper operation);
        private delegate void VisitRelationalPatternDelegate13(OperationVisitor? _obj, IRelationalPatternOperationWrapper operation);
        private delegate void VisitSlicePatternDelegate14(OperationVisitor? _obj, ISlicePatternOperationWrapper operation);
        private delegate void VisitTypePatternDelegate15(OperationVisitor? _obj, ITypePatternOperationWrapper operation);
        private delegate void VisitUsingDeclarationDelegate16(OperationVisitor? _obj, IUsingDeclarationOperationWrapper operation);
        private delegate void VisitUtf8StringDelegate17(OperationVisitor? _obj, IUtf8StringOperationWrapper operation);
        private delegate void VisitWithDelegate18(OperationVisitor? _obj, IWithOperationWrapper operation);

        private static readonly VisitAttributeDelegate0 VisitAttributeFunc0;
        private static readonly VisitBinaryPatternDelegate1 VisitBinaryPatternFunc1;
        private static readonly VisitFunctionPointerInvocationDelegate2 VisitFunctionPointerInvocationFunc2;
        private static readonly VisitImplicitIndexerReferenceDelegate3 VisitImplicitIndexerReferenceFunc3;
        private static readonly VisitInlineArrayAccessDelegate4 VisitInlineArrayAccessFunc4;
        private static readonly VisitInterpolatedStringAdditionDelegate5 VisitInterpolatedStringAdditionFunc5;
        private static readonly VisitInterpolatedStringAppendDelegate6 VisitInterpolatedStringAppendFunc6;
        private static readonly VisitInterpolatedStringHandlerArgumentPlaceholderDelegate7 VisitInterpolatedStringHandlerArgumentPlaceholderFunc7;
        private static readonly VisitInterpolatedStringHandlerCreationDelegate8 VisitInterpolatedStringHandlerCreationFunc8;
        private static readonly VisitListPatternDelegate9 VisitListPatternFunc9;
        private static readonly VisitNegatedPatternDelegate10 VisitNegatedPatternFunc10;
        private static readonly VisitPropertySubpatternDelegate11 VisitPropertySubpatternFunc11;
        private static readonly VisitRecursivePatternDelegate12 VisitRecursivePatternFunc12;
        private static readonly VisitRelationalPatternDelegate13 VisitRelationalPatternFunc13;
        private static readonly VisitSlicePatternDelegate14 VisitSlicePatternFunc14;
        private static readonly VisitTypePatternDelegate15 VisitTypePatternFunc15;
        private static readonly VisitUsingDeclarationDelegate16 VisitUsingDeclarationFunc16;
        private static readonly VisitUtf8StringDelegate17 VisitUtf8StringFunc17;
        private static readonly VisitWithDelegate18 VisitWithFunc18;

        static OperationVisitorExtensions()
        {
            WrappedType = LightupHelper.FindType(WrappedTypeName);

            VisitAttributeFunc0 = LightupHelper.CreateInstanceMethodAccessor<VisitAttributeDelegate0>(WrappedType, nameof(VisitAttribute));
            VisitBinaryPatternFunc1 = LightupHelper.CreateInstanceMethodAccessor<VisitBinaryPatternDelegate1>(WrappedType, nameof(VisitBinaryPattern));
            VisitFunctionPointerInvocationFunc2 = LightupHelper.CreateInstanceMethodAccessor<VisitFunctionPointerInvocationDelegate2>(WrappedType, nameof(VisitFunctionPointerInvocation));
            VisitImplicitIndexerReferenceFunc3 = LightupHelper.CreateInstanceMethodAccessor<VisitImplicitIndexerReferenceDelegate3>(WrappedType, nameof(VisitImplicitIndexerReference));
            VisitInlineArrayAccessFunc4 = LightupHelper.CreateInstanceMethodAccessor<VisitInlineArrayAccessDelegate4>(WrappedType, nameof(VisitInlineArrayAccess));
            VisitInterpolatedStringAdditionFunc5 = LightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringAdditionDelegate5>(WrappedType, nameof(VisitInterpolatedStringAddition));
            VisitInterpolatedStringAppendFunc6 = LightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringAppendDelegate6>(WrappedType, nameof(VisitInterpolatedStringAppend));
            VisitInterpolatedStringHandlerArgumentPlaceholderFunc7 = LightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringHandlerArgumentPlaceholderDelegate7>(WrappedType, nameof(VisitInterpolatedStringHandlerArgumentPlaceholder));
            VisitInterpolatedStringHandlerCreationFunc8 = LightupHelper.CreateInstanceMethodAccessor<VisitInterpolatedStringHandlerCreationDelegate8>(WrappedType, nameof(VisitInterpolatedStringHandlerCreation));
            VisitListPatternFunc9 = LightupHelper.CreateInstanceMethodAccessor<VisitListPatternDelegate9>(WrappedType, nameof(VisitListPattern));
            VisitNegatedPatternFunc10 = LightupHelper.CreateInstanceMethodAccessor<VisitNegatedPatternDelegate10>(WrappedType, nameof(VisitNegatedPattern));
            VisitPropertySubpatternFunc11 = LightupHelper.CreateInstanceMethodAccessor<VisitPropertySubpatternDelegate11>(WrappedType, nameof(VisitPropertySubpattern));
            VisitRecursivePatternFunc12 = LightupHelper.CreateInstanceMethodAccessor<VisitRecursivePatternDelegate12>(WrappedType, nameof(VisitRecursivePattern));
            VisitRelationalPatternFunc13 = LightupHelper.CreateInstanceMethodAccessor<VisitRelationalPatternDelegate13>(WrappedType, nameof(VisitRelationalPattern));
            VisitSlicePatternFunc14 = LightupHelper.CreateInstanceMethodAccessor<VisitSlicePatternDelegate14>(WrappedType, nameof(VisitSlicePattern));
            VisitTypePatternFunc15 = LightupHelper.CreateInstanceMethodAccessor<VisitTypePatternDelegate15>(WrappedType, nameof(VisitTypePattern));
            VisitUsingDeclarationFunc16 = LightupHelper.CreateInstanceMethodAccessor<VisitUsingDeclarationDelegate16>(WrappedType, nameof(VisitUsingDeclaration));
            VisitUtf8StringFunc17 = LightupHelper.CreateInstanceMethodAccessor<VisitUtf8StringDelegate17>(WrappedType, nameof(VisitUtf8String));
            VisitWithFunc18 = LightupHelper.CreateInstanceMethodAccessor<VisitWithDelegate18>(WrappedType, nameof(VisitWith));
        }

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static void VisitAttribute(this OperationVisitor _obj, IAttributeOperationWrapper operation)
            => VisitAttributeFunc0(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitBinaryPattern(this OperationVisitor _obj, IBinaryPatternOperationWrapper operation)
            => VisitBinaryPatternFunc1(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitFunctionPointerInvocation(this OperationVisitor _obj, IFunctionPointerInvocationOperationWrapper operation)
            => VisitFunctionPointerInvocationFunc2(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitImplicitIndexerReference(this OperationVisitor _obj, IImplicitIndexerReferenceOperationWrapper operation)
            => VisitImplicitIndexerReferenceFunc3(_obj, operation);

        /// <summary>Added in Roslyn version 4.8.0.0</summary>
        public static void VisitInlineArrayAccess(this OperationVisitor _obj, IInlineArrayAccessOperationWrapper operation)
            => VisitInlineArrayAccessFunc4(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitInterpolatedStringAddition(this OperationVisitor _obj, IInterpolatedStringAdditionOperationWrapper operation)
            => VisitInterpolatedStringAdditionFunc5(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitInterpolatedStringAppend(this OperationVisitor _obj, IInterpolatedStringAppendOperationWrapper operation)
            => VisitInterpolatedStringAppendFunc6(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitInterpolatedStringHandlerArgumentPlaceholder(this OperationVisitor _obj, IInterpolatedStringHandlerArgumentPlaceholderOperationWrapper operation)
            => VisitInterpolatedStringHandlerArgumentPlaceholderFunc7(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitInterpolatedStringHandlerCreation(this OperationVisitor _obj, IInterpolatedStringHandlerCreationOperationWrapper operation)
            => VisitInterpolatedStringHandlerCreationFunc8(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitListPattern(this OperationVisitor _obj, IListPatternOperationWrapper operation)
            => VisitListPatternFunc9(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitNegatedPattern(this OperationVisitor _obj, INegatedPatternOperationWrapper operation)
            => VisitNegatedPatternFunc10(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitPropertySubpattern(this OperationVisitor _obj, IPropertySubpatternOperationWrapper operation)
            => VisitPropertySubpatternFunc11(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitRecursivePattern(this OperationVisitor _obj, IRecursivePatternOperationWrapper operation)
            => VisitRecursivePatternFunc12(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitRelationalPattern(this OperationVisitor _obj, IRelationalPatternOperationWrapper operation)
            => VisitRelationalPatternFunc13(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitSlicePattern(this OperationVisitor _obj, ISlicePatternOperationWrapper operation)
            => VisitSlicePatternFunc14(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitTypePattern(this OperationVisitor _obj, ITypePatternOperationWrapper operation)
            => VisitTypePatternFunc15(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitUsingDeclaration(this OperationVisitor _obj, IUsingDeclarationOperationWrapper operation)
            => VisitUsingDeclarationFunc16(_obj, operation);

        /// <summary>Added in Roslyn version 4.4.0.0</summary>
        public static void VisitUtf8String(this OperationVisitor _obj, IUtf8StringOperationWrapper operation)
            => VisitUtf8StringFunc17(_obj, operation);

        /// <summary>Added in Roslyn version 3.8.0.0</summary>
        public static void VisitWith(this OperationVisitor _obj, IWithOperationWrapper operation)
            => VisitWithFunc18(_obj, operation);
    }
}
